<TITLE>Registro lezioni AA 98-99 del Corso di
Fondamenti di Informatica II - primo modulo,
Universit&agrave; di Roma "La Sapienza"</H2>
</TITLE>



<CENTER>
<H2>Diploma Universitario in Ingegneria Informatica</H2>
<H1>Fondamenti di Informatica II - primo modulo</H1>
<H2> Lezioni faccia a faccia A.A. 1998-99</H2>
<H3>docente: <A HREF="http://www.dis.uniroma1.it/~lenzerini"> 
              Maurizio Lenzerini</A></H3>
</CENTER>

<HR>

<B>Materiale didattico: testi adottati</B>
<P>
<B>[T1]</B>  M. Cadoli, M. Lenzerini, P. Naggar, A. Schaerf,
     <A HREF="/pub/clns">
<I>Fondamenti della progettazione dei programmi: principi, tecniche e loro applicazione in C++</I></A>, Citt&#225;<I>Studi</I>Edizioni, UTET Libreria,
1997. <BR>

<B>[T2]</B> M. Cadoli, E. Panizzi, A. Schaerf., M. Lenzerini.
            <A HREF="/pub/clps">
            <EM>Esercizi di progettazione dei programmi in C++.</EM></A>
            Citt&#225;<I>Studi</I>Edizioni, UTET Libreria, 1998.<BR>

<B>[T3]</B> C. Batini, L. Carlucci Aiello, M.  Lenzerini, A. Miola,
A. Marchetti Spaccamela, <I>Fondamenti di Programmazione dei Calcolatori
Elettronici, </I>Franco Angeli, 4a edizione, 1992.<BR>

<P>

<B>Materiale didattico: testo consigliato</B>
<P>
<B>[T4]</B>   Capper, <I>Introduzione al C++</I>, McGraw Hill, 1997.<BR>


<P>


<!--

SPECIFICA:

14 ore ripasso C++
16 ore classi C++
10 ore progettazione - concettualizzazione
12 ore progettazione - realizzazione
8  ore ereditarieta'
------------------------------------------
60 ore totale


-->



<HR>
<CENTER>
<H2>Lezioni faccia a faccia - tabella riassuntiva</H2>
</CENTER>


<CENTER>
<TABLE BORDER WIDTH="90%" >
<TR>
<TD VALIGN=CENTER WIDTH="20%"><I><FONT COLOR="#008000">Settimana</FONT></I></TD>

<TD VALIGN=TOP WIDTH="10%"><I><FONT COLOR="#008000">Argomento</FONT></I></TD>

<TD VALIGN=CENTER WIDTH="25%"><I><FONT COLOR="#008000">Lunedi (ore 10-12)</FONT></I></TD>
<TD VALIGN=CENTER WIDTH="25%"><I><FONT COLOR="#008000">Mercoledi (ore 10-13)</FONT></I></TD>

<TD VALIGN=CENTER WIDTH="25%"><I><FONT COLOR="#008000">Giovedi (ore 10-12)</FONT></I></TD>
</TR>

<TR>
<TD VALIGN=CENTER WIDTH="15%"><I><FONT COLOR="#008000">1 (5-9 ott)</FONT></I></TD>
<TD VALIGN=TOP WIDTH="23%"><FONT COLOR=blue>Introduzione al C++</FONT></TD>
<TD VALIGN=CENTER WIDTH="23%"> Introduzione al corso e al C++
     <FONT COLOR=red>(<A HREF="#L1"><FONT COLOR=red>Lez 1,2</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%"> Vettori in C++ <BR>
   <FONT COLOR=red>(<A HREF="#M1"><FONT COLOR=red>Lez 3,4,5</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="25%"> Laboratorio su introduzione al C++</A>
     <FONT COLOR=red>(<A HREF="#G1"><FONT COLOR=red>Lez 6,7</FONT></A>)</FONT>
</A>)</TD>
</TR>
<TR>
<TD VALIGN=CENTER WIDTH="15%"><I><FONT COLOR="#008000">2 (12-16 ott)</FONT></I></TD>
<TD VALIGN=TOP WIDTH="23%"><FONT COLOR=blue>Introduzione al C++</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Matrici e funzioni in C++
     <FONT COLOR=red>(<A HREF="#L2"><FONT COLOR=red>Lez 8,9</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Record e puntatori in C++
 <FONT COLOR=red>(<A HREF="#M2"><FONT COLOR=red>Lez 10,11,12</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Laboratorio su funzioni e puntatori in C++
 <FONT COLOR=red>(<A HREF="#G2"><FONT COLOR=red>Lez 13,14</FONT></A>)</FONT>
</TD>
</TR>
<TR>
<TD VALIGN=CENTER WIDTH="20%"><I><FONT COLOR="#008000">3 (19-23 ott)</FONT></I></TD>
<TD VALIGN=TOP WIDTH="23%"><FONT COLOR=blue>Classi in C++</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">La ricorsione<BR>
 <FONT COLOR=red>(<A HREF="#L3"><FONT COLOR=red>Lez 15,16</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Introduzione alle classi
 <FONT COLOR=red>(<A HREF="#M3"><FONT COLOR=red>Lez 17,18,19</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Laboratorio su classi in C++
 <FONT COLOR=red>(<A HREF="#G3"><FONT COLOR=red>Lez 20,21</FONT></A>)</FONT>
</TD>
</TR>
<TR>
<TD VALIGN=CENTER WIDTH="20%"><I><FONT COLOR="#008000">4 (26-30 ott)</FONT></I></TD>
<TD VALIGN=TOP WIDTH="23%"><FONT COLOR=blue>Classi in C++</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Costruttori e distruttori
 <FONT COLOR=red>(<A HREF="#L4"><FONT COLOR=red>Lez 22,23</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Il problema dell'interferenza<BR>
 <FONT COLOR=red>(<A HREF="#M4"><FONT COLOR=red>Lez 24,25,26</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Laboratorio su classi in C++
 <FONT COLOR=red>(<A HREF="#G4"><FONT COLOR=red>Lez 27,28</FONT></A>)</FONT>
</TD>
</TR>
<TR>
<TD VALIGN=CENTER WIDTH="20%"><I><FONT COLOR="#008000">5 (2-6 nov)</FONT></I></TD>
<TD VALIGN=TOP WIDTH="23%"><FONT COLOR=blue>Principi di progettazione</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Ciclo di vita e qualita' del software<BR>
 <FONT COLOR=red>(<A HREF="#L5"><FONT COLOR=red>Lez 29,30</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Modularizzazione<BR>
 <FONT COLOR=red>(<A HREF="#M5"><FONT COLOR=red>Lez 31,32,33</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Schema concettuale e laboratorio sulla modularizzazione<BR>
 <FONT COLOR=red>(<A HREF="#G5"><FONT COLOR=red>Lez 34,35</FONT></A>)</FONT>
</TD>
</TR>
<TR>
<TD VALIGN=CENTER WIDTH="20%"><I><FONT COLOR="#008000">6 (9-13 nov)</FONT></I></TD>
<TD VALIGN=TOP WIDTH="23%"><FONT COLOR=blue>Concettualizzazione</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%"><center>-------------------</center></TD>
<TD VALIGN=CENTER WIDTH="23%"><center>-------------------</center></TD>
<TD VALIGN=CENTER WIDTH="23%">Il linguaggio di specifica di tipi astratti
 <FONT COLOR=red>(<A HREF="#G6"><FONT COLOR=red>Lez 36,37</FONT></A>)</FONT>
</TD>
</TR>
<TR>
<TD VALIGN=CENTER WIDTH="20%"><I><FONT COLOR="#008000">7 (16-20 nov)</FONT></I></TD>
<TD VALIGN=TOP WIDTH="23%"><FONT COLOR=blue>Realizzazione</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">La specifica di tipi astratti
 <FONT COLOR=red>(<A HREF="#L7"><FONT COLOR=red>Lez 38,39</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Schemi realizzativi funzionali
 <FONT COLOR=red>(<A HREF="#M7"><FONT COLOR=red>Lez 40,41,42</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Laboratorio su realizzazione<BR>
 <FONT COLOR=red>(<A HREF="#G7"><FONT COLOR=red>Lez 43,44</FONT></A>)</FONT>
</TD>
</TR>
<TR>
<TD VALIGN=CENTER WIDTH="20%"><I><FONT COLOR="#008000">8 (23-27 nov)</FONT></I></TD>
<TD VALIGN=TOP WIDTH="23%"><FONT COLOR=blue>Realizzazione</FONT>
<TD VALIGN=CENTER WIDTH="23%">Schemi realizzativi con side-effect
 <FONT COLOR=red>(<A HREF="#L8"><FONT COLOR=red>Lez 45,46</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Realizzazione di relazioni
 <FONT COLOR=red>(<A HREF="#M8"><FONT COLOR=red>Lez 47,48,49</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Laboratorio su realizzazione<BR>
 <FONT COLOR=red>(<A HREF="#G8"><FONT COLOR=red>Lez 50,51</FONT></A>)</FONT>
</TD>
</TR>
<TR>
<TD VALIGN=CENTER WIDTH="20%"><I><FONT COLOR="#008000">9 (30 nov - 4 dic)</FONT></I></TD>
<TD VALIGN=TOP WIDTH="23%"><FONT COLOR=blue>Ereditarieta'</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">L'ereditarieta' in C++
 <FONT COLOR=red>(<A HREF="#L9"><FONT COLOR=red>Lez 52,53</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">L'uso della ereditarieta'
 <FONT COLOR=red>(<A HREF="#M9"><FONT COLOR=red>Lez 54,55,56</FONT></A>)</FONT>
</TD>
<TD VALIGN=CENTER WIDTH="23%">Laboratorio su ereditarieta'</I>
 <FONT COLOR=red>(<A HREF="#G9"><FONT COLOR=red>Lez 57,58</FONT></A>)</FONT>
</TD>
</TR>
<!--
  <TR>
  <TD VALIGN=CENTER WIDTH="20%"><I><FONT COLOR="#008000"></FONT></I></TD>
  <TD VALIGN=TOP WIDTH="23%">&nbsp;</TD>
  <TD VALIGN=CENTER WIDTH="23%">&nbsp;</TD>
  <TD VALIGN=CENTER WIDTH="23%"><B><FONT COLOR="#FF0000">ESAME</FONT></B>
  <P><FONT COLOR="#0000FF">XX dicembre</FONT></TD>
  <TD VALIGN=CENTER WIDTH="23%">&nbsp;</TD>
  </TR>
-->
</TABLE>
</CENTER>

<P>
<HR>
<CENTER>
<H2>Lezioni faccia a faccia - dettaglio</H2>
</CENTER>




<HR>
<A NAME="L1">
<UL>
  <LI> <B>Lezione 1,2 - 5/10/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B>[T1, Cap.3 fino a pag. 55]
                                          [T4, Cap. 2 e Cap. 4]
                <UL> 
                  <LI> Presentazione del corso
                  <LI> Struttura di un programma C++
                  <LI> Primi programmi C++:
                       <A HREF="primiprogrammi/somma10.cpp">somma dei primi
                       10 numeri interi</A>
                       e <A HREF="primiprogrammi/sommaN.cpp">somma dei primi N
                       numeri interi</A>
                  <LI> Istruzioni, cicli while, dichiarazioni, istruzioni di IO
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>
               <UL> 
                  <LI> Struttura del corso e sue relazioni con altre corsi
                  <LI> Materiale didattico che si utilizza nel corso
                      (si veda anche il
                       <A HREF="programmadip98-99.html"> programma
                       d'esame</A>)
                  <LI> Differenza tra programmazione e progettazione del 
                       software
                  <LI> Scrivere semplici programmi C++
                </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Scrivere e provare un programma C++ che legga un intero
                       N, legga poi N numeri interi e ne calcoli la somma
                       (<A HREF="primiprogrammi/leggiNsomma.cpp">soluzione</A>)
                </UL>
       </UL>
</UL>


<HR>
<A NAME="M1">
<UL>
  <LI> <B>Lezioni 3,4,5 - 7/10/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B> [T1, Cap.3 fino a pag. 55] 
                                           [T4, Cap. 2 e Cap. 4]
                <UL> 
                   <LI> Istruzione if
                   <LI> Cicli
                   <LI> Differenza tra dichiarazione e definizione
                   <LI> Array in C++
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL>
                  <LI> Come si dichiarano array in C++
                  <LI> Scrivere e provare semplici programmi C++
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                   <LI> Scrivere un programma C++ per la lettura di N numeri e
                        calcolo del massimo 
                </UL>
       </UL>
</UL>    


<HR>

<UL>
<A NAME="G1">
   <LI> <B>Lezioni 6,7 - 8/10/98 - in laboratorio</B>
        <UL>
           <LI> <B> Argomenti trattati</B> 
                <UL> 
                   <LI> <A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-10-08/cosasifa.txt"> Semplici programmi in C++</A>
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Scrivere, compilare ed eseguire semplici programmi C++
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Tutti quelli che non si riesce a finire in laboratorio
                       (<A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-10-08">soluzioni</A>)
                </UL>
       </UL>
</UL>    


<HR>
<A NAME="L2">
<UL>
   <LI> <B>Lezioni 8,9 - 12/10/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B> [T1, Cap.3 fino a pag. 62] 
                                           [T4, Cap. 5]
                <UL> 
                   <LI> Matrici in C++
                   <LI> Funzioni in C++
                   <LI> Passaggio di parametri per valore e per variabile
                   <LI> Passaggio di array come parametri
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Come si dichiarano e definiscono matrici, funzioni e
                       procedure in C++
                  <LI> Progettare semplici funzioni in C++
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Scrivere una funzione C++ che legge una matrice,
                       memorizza in un vettore il massimo di ogni riga e poi
                       stampa il vettore
                       (<A HREF="matrici/maxrighe.cpp">soluzione</A>)
                </UL>
       </UL>
</UL>    


<HR>
<A NAME="M2">
<UL>
   <LI> <B>Lezioni 10,11,12 - 14/10/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B> [T1, Cap.3 fino a pag. 62] 
                                           [T4, Cap. 6]
                <UL> 
                   <LI> Record e puntatori in C++
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL>
                  <LI> Utilizzare record e puntatori per gestire strutture di
                       dati dinamiche
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Lettura di una lista, stampa della lista e verifica
                       della presenza di un eleemnto nella lista
                </UL>
       </UL>
</UL>    


<HR>
<UL>
<A NAME="G2">
   <LI> <B>Lezioni 13,14 - 15/10/98 - in laboratorio</B>
        <UL>
           <LI> <B> Argomenti trattati</B> 
                <UL> 
                   <LI> <A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-10-15/cosasifa.txt"> Programmi su record, puntatori e array dinamici in C++</A>
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Scrivere, compilare ed eseguire semplici programmi su
                       puntatori, record e array dinamici in C++
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Tutti quelli che non si riesce a finire in laboratorio
                       (<A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-10-15">soluzioni</A>)
                </UL>
       </UL>
</UL>    



<HR>
<A NAME="L3">
<UL>
   <LI> <B>Lezioni 15,16 - 19/10/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B>
                <UL> 
                   <LI> La ricorsione: principio di induzione, progettazione
                        di algoritmi ricorsivi, funzionamento di funzioni 
                        ricorsive
                   <LI> Esecuzione di funzioni ricorsive (si veda una
                        <A HREF="ricorsione/main.html"> simulazione del calcolo
                        del fattoriale </A>)
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL>
                  <LI> Progettare semplici funzioni ricorsive
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Progettare funzioni ricorsive per la somma, la
                       moltiplicazione e l'esponente di numeri naturali<BR> 
                       (assumendo di poter usare solo Succ e Pred), e scrivere
                       le corrispondenti funzioni C++
                       (si veda la <A HREF="ricorsione/naturali">
                       soluzione</A>)
                   <LI> Scrivere funzioni ricorsive per la stampa di una lista,
                        per la ricerca di un elemento in una lista, e
                        per l'eliminazione di un elemento da una lista
                   <LI> Ripasso su strutture dati e loro rappresentazioni:
                        vettori, matrici, liste, pile, code, insiemi, 
                        alberi binari [T4, Cap. 3]
                </UL>
       </UL>
</UL>    



<HR>
<A NAME="M3">
<UL>
   <LI> <B>Lezioni 17,18,19 - 21/10/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B> [T1, Cap. 4, par. 4.1-4.4] 
                <UL> 
                   <LI> Introduzione alle classi in C++
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Saper leggere semplici dichiarazioni di classi
                  <LI> Conoscere la distinzione tra campi dati e campi
                       funzioni, e tra campi pubblici e campi privati
                  <LI> Conoscere la distinzione tra file .h e file .cpp nella
                       definizione di classi
               </UL>
            <LI> <B> Esercizi proposti</B>
                <UL>
                   <LI> Terminare la definizione dei costruttori della classe
                        tempo
                </UL>
       </UL>
</UL>    


<HR>
<UL>
<A NAME="G3">
   <LI> <B>Lezioni 20,21 - 22/10/98 - in laboratorio</B>
        <UL>
           <LI> <B> Argomenti trattati</B> 
                <UL> 
                   <LI> <A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-10-22/cosasifa.txt"> Semplici esercizi su classi in C++</A>
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Scrivere, compilare ed eseguire semplici programmi su
                       classi
                </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Tutti quelli che non si riesce a finire in laboratorio
                       (<A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-10-22">soluzioni</A>)
                </UL>
       </UL>
</UL>    



<HR>
<A NAME="L4">
<UL>
   <LI> <B>Lezioni 22,23 - 26/10/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B> [T1, Cap. 4, par. 4.6, 4.11, 4.12]
                <UL> 
                   <LI> Costruttori
                   <LI> Cosa il C++ da' gratis ad una classe
                   <LI> Classi clienti di altre classi
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Saper utilizzare i costruttori nella
                       definizione di una classe
                  <LI> Sapere cosa il C++ da' per default ad una classe
                  <LI> Sper definire una classe cliente di un'altra
               </UL>
       </UL>
</UL>    


<HR>
<A NAME="M4">
<UL>
   <LI> <B>Lezioni 24,25,26 - 28/10/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B> [T1, Cap. 4, par. 4.14 - 4.19]
                <UL> 
                   <LI> Il problema dell'interfernza
                   <LI> Overloading di operatori
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Saper evitare il problema dell'interferenza
                  <LI> Sapere ridefinire operatori di classe
               </UL>
       </UL>
</UL>    


<HR>
<UL>
<A NAME="G4">
   <LI> <B>Lezioni 27,28 - 29/10/98 - in laboratorio</B>
        <UL>
           <LI> <B> Argomenti trattati</B> 
                <UL> 
                   <LI> <A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-10-29/cosasifa.txt"> Esercizi su classi in C++</A>
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Scrivere, compilare ed eseguire  programmi su
                       classi
                </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Tutti quelli che non si riesce a finire in laboratorio
                       (<A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-10-29">soluzioni</A>)
                </UL>
       </UL>
</UL>    



<HR>
<A NAME="L5">
<UL>
   <LI> <B>Lezioni 29,30 - 2/11/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B> [T1, Cap. 4, par. 4.21, 4.22,
                                            Cap. 1]
                <UL> 
                   <LI> Funzioni friend e template in C++
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Saper utilizzare le funzioni friend ed i tamplate
                       nella definizione di una classe
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Aggiungere gli operatori di input, output alla classe
                       Intero della esercitazione scorsa
                  <LI> Trasformare  l'operatore + della stessa classe in
                       funzione friend
                </UL>
       </UL>
</UL>    



<HR>
<A NAME="M5">
<UL>
   <LI> <B>Lezioni 31,32,33 - 4/11/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B> [T1, Cap. 4, Cap. 1]
                <UL> 
                   <LI> Ciclo di vita e qualita' del software
                   <LI> La fase di progettazione del sofware
                   <LI> Principi di progettazione
                   <LI> Tecniche di progettazione: la modularizzazione
                 </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Conoscere le fasi del ciclo di vita e le qualita' del
                       software ed i principi della progettazione
                  <LI> Cosa e' la modularizzazione
               </UL>
       </UL>
</UL>    

<HR>
<A NAME="G5">
<UL>
   <LI> <B>Lezioni 34,35 - 5/11/98 - in laboratorio</B>
        <UL>
           <LI> <B> Argomenti trattati</B> [T1, Cap. 2,9]
                <UL> 
                   <LI> La modularizzazione nella fase di concettualizzazione
                   <LI> La modularizzazione nella fase di realizzazione
                   <LI> <A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-11-05/cosasifa.txt"> Esercizio su
                        modularizazione in C++ (esercizio 1)</A>
                 </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Come si usa la tecnica della modularizzazione
                       nella progettazione del software
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> <A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-11-05/cosasifa.txt">
                       MasterMind (esercizio 2)</A>
                  <LI> Tutti quelli che non si riesce a finire in laboratorio
                     (<A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-11-05">soluzioni</A>)
                </UL>
       </UL>
</UL>    



<HR>
<A NAME="G6">
<UL>
   <LI> <B>Lezioni 36,37 - 12/11/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B> [T1, Cap. 2,10]
                <UL> 
                   <LI> La specifica di tipi astratti
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Il linguaggio di specifica dei tipi astratti
                  <LI> Saper analizzare la specifica di tipi astratti
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Analizzare la specifica di tutti i tipi astratti
                       riportati nel Cap. 10 di [T1]
                </UL>
       </UL>
</UL>    


<HR>
<A NAME="L7">
<UL>
   <LI> <B>Lezioni 38,39 - 16/11/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B> [T1, Cap. 10]
                <UL> 
                   <LI> Astrazioni di valori e astrazioni di entita'
                   <LI> Il tipo astratto Albero Binario
                   <LI> Il tipo astratto CassaCambio
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Saper fornire la specifica di un tipo astratto a
                       partire da una descrizione testuale del tipo
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                   <LI> <A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-11-12/cosasifa.txt"> Specifica di tipi astratti</A> (<A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-11-12/soluzione">soluzione</A>)
                </UL>
        </UL>
</UL>    


<HR>
<A NAME="M7">
<UL>
   <LI> <B>Lezioni 40,41,42 - 18/11/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B> [T1, Cap. 12]
                <UL> 
                   <LI> La realizzazione di tipi astratti mediante classi
                   <LI> Schemi realizzativi
                   <LI> Schema realizzativo funzionale con condivisione
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Il metodo generale per realizzare un tipo astratto
                       mediante una classe
                  <LI> Caratteristiche dei vari schemi realizzativi
                  <LI> Lo schema realizzativo funzionale con condivisione
               </UL>
        </UL>
</UL>    

<HR>
<A NAME="G7">
<UL>
   <LI> <B>Lezioni 43,44 - 19/11/98 - in laboratorio</B>
        <UL>
           <LI> <B> Argomenti trattati</B> [T1, Cap. 12]
                <UL> 
                   <LI> <A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-11-19/cosasifa.txt"> Esercizio su
                        schema funzionale con condivisione</A>
                 </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Realizzare tipi astratto in modo funzionale con
                       condivisione
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Tutti quelli che non si riesce a finire in laboratorio
                     (<A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-11-19">soluzioni</A>)
                </UL>
       </UL>
</UL>    



<HR>
<A NAME="L8">
<UL>
   <LI> <B>Lezioni 45,46 - 23/11/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B>  [T1, Cap. 12, par. 12.6]
                <UL> 
                   <LI> Schema realizzativo con side-effect senza condivisione
		   <LI> Progettazione della classe Insieme con lo schema
                        con side-effect senza condivisione
                </UL>
           <LI><B> Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> I principi generali con cui si progetta una classe
                       secondo lo schema con side-effect senza condivisione
                  <LI> Vantaggi e svantaggi del side-effect con condivisione
                  <LI> Confronto tra schemi realizzativi
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Scrivere il codice delle funzioni della classe Insieme
                       che realizza il tipo astratto con lo schema con 
                       side-effect senza condivisione
                </UL>
       </UL>
</UL>    



<HR>
<A NAME="M8">
<UL>
   <LI> <B>Lezioni 47,48,49 - 25/11/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B>  [T1, Cap. 10, par. 10.3, 
                                                 Cap. 12, par. 12.7 - 12.8]
                <UL> 
                   <LI> Il tipo astratto grafo e la sua specifica
                   <LI> I metodi di rappresentazione di grafi
		   <LI> Realizzazione delle relazioni has-a e has-many
                </UL>
           <LI><B> Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Cosa sono i grafi e come si rappresentano
                  <LI> Come si realizzano le relazioni has-a e has-many
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Realizzazione con side effect senza condivisione di
                       un grafo, secondo il metodo di rappresentazione 
                       mediante matrice di adiacenza
                       (si veda la <A HREF="grafi/grafoMA"> soluzione</A>)
                  <LI> Realizzazione con side effect senza condivisione di 
                       un grafo, utilizzando il metodo di rappresentazione 
                       mediante liste di successori
               </UL>
       </UL>
</UL>    




<HR>
<A NAME="G8">
<UL>
   <LI> <B>Lezioni 50,51 - 26/11/98 - al laboratorio</B>
        <UL>
           <LI> <B> Argomenti trattati</B> 
                <UL> 
                   <LI> <A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-11-26/cosasifa.txt"> Esercizio di realizzazione di un tipo astratto</A>
                </UL>
           <LI><B>Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> Partendo dalla specifica di un tipo astratto, 
                       progettare la classe che realizza il tipo secondo
               </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Tutti quelli che non si riesce a finire in laboratorio
                  (<A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-11-26">soluzione</A>)
                </UL>
       </UL>
</UL>    



<HR>
<A NAME = "L9">
<UL>
   <LI> <B>Lezione 52,53 - 30/11/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B>  [T1, Capp. 5,13,14]
                <UL> 
                   <LI> L'ereditarieta' in C++
		   <LI> Parte protetta di una classe
                   <LI> Costruttori e distruttori di classi derivate
                </UL>
           <LI><B> Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> I principi generali relativi alla derivazione tra classi
                  <LI> La ridefinizione di funzioni in classi derivate
               </UL>
       </UL>
</UL>    



<HR>
<A NAME = "M9">
<UL>
   <LI> <B>Lezione 54,55,56 - 2/12/98</B>
        <UL>
           <LI> <B> Argomenti trattati</B>  [T1, Cap. 5]
                <UL> 
                  <LI> Funzioni virtuali e classi astratte
                  <LI> Uso della ereditarieta' nella realizzazione di tipi
                       astratti
                </UL>
           <LI><B> Cosa lo studente dovrebbe sapere dopo la lezione</B>:
               <UL> 
                  <LI> I principi generali per utilizzare l'ereditarieta'
                       nella realizzazione di tipi astratti
               </UL>
       </UL>

</UL>    


<HR>
<A NAME="G9">
<UL>
   <LI> <B>Lezioni 57,58 - 3/12/98 - al laboratorio</B>
        <UL>
           <LI> <B> Argomenti trattati</B> 
                <UL> 
                   <LI>
                        <A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-12-03/cosasifa.txt"> Esercizio di realizzazione di un tipo astratto con ereditarieta'</A>
                </UL>
           <LI> <B> Esercizi proposti</B>
                <UL>
                  <LI> Tutti quelli che non si riesce a finire in laboratorio
                       (<A HREF="http://tibur.dis.uniroma1.it/program/fondii/diploma/esercitazioni/aa-98-99/98-12-03">soluzione</A>)
                  <LI> <A HREF="classi/albergo">Altro esercizio con
                        soluzione</A>
                </UL>
       </UL>
</UL>    




<HR>
<IMG ALIGN=left SRC="/PUB/AI/icone/back.gif" ALT="Back to">
Home page del <A HREF="http://www.dis.uniroma1.it/~lenzerini/didattica/fond2dip.html"> Corso di Fondamenti di Informatica II - primo modulo</A><BR>
del Diploma Universitario in Ingegneria Informatica dell'Universit&agrave di Roma "La Sapienza"

<BR CLEAR=left>


