<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<TITLE>1</TITLE>
</HEAD>
<BODY background="bgrnd.jpg">

<B><FONT SIZE=5><P>7) Tipi astratti ed ereditariet&agrave;</P>
</B></FONT><P ALIGN="RIGHT">Riferimenti: <B>[1a]</B> capitolo 13 e 14</P>
<hr>
<OL>

<I><LI>Rappresentazione dei tipi astratti</LI>
</I><P ALIGN="JUSTIFY">E' possibile far uso dell'ereditariet&agrave; quando il tipo astratto necessit&agrave; di metodi di rappresentazione pi&ugrave; specifici rispetto a quello adottato nella classe base.</P>
<P ALIGN="CENTER">Analisi di <a href="Grafo.h"> Grafo.h</a> e <a href="GrafoMA.h"> GrafoMA.h</a></P>
<I><LI>Classe base come supporto alla rappresentazione</LI></OL>
<DIR>
<DIR>

</I><P ALIGN="JUSTIFY">E' viceversa possibile far uso dell'ereditariet&agrave; per sfruttare quello che la classe base offre, in termini di rappresentazione dei valori che il tipo astratto realizza.  In questo caso si parla anche di <I>delegation</I>; in altri termini, la classe derivata "delega" la classe base a rappresentare i valori che la sottoclasse realizza.  In questi casi la derivazione &egrave; "privata" o "protetta"; viene cos&igrave; impedito all'utilizzatore della classe derivata l'utilizzo diretto di membri della classe base, concettualmente non in relazione con il tipo astratto definito.</P>
<P ALIGN="CENTER">Analisi di <a href="Vettore.h">Vettore.h</a> e <a href="Vettore.cpp">Vettore.cpp</a></P>
<P ALIGN="CENTER">Analisi di <a href="Piladelegation.h">Piladelegation.h</a> e <a href="Piladelegation.cpp">Piladelegation.cpp</a></P></DIR>
</DIR>
</BODY>
</HTML>
