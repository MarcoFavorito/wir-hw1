<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.6 [en] (X11; I; SunOS 5.5.1 sun4u) [Netscape]">
   <title>Diploma Universitario in Ingegneria Informatica
</title>
</head>
<body>

<center><b><font face="Palatino"><font size=+1>Diploma Universitario in
Ingegneria Informatica</font></font></b>
<p><b><font face="Palatino"><font size=+1>Corso di</font></font></b>
<p><b><font face="Palatino"><font size=+1>Fondamenti di Informatica II
(primo modulo)</font></font></b>
<p><font face="Palatino">Docente : Prof. <a href="http://www.dis.uniroma1.it/~degiacomo">Giuseppe
De Giacomo</a></font></center>

<p><br>
<br>
<p>
<hr>
<center><b><u><font face="Palatino">Materiale didattico</font></u></b></center>

<p><font face="Palatino"><u>Testo adottato</u>:</font>
<br><font face="Palatino"><b>[T1]</b> M. Cadoli, M. Lenzerini, P. Naggar,
A. Schaerf, <i><a href="/pub/clns">Fondamenti della progettazione dei programmi:
principi, tecniche e loro applicazione in C++</a></i>, Citta'StudiEdizioni,
UTET Libreria, 1997.</font>
<p><font face="Palatino"><u>Testi consigliati</u>:</font>
<br><font face="Palatino"><b>[T2]</b> Capper, <i>Introduzione al C++</i>,
McGraw Hill, 1997.</font>
<br><font face="Palatino"><b>[T3]</b> C. Batini, L. Carlucci Aiello, M.
Lenzerini, A. Miola, A. Marchetti Spaccamela, <i>Fondamenti di Programmazione
dei Calcolatori Elettronici, </i>Franco Angeli, 4a edizione, 1992.</font>
<br>
<hr>
<center>
<p><b><u><font face="Palatino">Programma d'esame per l'A.A. 2000/01 (non definitivo)</font></u></b></center>

<br>&nbsp;
<br>&nbsp;
<br>
<p><font face="Palatino">Note:</font>
<br><font face="Palatino"><i>(1) </i>Le sigle T1, T2, T3 si riferiscono
alla lista di testi che compongono il materiale didattico.</font>
<p><font face="Palatino"><i>(2)</i> Quando si cita un capitolo, si intende
che esso si deve studiare integralmente.</font>
<p><font face="Palatino"><i>(3)</i> Il testo T2 non &egrave; obbligatorio,
ma solo consigliato per approfondimenti sul linguaggio C++. Per approfondire
la conoscenza del C++, un qualunque altro testo (ad esempio il manuale
della Borland) che tratti gli argomenti citati &egrave; comunque accettabile.</font>
<p><font face="Palatino"><i>(4)</i> Il testo T3 pu&ograve; essere sostituito dal testo adottato per Fondamenti di Informatica I secondo modulo.</font>

<br>&nbsp;
<br>&nbsp;
<p><b><font face="Palatino">1. Considerazioni generali sullo sviluppo del
software</font></b>
<p><font face="Palatino">Il contesto organizzativo. Il ciclo di sviluppo
dei programmi. Le qualit&agrave; dei programmi.</font>
<p><font face="Palatino"><i>Materiale didattico</i> T1, Cap. 1</font>
<br>&nbsp;
<br>&nbsp;
<p><b><font face="Palatino">2. La fase di progettazione</font></b>
<p><font face="Palatino">Concettualizzazione e realizzazione. Astrazione
. Decomposizione. Tecniche di progettazione. Strumenti di progettazione.</font>
<p><font face="Palatino"><i>Materiale didattico</i> T1, Cap. 2</font>
<br>&nbsp;
<br>&nbsp;
<p><b><font face="Palatino">3. Elementi di base del C++</font></b>
<p><font face="Palatino">Struttura di un programma. Espressioni e istruzioni.
Strutture di controllo. Tipi di dato. Funzioni.</font>
<p><font face="Palatino"><i>Materiale didattico</i> T1, Cap. 3
<p><font face="Palatino">Consigliato: T2, Capp. 1,2,3,4,5,6,7</font>
<br>&nbsp;
<br>&nbsp;
<p><b><font face="Palatino">4. Classi in C++</font></b>
<p><font face="Palatino">Generalit&agrave;. Modello run-time. Elementi
privati e pubblici. Costruttori. Elementi di tipo static. Overloading di
operatori. Il problema dell'interferenza. Overloading dell'assegnazione
e del costruttore di copia. Distruttore. Funzioni friend. Template.</font>
<p><font face="Palatino"><i>Materiale didattico </i>T1, Cap. 4</font>
<p><font face="Palatino">Consigliato: T2, Capp. 8,9,10, Appendice A</font>
<br>&nbsp;
<br>&nbsp;
<p><b><font face="Palatino">5. Nozioni generali sulla modularizzazione</font></b>
<p><font face="Palatino">La nozione di modulo. Criteri per la modularizzazione.
Tipi di modularizzazione. La modularizzazione nella fase di concettualizzazione.
La modularizzazione nella fase di realizzazione. Schema di una metodologia
basata sulla modularizzazione.</font>
<p><font face="Palatino"><i>Materiale didattico</i> T1, Cap. 9</font>
<br>&nbsp;
<br>&nbsp;
<p><b><font face="Palatino">6. Modularizzazione per tipo astratto: concettualizzazione</font></b>
<p><font face="Palatino">La specifica dei tipi astratti. La specifica di
alcuni tipi astratti: boolean, coppia, pila, coda, array, lista semplice,
lista, insieme, albero binario, albero, grafo. Una classificazione di tipi
astratti.</font>
<p><font face="Palatino"><i>Materiale didattico</i> T1, Cap. 10</font>
<br>&nbsp;
<br>&nbsp;
<p><b><font face="Palatino">7. Rappresentazione di tipi astratti</font></b>
<p><font face="Palatino">Rappresentazioni di vettori e matrici. Rappresentazioni
di liste. Rappresentazioni di insiemi. Rappresentazioni di pile e code.
Rappresentazioni di alberi binari. Alberi binari di ricerca e loro rappresentazione.
Rappresentazioni di alberi N-ari. Rappresentazioni di grafi.</font>
<p><font face="Palatino"><i>Materiale didattico</i> T3, Cap. 3</font>
<br>&nbsp;
<br>&nbsp;
<p><b><font face="Palatino">8. Modularizzazione per tipo astratto: realizzazione</font></b>
<p><font face="Palatino">Incapsulamento, information hiding, overloading.
Dalla segnatura delle funzioni all'interfaccia di calle. La rappresentazione
dei valori del tipo. Schemi realizzativi. Scelta sulla realizzazione delle
operazioni. Scelta sulla condivisione di memoria. Realizzazioni funzionali
con condivisione, e con side effect senza condivisione. Realizzazione delle
relazioni tra moduli. Approfondimenti sulla metodologia di realizzazione
di tipi astratti mediante classi.</font>
<p><font face="Palatino"><i>Materiale didattico</i> T1, Cap. 12 (Par. 12.1,12.2,12.3,12.4,12.5,12.6
- tranne 12.6.2 e 12.6.4 - 12.8)</font>

<br>&nbsp;
<br>&nbsp;
<p><b><font face="Palatino">9. L'ereditariet&agrave;</font></b>
<p><font face="Palatino">Introduzione all'ereditariet&agrave;. Ereditariet&agrave;
in C++. Dichiarazione di classi derivate. Perte protetta di una classe.
Tipi di derivazione. Sovrapposizione di funzioni. Costruttori e distruttori
di classi derivate. Ereditariet&agrave; multipla. Uso dell'ereditariet&agrave;
per la realizzazione di tipi astratti. Realizzazione della relazione is-a.
Raffinamento della rappresentazione.
Classe base come supporto per la rappresentazione.
Altri usi della ereditariet&agrave;.</font>
<p><font face="Palatino"><i>Materiale didattico</i> T1, Capp. 5, 13</font>
<p><font face="Palatino">Consigliato: T2, Capp. 11,12,15</font>
<br>&nbsp;
<br>&nbsp;
<p><b><font face="Palatino">10. Esercizi e progetti su tipi astratti</font></b>
<p><font face="Palatino">Mulitiinsieme. Matrice quadrata sparsa. Insiemi
di interi in un intervallo. Albero. Sportello automatico di cambio valuta.
Ufficio con sportelli.</font>
<p><font face="Palatino"><i>Materiale didattico </i>T1, Cap. 14</font>

<p>
<hr><font size=-1>Ritorno alla <a href="index.html">home page del corso
di Fondamenti di Informatica II - primo modulo</a></font>
</body>
</html>
