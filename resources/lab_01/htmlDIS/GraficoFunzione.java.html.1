<!-- file generated with webcpp 0.6.2 http://webcpp.sf.net -->
<html>
<head>
<title>C:\Documents and Settings\Administrator\Documenti\Web\igea\lab\20020325\GraficoFunzione.java</title>
<meta name="Microsoft Border" content="tb, default">
</head>
<body bgcolor=#ffffff text=#000000 link=#ff0000 vlink=#666666 alink=#0000ff><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>

<p align="center">
</p>
<hr>
<p align="center">&nbsp;</p>

</td></tr><!--msnavigation--></table><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><!--msnavigation--><td valign="top">
<pre>


<b><font COLOR=#0000ff>import</font></b> java.applet.Applet;
<b><font COLOR=#0000ff>import</font></b> java.awt.geom.Ellipse2D;
<b><font COLOR=#0000ff>import</font></b> java.awt.geom.Line2D;
<b><font COLOR=#0000ff>import</font></b> java.awt.Graphics;
<b><font COLOR=#0000ff>import</font></b> java.awt.Graphics2D;
<b><font COLOR=#0000ff>import</font></b> java.awt.Color;

<font COLOR=#666666>/**
	&lt;b&gt;Scopo: &lt;/b&gt;fornire un esempio di tracciamento del grafico
	di una (o pi&ugrave;) funzioni, con trasformazione di &lt;i&gt;coordinate
	di mondo (WC)&lt;/i&gt; in &lt;i&gt;coordinate di dispositivo (DC)&lt;/i&gt;.
*/</font>

<b><font COLOR=#0000ff>public</font></b> <b><font COLOR=#0000ff>class</font></b> GraficoFunzione <b><font COLOR=#0000ff>extends</font></b> Applet
{
	<b><font COLOR=#0000ff>private</font></b> <b><font COLOR=#0000ff>int</font></b> npunti; <font COLOR=#666666>// num. campioni usati per tracciare il grafico</font>
	<b><font COLOR=#0000ff>private</font></b> <b><font COLOR=#0000ff>double</font></b> x1, x2, y1, y2; <font COLOR=#666666>// finestra di visualizzazione (WC)</font>
	<b><font COLOR=#0000ff>private</font></b> <b><font COLOR=#0000ff>int</font></b> maxx, maxy; <font COLOR=#666666>// dim. finestra applet (DC)</font>
	
	<b><font COLOR=#0000ff>public</font></b> <b><font COLOR=#0000ff>void</font></b> init()
	{
		System.out.println(<font COLOR=#ff0000>"init()"</font>);
	}

	<b><font COLOR=#0000ff>public</font></b> <b><font COLOR=#0000ff>void</font></b> start()
	{
		System.out.println(<font COLOR=#ff0000>"start()"</font>);
		ConsoleReader lettore = <b><font COLOR=#0000ff>new</font></b> ConsoleReader(System.in);
		System.out.print(<font COLOR=#ff0000>"Quanti punti? "</font>);
		<b><font COLOR=#0000ff>this</font></b>.npunti = lettore.readInt();
		System.out.print(<font COLOR=#ff0000>"Xmin = "</font>);
		<b><font COLOR=#0000ff>this</font></b>.x1 = lettore.readDouble();
		System.out.print(<font COLOR=#ff0000>"Xmax = "</font>);
		<b><font COLOR=#0000ff>this</font></b>.x2 = lettore.readDouble();
		System.out.print(<font COLOR=#ff0000>"Ymin = "</font>);
		<b><font COLOR=#0000ff>this</font></b>.y1 = lettore.readDouble();
		System.out.print(<font COLOR=#ff0000>"Ymax = "</font>);
		<b><font COLOR=#0000ff>this</font></b>.y2 = lettore.readDouble();
	}

	<b><font COLOR=#0000ff>public</font></b> <b><font COLOR=#0000ff>void</font></b> paint(Graphics g)
	{
		System.out.println(<font COLOR=#ff0000>"paint()"</font>);
		<b><font COLOR=#0000ff>this</font></b>.maxx = getWidth();
		<b><font COLOR=#0000ff>this</font></b>.maxy = getHeight();
		Graphics2D g2 = (Graphics2D)g;
		
		asseX(g2); 
		asseY(g2);
		
		<b><font COLOR=#0000ff>double</font></b> x = <b><font COLOR=#0000ff>this</font></b>.x1;
		<b><font COLOR=#0000ff>double</font></b> passo = (<b><font COLOR=#0000ff>double</font></b>)(<b><font COLOR=#0000ff>this</font></b>.x2 - <b><font COLOR=#0000ff>this</font></b>.x1) / (<b><font COLOR=#0000ff>this</font></b>.npunti - <font COLOR=#a900a9>1</font>);
		<b><font COLOR=#0000ff>while</font></b>(x &lt;= x2) {
			<b><font COLOR=#0000ff>double</font></b> y = f(x);
			<b><font COLOR=#0000ff>double</font></b> y2 = f2(x);
			<b><font COLOR=#0000ff>final</font></b> <b><font COLOR=#0000ff>int</font></b> EPS = <font COLOR=#a900a9>1</font>;
			Ellipse2D.Double punto = <b><font COLOR=#0000ff>new</font></b> Ellipse2D.Double(trasformaX(x) - EPS, 
			                               trasformaY(y) - EPS, <font COLOR=#a900a9>2</font>*EPS+<font COLOR=#a900a9>1</font>, <font COLOR=#a900a9>2</font>*EPS+<font COLOR=#a900a9>1</font>);
			Ellipse2D.Double punto2 = <b><font COLOR=#0000ff>new</font></b> Ellipse2D.Double(trasformaX(x) - EPS, 
			                               trasformaY(y2) - EPS, <font COLOR=#a900a9>2</font>*EPS+<font COLOR=#a900a9>1</font>, <font COLOR=#a900a9>2</font>*EPS+<font COLOR=#a900a9>1</font>);
			g2.fill(punto);
			Color col = g2.getColor();
			g2.setColor(Color.green);
			g2.fill(punto2);
			g2.setColor(col);
			x += passo;
		}
	}

	<b><font COLOR=#0000ff>private</font></b> <b><font COLOR=#0000ff>static</font></b> <b><font COLOR=#0000ff>double</font></b> f(<b><font COLOR=#0000ff>double</font></b> x) {
		<b><font COLOR=#0000ff>return</font></b> <font COLOR=#a900a9>1</font> + x*x / Math.sin(x);
	}
	
	<b><font COLOR=#0000ff>private</font></b> <b><font COLOR=#0000ff>static</font></b> <b><font COLOR=#0000ff>double</font></b> f2(<b><font COLOR=#0000ff>double</font></b> x) {
		<b><font COLOR=#0000ff>return</font></b> x*x;

	}
	
	<b><font COLOR=#0000ff>private</font></b> <b><font COLOR=#0000ff>double</font></b> trasformaX(<b><font COLOR=#0000ff>double</font></b> x) {
		<b><font COLOR=#0000ff>return</font></b> <b><font COLOR=#0000ff>this</font></b>.maxx * (x - <b><font COLOR=#0000ff>this</font></b>.x1) / (<b><font COLOR=#0000ff>this</font></b>.x2 - <b><font COLOR=#0000ff>this</font></b>.x1);
	}
	
	<b><font COLOR=#0000ff>private</font></b> <b><font COLOR=#0000ff>double</font></b> trasformaY(<b><font COLOR=#0000ff>double</font></b> y) {
		<b><font COLOR=#0000ff>return</font></b> <b><font COLOR=#0000ff>this</font></b>.maxy * (<b><font COLOR=#0000ff>this</font></b>.y2 - y) / (<b><font COLOR=#0000ff>this</font></b>.y2 - <b><font COLOR=#0000ff>this</font></b>.y1);
	}
	
	<b><font COLOR=#0000ff>private</font></b> <b><font COLOR=#0000ff>boolean</font></b> asseY(Graphics2D g2) {
		<b><font COLOR=#0000ff>if</font></b>(<b><font COLOR=#0000ff>this</font></b>.x1 * <b><font COLOR=#0000ff>this</font></b>.x2 &lt;= <font COLOR=#a900a9>0</font>) {
			Line2D.Double asse = <b><font COLOR=#0000ff>new</font></b> Line2D.Double(trasformaX(<font COLOR=#a900a9>0</font>), trasformaY(<b><font COLOR=#0000ff>this</font></b>.y1), 
			                           trasformaX(<font COLOR=#a900a9>0</font>), trasformaY(<b><font COLOR=#0000ff>this</font></b>.y2));
			<b><font COLOR=#0000ff>this</font></b>.drawAsse(g2, asse);
			<b><font COLOR=#0000ff>return</font></b> <b><font COLOR=#0000ff>true</font></b>;
		} <b><font COLOR=#0000ff>else</font></b> <b><font COLOR=#0000ff>return</font></b> <b><font COLOR=#0000ff>false</font></b>;
	}
			
	<b><font COLOR=#0000ff>private</font></b> <b><font COLOR=#0000ff>boolean</font></b> asseX(Graphics2D g2) {
		<b><font COLOR=#0000ff>if</font></b>(<b><font COLOR=#0000ff>this</font></b>.y1 * <b><font COLOR=#0000ff>this</font></b>.y2 &lt;= <font COLOR=#a900a9>0</font>) {
			Line2D.Double asse = <b><font COLOR=#0000ff>new</font></b> Line2D.Double(trasformaX(<b><font COLOR=#0000ff>this</font></b>.x1), trasformaY(<font COLOR=#a900a9>0</font>), 
			                           trasformaX(<b><font COLOR=#0000ff>this</font></b>.x2), trasformaY(<font COLOR=#a900a9>0</font>));
			<b><font COLOR=#0000ff>this</font></b>.drawAsse(g2, asse);
			<b><font COLOR=#0000ff>return</font></b> <b><font COLOR=#0000ff>true</font></b>;
		} <b><font COLOR=#0000ff>else</font></b> <b><font COLOR=#0000ff>return</font></b> <b><font COLOR=#0000ff>false</font></b>;
	}
	
	<b><font COLOR=#0000ff>private</font></b> <b><font COLOR=#0000ff>void</font></b> drawAsse(Graphics2D g2, Line2D.Double asse) {
			Color col = g2.getColor();
			g2.setColor(Color.red);
			g2.draw(asse);
			g2.setColor(col);
	}	
	
	<b><font COLOR=#0000ff>public</font></b> <b><font COLOR=#0000ff>void</font></b> stop() {
		System.out.println(<font COLOR=#ff0000>"stop()"</font>);
	}
	
	<b><font COLOR=#0000ff>public</font></b> <b><font COLOR=#0000ff>void</font></b> destroy() {
		System.out.println(<font COLOR=#ff0000>"destroy()"</font>);
	}
}



</pre>
<!--msnavigation--></td></tr><!--msnavigation--></table><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<hr>
      <h5 align="left">Questa è la bacheca di <b><i>Informatica Grafica</i>,
      corso di laurea specialistica in <i>Ing. Edile-architettura<br>
      </i></b>by <a href="mailto:damore@dis.uniroma1.it"> FdA</a></h5>
      <h6 align="left">ultima modifica: 02/02/2005 11.30</h6>
</td></tr><!--msnavigation--></table></body>
</html>
