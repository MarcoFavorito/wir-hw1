<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<!--Converted with LaTeX2HTML 99.1 release (March 30, 1999)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Compito di Fondamenti di Informatica del 26/1/2000</TITLE>
<META NAME="description" CONTENT="attilio">
<META NAME="keywords" CONTENT="attilio">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v99.1 release">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

</HEAD>

<BODY >

<P>
 
<DIV ALIGN="CENTER">
  <B> 
   Universit&#224; di Roma ``La Sapienza''
<BR>
Facolt&#224; di Ingegneria
<P>
Corso di Fondamenti di Informatica
<BR>
Corsi di Laurea: Aerospaziale, Chimica, Elettrica, Materiali,
   Nucleare, Ambiente e Territorio (v.p.)</B>
<P>
Appello del <B>26/1/2000</B> -- 1a prova scritta
<P>
  <I>tempo a disposizione: 2 ore</I>
</DIV>

<P>
 
<B>Problema 1 (18 punti)</B>

<P>
Una piccola compagnia aerea ha memorizzato su un file (di testo o di record, a
scelta del candidato) le informazioni sui voli settimanali offerti dalla
compagnia.  Per ogni volo sono memorizzati nel file:

<UL>
<LI>il codice identificativo della citt&#224; di partenza (un carattere
  alfabetico maiuscolo);</LI>
<LI>il codice identificativo della citt&#224; di destinazione (un carattere
  alfabetico maiuscolo);</LI>
<LI>il giorno della settimana (abbreviato a 3 caratteri);</LI>
<LI>l'orario di partenza (ore e minuti);</LI>
<LI>la durata del volo (in minuti).</LI>
</UL>

<P>
Un dirigente della compagnia vuole avere una quadro sintetico dei voli offerti
dalla compagnia, sotto forma di una tabella riassuntiva.  La tabella deve
essere costituita da una riga ed una colonna per ogni citt&#224;, e nella
posizione <I>(i,j)</I> deve essere stampato il numero di voli settimanali dalla
citt&#224; di codice <I>i</I> a quella di codice <I>j</I> (se non vi sono voli
dalla citt&#224; <I>i</I> alla citt&#224; <I>j</I> deve essere stampato 0).

<P>
Si richiede di risolvere i seguenti punti:

<P>

<OL>
<LI>Scrivere le dichiarazioni dei tipi di dato Pascal da utilizzarsi per
  risolvere i due punti successivi.</LI>
<LI>Scrivere una (o pi&#249;) unit&#224; Pascal che, ricevendo in ingresso il nome
  di un file contenente le informazioni sui voli, stampi su schermo la tabella
  riassuntiva dei voli.  La procedura deve inoltre restituire in una opportuna
  struttura dati la tabella stessa.</LI>
<LI>Scrivere una (o pi&#249;) unit&#224; Pascal che, ricevendo in ingresso la
  struttura dati costruita al punto&nbsp;(2), ed il codice identificativo di una
  citt&#224; <I>C</I> (di partenza), costruisca e restituisca una lista con un
  elemento per ogni citt&#224; collegata a <I>C</I> da un volo diretto.  Ogni
  elemento della lista deve contenere il codice identificativo della citt&#224;
  (di destinazione) ed il numero di voli settimanali da <I>C</I> verso tale
  citt&#224;.  La lista deve essere ordinata per codice identificativo della
  citt&#224; di destinazione crescente.</LI>
</OL>


<BR>
 
<DIV ALIGN="CENTER">
  <B> 
   Universit&#224; di Roma ``La Sapienza''
<BR>
Facolt&#224; di Ingegneria
<P>
Corso di Fondamenti di Informatica
<BR>
Corsi di Laurea: Aerospaziale, Chimica, Elettrica, Materiali,
   Nucleare, Ambiente e Territorio (v.p.)</B>
<P>
Appello del <B>26/1/2000</B> -- 2a prova scritta
<P>
  <I>tempo a disposizione: 1 ora</I>
</DIV>

<P>
 
<B>Problema 2 (4 punti)</B>

<P>
Dare le rappresentazioni binarie in complemento a&nbsp;1 e complemento a&nbsp;2 (con
5&nbsp;bit complessivi) di <I>6</I>, <I>-6</I> e <I>14</I>, illustrando il
procedimento usato per ottenerle.  Dire inoltre qual &#232; l'intervallo di interi
rappresentabili con 5&nbsp;bit complessivi in complemento a&nbsp;1 e in complemento a&nbsp;2.

<P>
 
<B>Problema 3 (4 punti)</B>

<P>
Si consideri il seguente programma Pascal:

<P>
 
<PRE>
program Esame;

function Cosafa (x: integer): integer;
begin
  if x = 0 then
    Cosafa := 0
  else if (x mod 2) = 0 then
    Cosafa := x + Cosafa(x-2)
  else
    Cosafa := Cosafa(x-1)
end; { Cosafa }
         
begin { Esame }
  writeln(Cosafa(5))
end. { Esame }
</PRE>

<P>

<UL>
<LI>Descrivere cosa fa (non come lo fa) la funzione <TT>Cosafa</TT>.</LI>
<LI>Che valore viene stampato dal programma?  Mostrare l'evoluzione della
  pila dei record di attivazione.</LI>
<LI>Fornire almeno un valore del parametro attuale per il quale l'attivazione
  della funzione <TT>Cosafa</TT> non termina.</LI>
</UL>

<P>
 
<B>Problema 4 (4 punti)</B>

<P>
Scrivere un sottoprogramma Fortran che, ricevendo come parametro un vettore di
dimensione <I>N</I> i cui elementi sono interi compresi tra <I>0</I> ed
<I>M</I>, costruisca e restituisca una matrice di booleani di dimensione
<I>NxM</I> con la seguente propriet&#224;: se l'elemento <I>i</I>-esimo del
vettore ha valore <I>k</I>, allora i primi <I>k</I> elementi della riga
<I>i</I>-esima della matrice sono pari a <TT>.TRUE.</TT>, e i rimanenti sono
pari a <TT>.FALSE.</TT>.

</BODY>
</HTML>
