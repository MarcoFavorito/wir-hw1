
<!--  Presentation generated by Internet Assistant for Microsoft PowerPoint 97 -->

<HTML>
<HEAD>
<META HTTP-EQUIV="Context-Type" CONTEXT="text/html;charset=PREDEFINITA (AUTOMATICA)">
<meta name="GENERATOR" content="Microsoft Internet Assistant for Microsoft PowerPoint 97">
 <TITLE>Scheduling Concurrent Transactions</TITLE> 
</HEAD>

<BODY     >

<CENTER>
<TABLE WIDTH=100%> 
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <IMG SRC="img011.GIF" usemap="#Objmap" WIDTH=640 HEIGHT=480 BORDER=0>
     </TD> </TR>
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <A HREF="sld001.htm"><IMG SRC="first.gif" BORDER=0 ALT="Primo"></A>
         <A HREF="sld010.htm"><IMG SRC="prev.gif" BORDER=0 ALT="Precedente"></A>
         <A HREF="sld012.htm"><IMG SRC="next.gif" BORDER=0 ALT="Successivo"></A>
         <A HREF="sld016.htm"><IMG SRC="last.gif" BORDER=0 ALT="Ultimo"></A>
         <IMG SRC="space.gif" BORDER=0>
         <A HREF="index.htm"><IMG SRC="info.gif" BORDER=0 ALT="Indice"></A>
         <A HREF="tsld011.htm"><IMG SRC="text.gif" BORDER=0 ALT="Testo"></A>
     </TD> </TR>
</TABLE>
<P>Diapositiva 11 di 16</P>
</CENTER>
<!-- <UL>
<H2>Scheduling Concurrent Transactions</H2>
<BR></UL></P>
<P><UL>
<LI><H2>DBMS ensures that execution of {T1, ... , Tn} is equivalent to some serial execution T1’ ... Tn’.
</H2>
<UL>
<LI>Before reading/writing an object, a transaction requests a lock on the object, and waits till the DBMS gives it the lock.  All locks are released at the end of the transaction.  (Strict 2PL locking protocol.)
<LI>Idea: If an action of Ti (say, writing X) affects Tj (which perhaps reads X), one of them, say Ti, will obtain the lock on X first and Tj is forced to wait until Ti completes; this effectively orders the transactions.
<LI>What if Tj already has a lock on Y and Ti later requests a lock on Y? (Deadlock!) Ti or Tj is aborted and restarted! </UL></UL></P>
<P>  -->
</Body>
</HTML>
