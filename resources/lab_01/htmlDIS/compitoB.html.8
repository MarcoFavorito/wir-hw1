<!DOCTYPE doctype PUBLIC "-//w3c//dtd html 4.0 transitional//en"><html><head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   
   <title>Esame: 13/09/04 compito 2 A - Laboratorio di Programmazione - aa 2003/04</title></head>

<body>
<br>
<center>
  <p><b>Laboratorio di Programmazione - A.A. 2003/04</b></p>
  <h2>Esame del 13/09/2004</h2>
  <h2>Espressioni Reali (B)</h2>
</center>

<P><b>Parte 1</b></P>

<P> Si rappresentino attraverso opportune classi Java, definite all'interno di 
  un package <code><strong>esprreale</strong>,</code> espressioni reali formate 
  da: <em>(i)</em> <strong>variabili</strong> caratterizzate da un nome formato 
  da una stringa; <em>(ii) </em><strong>costanti</strong> caratterizzate da un 
  valore di tipo <code>double</code>; <em>(iii)</em> <strong>somma </strong>di 
  due espressioni; <em>(iv) </em> <strong>differenza</strong> di due espressioni; 
  <em>(v) </em> <strong>prodotto</strong> di due espressioni; <em>(iv) </em> <strong>divisione</strong> 
  tra due espressioni. Si richiede che le espressioni reali supportino l'uguaglianza 
  (sintattica) profonda attraverso l'overriding di <code><strong>equals</strong></code>, 
  la copia profonda attraverso l'overriding di <code><strong>clone</strong></code>, 
  e una rappresentazione testuale attraverso l'overriding di <code><strong>toString</strong></code>. 
  Per quest'ultima si faccia riferimento alla seguente sintassi: 
<blockquote> <code><strong>ER := costante | variabile | (ER + ER) | (ER - ER) 
  | (ER * ER) | (ER / ER)</strong></code> </blockquote>
<P><b>Parte 2</b></P>

<P>Si definisca una classe <code><strong>ServiziEsprReali</strong></code>, all'interno 
  di un package <code><strong>serviziesprreali</strong></code>, contenente i seguenti 
  metodi statici:</P>
<ul>
  <li><code> <strong>public static boolean valutabile(EsprReale e)</strong></code>: 
    che data una espressione <code>e</code> verifica se in essa appaiono variabili. 
  </li>
  <li><code><strong>public static EsprReale semplifica(EsprReale e)</strong></code>: 
    che data una espressione <code>e</code> restituisce una nuova espressione 
    ottenuta da <code>e</code> semplificando tutte le sottoespressioni che sono 
    valutabili sostituendole con il valore calcolato.</li>
  <li><code><strong>public static double valuta(EsprReale e, Assegnazione a)</strong></code>: 
    che data una espressione <code>e</code> ed una assegnazione di variabili <code>a</code> 
    valuta <code>e</code> assegnando alle sue variabili il valore previsto nella 
    assegnazione <code>a</code>. Se tale una variabile presente in <code>e</code> 
    non appare in <code>a</code> si lanci una eccezione. Nota della classe assegnazione 
    non si sa nulla eccetto che implementa l'interfaccia <strong><code>Map</code></strong> 
    e che associa a chiavi di tipo <code>String</code> (il nome della variabile) 
    valori di tipo <code>Double</code> (il valore della variabile).</li>
</ul>
<P><strong>Parte 3</strong></P>
<P>Calcolare inoltre la <strong>complessit&agrave;</strong> di ciascun metodo 
  nella classe <code><strong>ServiziEsprReale</strong></code>.</P>
<P>&nbsp;</P>
<P>&nbsp;</P>

<P><em>Definire una classe <strong><code>Main</code></strong> per provare il comportamento 
  dei vari metodi definiti.</em>
</body>
</html>
