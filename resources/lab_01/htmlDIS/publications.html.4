<html>
<head>
	<title>MIDLAB - Middleware Laboratory</title>

	<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
	<meta name="Description" content="MIDLAB - Middleware Laboratory">
	<meta name="Keywords" content="middleware, IRL, CORBA, shared, memories, publish, subscribe, overlay, network">

	<link href="styles.css" rel="stylesheet" type="text/css">
	<script language="Javascript" src="rollover_script.js"></script>
</head>

<body onLoad="MM_preloadImages('images/mn_b_home.gif','images/mn_b_research.gif','images/mn_b_projects.gif','images/mn_b_people.gif','images/mn_b_opportunities.gif','images/mn_b_software.gif','images/mn_b_courses.gif')">
	<a name="top"></a>
	<table width="700" border="0" align="center" cellpadding="0" cellspacing="0">
		<tr>
			<td colspan="2"><img src="images/barra.gif" width="700" height="86"></td>
		</tr>
		<tr>
			<td valign="top"> 
				<table border="0" cellspacing="0" cellpadding="0">
					<tr>
						<td><a href="index.html" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('home','','images/mn_b_home.gif',1)"><img src="images/mn_g_home.gif" alt="Home" name="home" width="191" height="30" border="0"></a></td>
					</tr>
					<tr>
						<td><a href="research.html" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('research','','images/mn_b_research.gif',1)"><img src="images/mn_g_research.gif" alt="Research interests" name="research" width="191" height="20" border="0"></a></td>
					</tr>
					<tr>
						<td><a href="projects.html" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('projects','','images/mn_b_projects.gif',1)"><img src="images/mn_g_projects.gif" alt="Projects" name="projects" width="191" height="20" border="0"></a></td>
					</tr>
					<tr>
						<td><a href="people.html" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('people','','images/mn_b_people.gif',1)"><img src="images/mn_g_people.gif" alt="People" name="people" width="191" height="20" border="0"></a></td>
					</tr>
					<tr>
						<td><a href="opportunities.html" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('opportunities','','images/mn_b_opportunities.gif',1)"><img src="images/mn_g_opportunities.gif" alt="Opportunities (tesi di laurea IT)" name="opportunities" width="191" height="20" border="0"></a></td>
					</tr>
					<tr>
						<td><img src="images/mn_r_publications.gif" alt="Publications" name="publications" width="191" height="20" border="0"></td>
					</tr>
					<tr>
						<td><a href="software.html" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('software','','images/mn_b_software.gif',1)"><img src="images/mn_g_software.gif" alt="Software" name="software" width="191" height="20" border="0"></a></td>
					</tr>
					<tr>
						<td><a href="courses.html" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('courses','','images/mn_b_courses.gif',1)"><img src="images/mn_g_courses.gif" alt="Courses" name="courses" width="191" height="20" border="0"></a></td>
					</tr>
				</table>
			</td>
			
		<td valign="top"> 
			<table border="0" cellspacing="0" cellpadding="0">
					<tr>
						<td colspan="2"><img src="images/spacer.gif" height="10"></td>
					</tr>
					<tr>
						<td><img src="images/spacer.gif" width="10"></td>
						<td><img src="images/tit_publications.gif" width="133" height="17"></td>
					</tr>
					<tr>
						<td><img src="images/spacer.gif" width="10"></td>
						<td><img src="images/riga.gif" width="499" height="4"></td>
					</tr>
					<tr>
						<td colspan="2"><img src="images/spacer.gif" height="3"></td>
					</tr>
					<tr>
						<td><img src="images/spacer.gif" width="10"></td>
						<td valign="top" class="justify"> 

							<table width="100%" border="0" cellpadding="2" cellspacing="0">
								<tr>
									<td rowspan="3"><img src="images/spacer.gif" width="2"></td>
									<td><img src="images/spacer.gif" height="1"></td>
								</tr>
								<tr><td><img src="images/dot.gif"> Papers: <a href="#2004">2004</a> - <a href="#2003">2003</a> - <a href="#2002">2002</a> - <a href="#2001">2001</a> - <a href="#2000">2000</a> - <a href="#1999">1999</a></td></tr>
								<tr><td><img src="images/dot.gif"> <a href="#thesis">Thesis</a></td></tr>
							</table>
							<br><br>
														
							<p class="subtitle"><a name="2004">2004</a></p>
							
							<p class="subsubtitle"><img src="images/dot.gif"> Optimal Propagation based Protocols implementing Causal Memories</p>
							<p><em>R. Baldoni, A. Milani, S. Tucci Piergiovanni</em></p>
							<p>Technical teport 19 - Dipartimento di Informatica e Sistemistica &quot;A.Ruberti&quot;, Universit&agrave; di Roma la Sapienza - 2004</p>
							<p class="abstract">Abstract: "Ensuring causal consistency in a Distributed Shared Memory (DSM) means all operations executed at each process will be compliant to a causality order relation. This paper first introduces an optimality criterion for a protocol P, based on a complete replication of memory locations at each process and propagation of write updates, that enforces causal consistency. This criterion measures the capability of a protocol to update the local copy as soon as possible while respecting causal consistency. Then we present an optimal protocol built on top of a reliable broadcast communication primitive and we show how previous protocols based on complete replication presented in the literature are not optimal. Interestingly, we prove that the optimal protocol embeds a system of vector clocks which captures the read/write semantics of a causal memory. From an operational point of view, an optimal protocol exploiting reliable broadcast strongly reduces its message buffer overhead. Simulation studies show that the optimal protocol roughly buffers a number of messages of one order of magnitude lower than non-optimal ones based on the same communication primitive."</p>
							<p>Download paper: <a href="docs/BMT04techrep.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Maintaining group connectivity in dynamic asynchronous distributed systems</p>
							<p><em>R. Baldoni, J. H&eacute;lary, S. Tucci Piergiovanni</em></p>
							<p>Technical report - Dipartimento di Informatica e Sistemistica "A.Ruberti", Università di Roma la Sapienza - 2004</p>
							<p class="abstract">Abstract: "In the context of asynchronous distributed systems with infinitely many processes, this paper studies the problem of maintaining connectivity among a set of processes forming a group in a dynamic context where (i) processes can arrive to and depart from the group and (ii) processes have a partial knowledge of other processes belonging to the group. In this setting we give the specification of a new problem, namely the Dynamic Group Connectivity (DGC), we provide a few impossibility results and give a deterministic protocol solving the problem. We give, in such a dynamic context, (i) the specification of a service of reliable broadcast showing that it is equivalent to DGC and (ii) the specification of a service of atomic broadcast and a solution based on the protocol presented to solve DGC."</p>
							<p>Download paper: <a href="docs/BHT04techrep.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Supporting Inter-Administration Cooperation: The EU-PUBLI.com Approach</p>
							<p><em>M. Contenti, A. Termini, M. Mecella, R. Baldoni</em></p>
							<p>To appear in Proceedings of the 3rd International Conference on Electronic Government (eGov04), Zaragoza, Spain, August 2004</p>
							<p class="abstract">This work is supported by the project EUPubli.com.</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Total Order Communications over Asynchronous Distributed Systems: Specifications and Implementations </p>
							<p><em>R. Baldoni, S.Cimmino, C.Marchetti</em></p>
							<p>Technical report - Dipartimento di Informatica e Sistemistica "A.Ruberti", Università di Roma la Sapienza - 2004</p>
							<p class="abstract">Abstract: "During the last two decades the design and development of total order (TO) communications has been one of the main research topics in dependable distributed computing. The huge amount of research work has produced several TO specifications and a wide variety of TO implementations with different guarantees whose differences are often left hidden or unclear. This paper presents a systematic classification of six distinct TO specifications based on a well-defined formal framework. The classification allows us (i) to define in a formal way the differences among the behaviors of faulty and correct processes admitted by each specification, and (ii) to derive a methodology that enables the classification of TO implementations with respect to their enforced specification. The paper also discusses the impact of TO specifications on the design of application logics. The methodology is then used to formally study the properties of eight variations of TO implementations based on a fixed sequencer given in a well-known context, namely primary component group communication systems."</p>
							<p>Download paper: <a href="docs/techrep06-04.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> A Self-Organizing Crash-Resilient Topology Management System for Content-Based Publish/Subscribe </p>
							<p><em>R. Baldoni, R. Beraldi, L. Querzoni, A. Virgillito</em></p>
							<p>International Workshop on Distributed Event-Based Systems (DEBS '04), Edinburgh, Scotland, UK, May 2004</p>
							<p class="abstract">Abstract: "Content-based routing realized through static networks of brokers usually exhibit nice performance when subscribers with similar interest are physically close to each other (e.g. in the same LAN, domain or in the same geographical area) and connected to a broker which is also nearby. If these subscribers are dispersed on the Internet,  benefits of such routing strategy significantly decrease. In this paper we present a Topology Management System (TMS) which is a component of a content-based pub/sub system. The aim of a TMS is to mask dynamic changes of the brokers' topology to the content-based routing. TMS relies on a self-organizing algorithm whose goal is to place close (in terms of TCP hops) brokers that manage subscribers with similar interests keeping acyclic the topology and without compromising network-level performance. TMS is also resilient to broker failures and allows joining  of new brokers."</p>
							<p>Download paper: <a href="docs/BBQV04DEBS.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Subscription-Driven Self-Organization in Content-Based Publish/Subscribe </p>
							<p><em>R. Baldoni, R. Beraldi, L. Querzoni, A. Virgillito</em></p>
							<p>Proceedings of the International Conference on Autonomic Computing, New York, USA, May 2004</p>
							<p class="abstract">Abstract: "In this paper we outline a novel approach for enhancing content-based routing performance in publish/subscribe systems composed by an application-level network of event brokers. We present an algorithm which aim is to logically place close (in terms of TCP hops) brokers that manage subscribers with similar interests. We show how this algorithm allows the content based routing algorithm to work in a favorable scenario, thus increasing its global performance."</p>
							<p class="abstract">This work is partially supported by the projects EUPubli.com, MAIS, IS-MANET.</p>
							<p>Download paper: <a href="docs/BBQV04ICAC.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Subscription-Driven Self-Organization in Content-Based Publish/Subscribe </p>
							<p><em>R. Baldoni, R. Beraldi, L. Querzoni, A. Virgillito</em></p>
							<p>Technical report - Dipartimento di Informatica e Sistemistica "A.Ruberti", Università di Roma la Sapienza - 2004</p>
							<p class="abstract">Abstract: "Recently many scalable and efficient solutions for routing events in content-based systems realized through networks of brokers have appeared in the literature. These solutions usually exhibit nice performance when subscribers with similar interest are physically close to each other (e.g. in the same LAN, domain or in the same geographical area) and connected to a broker which is also nearby. If these subscribers are dispersed on the Internet, the benefits of such routing strategies significantly decrease. In this paper we propose a novel approach for enhancing content-based routing performance through a self-organizing algorithm executed by the brokers whose aim is to logically place close (in terms of TCP hops) brokers that manage subscribers with similar interests. Metrics for measuring similarity of interests are discussed and a self-organizing algorithm is presented along with a performance analysis."</p>
							<p>Download paper: <a href="docs/BBQV04techrep.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> An Optimal Protocol for Causally Consistent Distributed Shared Memory Systems</p>
							<p><em>R. Baldoni, A. Milani, S.Tucci Piergiovanni</em></p>
							<p>Proceedings of the International Parallel & Distributed Processing Symposium, Santa Fe, New Mexico, April 2004</p>
							<p class="abstract">Abstract: "Distributed shared memory (DSM) is one of the main abstraction to implement data-centric information exchanges among a set of processes. Ensuring causal consistency means all operations executed at each process will be compliant to a cause effect relation. This paper first provides an optimality criterion for a protocol P that enforces causal consistency on a DSM. This criterion address the number of write operations delayed by P (write delay optimality). Then we present a protocol which is optimal with respect to write delay optimality and we show how previous protocols presented in the literature are not optimal with respect to such a criterion."</p>
							<p class="abstract">This work is partially supported by the projects EUPubli.com, MAIS, IS-MANET.</p>
							<p>Download paper: <a href="docs/BMT04IPDPS.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> On the Modelling of Publish/Subscribe Communication Systems</p>
							<p><em>R. Baldoni, R. Beraldi, S. Tucci Piergiovanni, A. Virgillito</em></p>
							<p>To appear on Concurrency and Computation: Practice and Experiences, John Wiley and Sons</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> The DaQuinCIS Architecture: a Platform for Exchanging and Improving Data Quality in Cooperative Information Systems</p>
							<p><em>M. Scannapieco, A. Virgillito, M. Marchetti, M. Mecella, R. Baldoni</em></p>
							<p>To appear on Information Systems, Elsevier</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Measuring Notification Loss in Publish/Subscribe Communication Systems</p>
							<p><em>R. Baldoni, R. Beraldi, S. Tucci Piergiovanni, A. Virgillito</em></p>
							<p>Proceedings of the 10th International Symposium Pacific Rim Dependable Computing, Papeete, Tahiti, French Polynesia, March 2004</p>
							<p class="abstract">Abstract: "A publish/subscribe communication system (PSS) realizes a many-to-many anonymous interaction among its participants. Producers of information (publishers) issue notifications to the PSS. These are delivered by the PSS to all subscribers that declared interest in it. However, this decoupled form of interaction introduces delays between i) the production of a notification and its delivery to subscribers (diffusion delay) and ii) the declaration of interest by a subscriber and its registration in the PSS (subscription/unsubscription delay). Such delays could lead to notification loss scenarios where an event is not delivered to an intended subscriber even though it was issued when the subscription was active. This paper studies this notification loss phenomenon by presenting a simulation study of a PSS and an analytical model. The latter measures the percentage of notifications guaranteed by a PSS implementation to a subscriber. To our knowledge this is the first paper that addresses such a QoS issue. The model is based on a formal framework of a distributed computation. The framework abstracts the PSS through the two delays, defining safety and liveness properties that precisely characterize the semantics of the PSS."</p>
							<p>Download paper: <a href="docs/BBTV_PRDC.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> The Driving Philosophers</p>
							<p><em>S. Baehni, R. Baldoni, R. Guerraoui, B. Pochon</em></p>
							<p>Technical report</p>
							<p class="abstract">Abstract: "We introduce a new synchronization problem in mobile ad-hoc systems: the Driving Philosophers. In this problem, an unbounded number of driving philosophers (processes) try to access a round-about (set of shared resources, organized along a logical ring). The crux of the problem is to ensure mutual exclusion and starvation-freedom at the level of each particular resource, as well as traffic jam-freedom at the level of the set of resources. The problem captures explicitly the very notion of process mobility and the underlying model does not involve any assumption on the total number of (participating) processes or the use of shared memory, i.e., the model conveys the ad-hoc environment. We present a generic algorithm that solves the problem in a synchronous model. Instances of this algorithm can be fair but not concurrent, or concurrent but not fair. We derive the impossibility of achieving fairness and concurrency at the same time as well as the impossibility of solving the problem in an asynchronous model. We also conjecture the impossibility of solving the problem in a model with limited-range communication."</p>
							<p>Download paper: <a href="docs/IC_TECH_REPORT_200415.pdf">pdf</a></p>
							<p>
								<img src="images/riga.gif" width="499" height="4">
								<a href="#top">Top</a>
							</p>
							<br>
							
							<p class="subtitle"><a name="2003">2003</a></p>
							
							<p class="subsubtitle"><img src="images/dot.gif"> A Middleware Architecture for Inter ad-hoc Networks Communication</p>
							<p><em>M. Patini, R. Beraldi, C. Marchetti, R. Baldoni</em></p>
							<p>Workshop on Multi-channel and mobile information systems, a co-Located Event of WISE 2003 - Rome (Italy), December 2003</p>
							<p class="abstract">Abstract: "Complex and decentralized Information Systems need advanced communication services at the middleware level in order to leverage context-aware distributed applications working, for example, despite node mobility and in a setting where such services can be billed. In this paper we present a middleware architecture offering a communication service which, in its more general case, is able to provide connectivity between two nodes belonging to distinct mobile ad-hoc networks by taking user profiling into account. The proposed architecture is based on a resource awareness service enabling dynamic resource discovery and composition despite the assumed heterogeneity of the ad-hoc networks building the system."</p>
							<p>Download paper: <a href="docs/PBMB_Wise03.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> A Guided Tour On Total Order Specifications</p>
							<p><em>S.Cimmino, C. Marchetti and R. Baldoni</em></p>
							<p>in Proceedings of the /9-th IEEE International Workshop on Object-oriented Real-time Dependable Systems/ (WORDS 2003F), pp. 187-194, October 2003, Capri Island, Italy</p>
							<p class="abstract">Abstract: "In the last two decades the development of Total Order (TO) broadcast and multicast communication over asynchronous distributed systems have been one of the main research issues in dependable distributed computing. As a result, a huge amount of works has been carried out, ranging from service specifications to a variety of TO implementations over different communication platforms. Differences among such specifications can make very difficult the choice of the right TO primitive, by an application designer, to enable the application to meet its correctness requirements. The aim of this paper is thus to present a clear classification of total order broadcast specifications. In particular, six specifications of total order broadcast primitives proposed in the literature are organized into a hierarchy that allows (i) to classify existing implementations of total order communication primitives, and (ii) to select the right primitive according to the application requirements in order to maximize performance."</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> A Quality Model for Multichannel Adaptive Information Systems</p>
							<p><em>Carlo Marchetti, Barbara Pernici, Pierluigi Plebani</em></p>
							<p>To appear in proc. On the 13th int. world wide web conf (WWW04), NY, May 2004</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> A quality model for e-Service based multi-channel adaptive information systems</p>
							<p><em>Carlo Marchetti, Barbara Pernici, Pierluigi Plebani</em></p>
							<p>To appear in proc. Of the 1st Web Services Quality Workshop (WQW 2003), co-located with the 4th International Conference of Web Information System Engineering (WISE03), Rome, Italy, December 10th - 12th, 2003</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> The DaQuinCIS Broker: Managing Data and their Quality in Cooperative Information Systems</p>
							<p><em>M. Mecella, M. Scannapieco, A. Virgillito, R. Baldoni, T. Catarci, C. Batini</em></p>
							<p>Journal of Data Semantics, Volume I, LNCS 2800, 2003</p>
							<p class="abstract">Abstract: "In cooperative information systems, the quality of data exchanged and provided by different data sources is extremely important. A lack of attention to data quality can imply data of low quality to spread all over the cooperative information system. At the same time, improvement can be based on comparing data, correcting them and disseminating high quality data. In this paper, a framework and a related architecture for managing data quality in cooperative information systems is proposed, as developed in the context of the DaQuinCIS research project. Then the focus concentrates (i) on an XML-based model for data and quality data, and (ii) on the design of a broker, which selects the best available data from different sources; such a broker also supports the improvement of data based on feedbacks to data sources. The broker is the basic component of the DaQuinCIS architecture."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~virgi/papers/MSVBCB_JDS03.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Enabling Data Quality Notification in Cooperative Information Systems through a Web-Service Based Architecture (<i>short paper</i>)</p>
							<p><em>C. Marchetti, M. Mecella, M. Scannapieco, A. Virgillito</em></p>
							<p>Proceedings of the 4th International Conference on Web Information Systems Engineering, Roma, Italy, December 2003</p>
							<p class="abstract">Abstract: "In the DaQuinCIS project we propose an architecture for the management of data quality in Cooperative Information Systems; this architecture allows the diffusion of data and related quality and exploits data replication to improve the overall quality of cooperative data. In this paper, we present an overview of a component of the DaQuinCIS architecture, namely the Quality Notification Service (QNS) which is used to inform interested users when changes in quality values occur within the CIS."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~virgi/papers/MMSV_WISE03.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Enhancing Availability of Cooperative Applications through Interoperable Middleware</p>
							<p><em>C. Marchetti, A. Virgillito, R. Baldoni</em></p>
							<p>Journal of Information Science and Engineering, Special Issue on Parallel and Distributed Systems. 19(1) 2003</p>
							<p class="abstract">Abstract: "Cooperative information systems are characterized by distribution, high heterogeneity and scale. Therefore they require interoperable, dependable services on top of which the development of cooperative application can take place. This paper studies, in the context of the Unitary Network of the Italian Public Administration, the problem of increasing the availability of the services exported by a cooperating entity through interoperable middleware. In particular we show how a Fault Tolerant CORBA compliant system, namely the Interoperable Replication Logic (IRL), can be used to increase such availability by building a replicated cooperative gateway that wraps enterprise cooperative applications."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~marchet/docs/jise03.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Modeling Publish/Subscribe Communication Systems: Towards a Formal Approach</p>
							<p><em>R. Baldoni, M. Contenti, S. T. Piergiovanni, A. Virgillito</em></p>
							<p>In Proceedings of Eighth IEEE International Workshop on Object-oriented Real-time Dependable Systems (WORDS 2003), Guadalajara, Mexico, January 15-17, 2003</p>
							<p class="abstract">Abstract: "Publish/subscribe is a widespread communication paradigm for asynchronous messaging that naturally fits the decoupled nature of distributed systems, allowing simple and effective development of distributed applications. In this paper we propose a framework which includes a model of a publish/subscribe computation and a few properties on the computation, namely completeness and minimality, that capture, from an application viewpoint, the expected behavior of a publish/subscribe system with respect to the semantic of the notification of the information. Finally, we provide also a centralized implementation of publish/subscribe system which produces minimal and complete computations."</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Data Quality Notification in Cooperative Information Systems</p>
							<p><em>C. Marchetti, M. Mecella, M. Scannapieco, A. Virgillito, R. Baldoni</em></p>
							<p>In Proceedings of the ICDT 2003 International Workshop "Data Quality in Cooperative Information Systems" (DQCIS 2003), Siena, Italy, 2003.</p>
							<p class="abstract">Abstract: "Current approaches to the development of cooperative information systems are based on services to be offered by cooperating organizations, and on the opportunity of building coordinators and brokers on top of such services. The quality of data exchanged and provided by different services hampers such approaches, as data of low quality can spread all over the cooperative system. At the same time, improvement can be based on comparing data, correcting them and disseminating high quality data. In this paper, we consider the problem of disseminating quality information. In particular, we describe the Quality Notification Service, whose objective is to provide cooperating entities with information concerning the quality variations of exchanged data. By exploiting the information supplied by the Quality Notification Service, other applications and services can be built or modified to benefit of notifications of quality variations."</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> k-Dependency Vectors: A Scalable Causality-Tracking Protocol </p>
							<p><em>R Baldoni, G. Melideo</em></p>
							<p>Eleventh Euromicro Conference on Parallel, Distributed and Network-Based Processing, February 05 - 07, 2003, Genova, Italy</p>
							<p class="abstract">Abstract: "In this paper we present a scalable causality-tracking protocol, called k-Dependency Vectors, which piggybacks on each application message a constant number k of integers (with k \le n. These integers are selected from a vector of size n which is local at each process. By reducing the size of the piggybacked information, only a subset of the causal dependencies can be "on-the-fly" detected by the checker. The other dependencies need an extra computation time to be rebuilt (detection delay). This delay is influenced by the adopted selection strategy. In the paper, several selection strategies are proposed and evaluated with respect to the detection delay experienced by the checker."</p>
							<p>Download paper: <a href="http://csdl.computer.org/dl/proceedings/euro-pdp/2003/1875/00/18750219.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> On Event Routing in Content-Based Publish/Subscribe through Dynamic Networks</p>
							<p><em>A. Virgillito, R. Beraldi, R. Baldoni</em></p>
							<p>The Ninth IEEE Workshop on Future Trends of Distributed Computing Systems (FTDCS'03), May 28 - 30, 2003, San Juan, Puerto Rico</p>
							<p class="abstract">Abstract: "Content-based publish/subscribe communication systems are a popular technology for many-to-many information diffusion over large scale networks. Scalable solutions are obtained considering a network of distributed event brokers, dispatching information (events) from producers (publishers) to consumers (subscribers). Many scalable and efficient solution for routing events in content-based systems exist, that selectively send events only toward the interested subscribers. However, if subscribers having similar interest are present in different parts of the network, the benefits of such routing strategies significantly decrease. In this paper we propose a novel approach for enhancing content-based routing, based on the dynamic reconfiguration of the broker network. The reconfiguration aims at aiding the routing process by placing close to each others brokers that manage subscribers with similar interests. Metrics for measuring similarity of interests are discussed and a reconfiguration algorithm is presented. "</p>
							<p>Download paper: <a href="http://csdl.computer.org/dl/proceedings/ftdcs/2003/1910/00/19100322.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> The Evolution of Publish/Subscribe Communication Systems</p>
							<p><em>R. Baldoni, M. Contenti, A. Virgillito</em></p>
							<p>"Future Directions in Distributed Computing", Springer Verlag LNCS Vol. 2584, 2003</p>
							<p class="abstract">Abstract: "In the last years, a growing attention has been paid to the publish/subscribe (pub/sub) communication paradigm as a mean for disseminating information (also called events) through distributed systems on wide-area networks. Participants to the communication can act as publishers , that submit information to the system, and as subscribers , that express their interest in specific types of information. Main characteristics of such many-to-many communication paradigm are: the interacting parties do not need to know each other (anonymity), partners do not need to be up at the same time (decoupling in time), and the sending/receipt does not block participants (decoupling in flow). So, the publish/subscribe paradigm has been largely recognized as the most promising application-level communication paradigm for integration of information systems."</p>
							<p>Download paper: <a href="http://www.springerlink.com/app/home/content.asp?wasp=788ytgtwvl6w1y32wmf0&referrer=contribution&format=2&page=1&pagecount=5">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> An E-service-Based Framework for Inter-administration Cooperation</p>
							<p><em>M. Contenti, A. Termini, M. Mecella, R. Baldoni</em></p>
							<p>Knowledge Management in Electronic Government, 4th IFIP International, Rhodes, Greece, May 26-28, 2003</p>
							<p class="abstract">Abstract: "In order to provide electronic service delivery, several activities involving different public agencies need to be related and carried out in coordinated manner, thus resulting in a cooperative process. Currently, E-service technologies seems to offer the enabling infrastructure for supporting cooperative process enactment, even at inter-country level. In this position paper, we outline the architecture we are proposing in the EU-PUBLI.com project, in which orchestration of E-services constitutes the basis for provision of E-government services. We discuss how such an architecture could support a form, although simple, of management of the cooperative process knowledge."</p>
							<p>Download paper: <a href="http://www.springerlink.com/app/home/content.asp?wasp=e2eygx3d5m1vtl5dbbcl&referrer=contribution&format=2&page=1&pagecount=12">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> CORBA request portable interceptors: analysis and applications</p>
							<p><em>R. Baldoni, C. Marchetti, L. Verde</em></p>
							<p>Concurrency and Computation: Practice and Experience, Volume 15, Number 6, May 2003</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> A Caching Scheme for Routing in Mobile Ad Hoc Networks and Its Application to ZRP</p>
							<p><em>R. Beraldi, R. Baldoni</em></p>
							<p>IEEE Transactions on Computers, Volume 52, Number 8, August 2003</p>
							<p class="abstract">Abstract "A large class of routing protocols for MANETs, namely, reactive protocols, employ some form of caching to reduce the number of route discoveries. The simplest form of caching is based on associating a timeout with each cache entry. Such timer-based cache schemes can increase the protocol efficiency. However, if the timeout is not well-tuned, a severe performance degradation arises as entries are removed either too early or too late from the cache. In this paper, we address the problem of designing a proactive cache scheme that does not rely on any timer-based mechanism. This scheme guarantees that valid cached routes are never removed while stale routes are removed aggressively. This proactive cache scheme has been embedded in the Zone Routing Protocol (ZRP) framework and evaluated by an extensive simulation study."</p>
							<p>Download paper: <a href="http://csdl.computer.org/dl/trans/tc/2003/08/t1051.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Efficient Causality-Tracking Timestamping</p>
							<p><em>J. Hélary, M. Raynal, G. Melideo, R. Baldoni </em></p>
							<p>IEEE Transactions on Knowledge and Data Engineering, Volume 15, Number 5, September/October 2003</p>
							<p class="abstract">Abstract: "Vector clocks are the appropriate mechanism used to track causality among the events produced by a distributed computation. Traditional implementations of vector clocks require application messages to piggyback a vector of n integers (where n is the number of processes). This paper investigates the tracking of the causality relation on a subset of events (namely, the events that are defined as "relevant" from the application point of view) in a context where communication channels are not required to be FIFO, and where there is no a priori information on the connectivity of the communication graph or the communication pattern. More specifically, the paper proposes a suite of simple and efficient implementations of vector clocks that address the reduction of the size of message timestamps, i.e., they do their best to have message timestamps whose size is less than n. The relevance of such a suite of protocols is twofold. From a practical side, it constitutes the core of an adaptive timestamping software layer that can used by underlying applications. From a theoretical side, it provides a comprehensive view that helps better understand distributed causality-tracking mechanisms."</p>
							<p>Download paper: <a href="http://csdl.computer.org/dl/trans/tk/2003/05/k1239.pdf">pdf</a></p>
							<p>
								<img src="images/riga.gif" width="499" height="4">
								<a href="#top">Top</a>
							</p>
							<br>

							<p class="subtitle"><a name="2002">2002</a></p>
							
							<p class="subsubtitle"><img src="images/dot.gif"> Asynchronous Active Replication in Three-tier Distributed Systems</p>
							<p><em>R. Baldoni, C. Marchetti, S. Tucci Piergiovanni</em></p>
							<p>In Proceedings of the 2002 Pacific Rim International Symposium on Dependable Computing (PRDC'02), December 16-18, 2002 Tsukuba, Japan (to appear).</p>
							<p class="abstract">Abstract: "The deployment of server replicas of a given service across an asynchronous distributed system (e.g. Internet) is a real practical challenge. This target cannot be indeed achieved by classical software replication techniques (e.g. passive and active replication) as these techniques usually rely on group communication toolkits that require server replicas to run over a partially synchronous distributed system. This paper proposes a three tier architecture for software replication that encapsulates the need of partial synchrony in a specific software component of a mid-tier to free replicas (end-tier) and clients (client-tier) from the need of underlying partial synchrony assumptions. Then we propose how to specialize the mid-tier in order to manage active replication of server replicas."</p>
							<p>
								Download extended version (Technical Report #05-02): <a href="http://www.dis.uniroma1.it/%7Eirl/pubs/tech_rep05-02.pdf">pdf</a> - <a href="http://www.dis.uniroma1.it/%7Eirl/pubs/tech_rep05-02.ps.gz">ps</a><br>
								Download PRDC'02 version: <a href="http://www.dis.uniroma1.it/%7Eirl/pubs/PRDC02.pdf">pdf</a> - <a href="http://www.dis.uniroma1.it/%7Eirl/pubs/PRDC02.zip">ps</a>
							</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Active Software Replication through a Three-tier Approach</p>
							<p><em>R. Baldoni, C. Marchetti, A. Termini</em></p>
							<p>In Proceedings of the 21st Symposium on Reliable Distributed Systems (SRDS'02), pp. 109-118, October 13-16, 2002 Osaka, Japan.</p>
							<p class="abstract">Abstract: "A replication logic is the set of protocols and mechanisms implementing a software replication technique. A three-tier approach to replication consists in separating the replication logic from both clients and replicated servers by embedding such logic in a mid-tier. In this paper we first introduce the fundamental concepts underlying three-tier replication. This approach has two main practical advantages: (i) it allows to maintain consistency among the state of server replicas deployed within an asynchronous distributed system and (ii) it supports very thin clients. Then we present the Interoperable Replication Logic (IRL) architecture, which is a Fault Tolerant CORBA compliant infrastructure exploiting a three-tier approach to replicate stateful deterministic CORBA objects. Finally a detailed description of an IRL prototype developed in our department is proposed along with an extensive performance analysis."</p>
							<p>
								Download extended version (Technical Report #01-02): <a href="http://www.dis.uniroma1.it/~irl/pubs/tech_rep01-02.pdf">pdf</a> - <a href="http://www.dis.uniroma1.it/~irl/pubs/tech_rep01-02.ps.gz">ps</a><br>
								Download SRDS'02 version: <a href="http://www.dis.uniroma1.it/~irl/pubs/SRDS02.pdf">pdf</a> - <a href="http://www.dis.uniroma1.it/~irl/pubs/SRDS02.zip">ps</a>
							</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Handling FT-CORBA Compliant Interoperable Object Group References</p>
							<p><em>R. Baldoni, C. Marchetti, R. Panella, L. Verde</em></p>
							<p>In Proceedings of the 8th Euro-PAR Conference, pp. 578-588, August 2002, Paderborn, Germany.</p>
							<p class="abstract">Abstract: "The handling of Interoperable Object Group References (IOGRs) is one of the basic building block of any FT-CORBA compliant platform. In this paper we introduce two basic components: IOGRManager, a tool to create, update, browse IOGRs, and an Object-Request-GateWay (ORGW), a CORBA compliant client request interceptor, which allows clients running on non-FT-Corba compliant ORBs to transparently interact with replicated objects residing on FT-CORBA-compliant platforms. Both components have been developed in the context of Interoperable Replication Logic (IRL) project which investigates the impact of three tiers architectures on software replication."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~irl/pubs/WORDS02.pdf">pdf</a> - <a href="http://www.dis.uniroma1.it/~irl/pubs/WORDS02.ps.gz">ps</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> The Notion of Availability in Publish/Subscribe Communication Systems</p>
							<p><em>R. Baldoni, M. Contenti, S. Tucci Piergiovanni, A. Virgillito</em></p>
							<p>In Proceedings of Workshop on Foundations of Middleware Technologies (WFoMT 2002), Irvine, CA, USA, November 1, 2002</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> End-to-End QoS in Content-Based Publish-Subscribe Systems</p>
							<p><em>R. Baldoni, M. Contenti, A. Virgillito, F. Zito</em></p>
							<p>In Proceedings of the International Workshop on Future Directions in Distributed Computing (FuDiCo 2002), Bertinoro, Italy, 3-7 June 2002.</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Managing Data Quality in Cooperative Information Systems</p>
							<p><em>M. Mecella, M. Scannapieco, A. Virgillito, R. Baldoni, T. Catarci, C. Batini</em></p>
							<p>In Proceedings of Tenth International Conference on Cooperative Information Systems (CoopIS 2002), Irvine, CA, USA, October 30 - November 1, 2002</p>
							<p class="abstract">Abstract: "Current approaches to the development of cooperative information systems are based on services to be offered by cooperating organizations, and on the opportunity of building coordinators and brokers on top of such services. The quality of data exchanged and provided by different services hampers such approaches, as data of low quality can spread all over the cooperative system. At the same time, improvement can be based on comparing data, correcting them and disseminating high quality data. In this paper, a service-based framework for managing data quality in cooperative information systems is presented. An XML-based model for data and quality data is proposed, and the design of a broker, which selects the best available data from different services, is presented. Such a broker also supports the improvement of data based on feedbacks to source services."</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Managing Data Quality in Cooperative Information Systems (Extended Abstract)</p>
							<p><em>M. Mecella, M. Scannapieco, A.Virgillito, R. Baldoni, T.Catarci, C.Batini</em></p>
							<p>In Proceedings of the National Conference "Sistemi Evoluti per Basi di Dati" (SEBD 2002), Isola d'Elba, Italy, 2002.</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Performance Analysis of Java Group Toolkits: a Case Study</p>
							<p><em>R.Baldoni, S.Cimmino, C.Marchetti, A.Termini</em></p>
							<p>In Proceedings of the International Workshop on scientiFic engIneering of Distributed Java applIcations (FIDJI02), pp. to appear, Luxembourg.</p>
							<p class="abstract">Abstract: "In this paper we present a performance evaluation of three Java group toolkits (JavaGroups, Spread and Appia) with respect to a specific application scenario: software replication using a three-tier architecture. We also compare performances of these Java group toolkits with Maestro/Ensemble which has been developed in C++. Results show that performances of Java group toolkits are becoming comparable with the ones of Maestro/Ensemble, once selected a well tailored protocol stack for a given application."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~marchet/docs/fidji02.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> A Fault-tolerant Sequencer for Timed Asynchronous Systems</p>
							<p><em>R. Baldoni, C. Marchetti, S. Tucci Piergiovanni</em></p>
							<p>In Proceedings of the 8th Euro-PAR Conference, pp. 578-588, August 2002, Paderborn, Germany.</p>
							<p class="abstract">Abstract: "In this paper we present the specification of a sequencer service that allows independent processes to get a sequence number that can be used to label successive operations (e.g. to allow a set of independent and concurrent processes to get a total order on their operations). Moreover, we provide an implementation of the sequencer service in a specific partially synchronous distributed system, namely the timed asynchronous model. As an example, if a sequencer is used by a software replication scheme then we get the advantage to deploy server replicas across an asynchronous distributed system such as the Internet."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~marchet/docs/europar02.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Handling FT-CORBA Compliant Interoperable Object Group References</p>
							<p><em>R. Baldoni, C.Marchetti, R. Panella, L. Verde</em></p>
							<p>In Proceedings of the 7th IEEE International Workshop on Object Oriented Real-time Dependable Systems (WORDS'02), pp. 37-44, January 2002, Santa Barbara (CA), USA.</p>
							<p class="abstract">Abstract: "The handling of Interoperable Object Group References (IOGRs) is one of the basic building block of any FTCORBA compliant platform. In this paper we introduce two basic components: IOGRManager, a tool to create, update, browse IOGRs, and an Object-Request-GateWay (ORGW), a CORBA compliant client request interceptor, which allows clients running on non-FT-Corba compliant ORBs to transparently interact with replicated objects residing on FT-CORBA-compliant platforms. Both components have been developed in the context of Interoperable Replication Logic (IRL) project which investigates the impact of three tiers architectures on software replication."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~marchet/docs/words02.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> An implementation of causal memories using the writing semantics</p>
							<p><em>R.Baldoni, C. Spaziani, S. Tucci Piergiovanni, D. Tulone</em></p>
							<p>6th International Conference On Principles of Distributed Systems, Reims, France, December 2002.</p>
							<p class="abstract">Abstract: "Causal consistency has been introduced to increase wait-free concurrent accesses to a shared memory. Contrarily to sequential consistency, causal consistency allows independent write operations, with respect to the causality relation, to be executed in different orders at each distinct process. This paper introduces a protocol for fully replicated settings which exploits the writing semantic and piggybacks on each update message related to a write operation an amount of control information which is O(n) where n is the number of processes. The protocol tracks causality relation by taking transitive dependencies on write operations into account."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~midlab/CausalMemory.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Fundamentals of Distributed Computing: A Practical Tour of Vector Clock Systems</p>
							<p><em>R. Baldoni, M. Raynal</em></p>
							<p>IEEE Distributed Systems Online, Volume 3, Number 2, 2002</p>
							<p class="abstract">Abstract: "A distributed computation consists of a set of processes that cooperate to achieve a common goal. A main characteristic of these computations is that the processes do not already share a common global memory and that they communicate only by exchanging messages over a communication network. Moreover, message transfer delays are finite yet unpredictable. This computation model defines what is known as the asynchronous distributed system model, which includes systems that span large geographic areas and are subject to unpredictable loads.<br>
												A key concept of asynchronous distributed systems is causality. More precisely, given two events in a distributed computation, a crucial problem is knowing whether they are causally related. Could the occurrence of one event be a consequence of the other?<br>
												Processes produce message sendings, message receives, and internal events. Events that are not causally dependent are concurrent. Fidge 1 and Mattern 2 simultaneously and independently introduced vector clocks to let processes track causality (and concurrency) between the events they produce. A vector clock is an array of n integers (one entry per process), where the entry j counts the number of relevant events that process Pj produces. The timestamp of an event a process produced (or of the local state this event generated) is the current value of the corresponding process's vector clock. So, by associating vector timestamps with events or local states, we can safely decide whether two events or two local states are causally related (see the "A Historical View of Vector Clocks" sidebar).<br>
												Here, we present basic vector clock properties, mechanisms, and application examples to help distributed systems engineers solve the casuality problems they face."</p>
							<p>Download paper: <a href="">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> On the minimal information to encode timestamps in distributed computations</p>
							<p><em>R. Baldoni, G. Melideo</em></p>
							<p>Information Processing Letters, Volume 84, Number 3, 15 November 2002</p>
							<p class="abstract">Abstract: "Timestamping protocols are used to capture the causal order or the concurrency of events in asynchronous distributed computations. In this paper we give an answer to the open problem issued by Schwarz and Mattern [Distrib. Comput. 7 (3) (1994) 149174] about the minimum amount of information managed by protocols which represent causality in an isomorphic way. We point out that to encode each timestamp an amount of non-structured information is necessary."</p>
							<p>Download paper: <a href="http://www.sciencedirect.com/science?_ob=MImg&_imagekey=B6V0F-45BCRJ0-3-2&_cdi=5645&_orig=search&_coverDate=11%2F15%2F2002&_qd=1&_sk=999159996&view=c&wchp=dGLbVtz-zSkzV&_acct=C000053779&_version=1&_userid=1571649&md5=79c436e0e68499f962b88da82900ad63&ie=f.pdf">pdf</a></p>
							<p>
								<img src="images/riga.gif" width="499" height="4">
								<a href="#top">Top</a>
							</p>
							<br>

							<p class="subtitle"><a name="2001">2001</a></p>
							
							<p class="subsubtitle"><img src="images/dot.gif"> Fault-Tolerant Sequencer: Specification and an Implementation</p>
							<p><em>R. Baldoni, C. Marchetti, S. Tucci Piergiovanni</em></p>
							<p>Technical report #27-01.</p>
							<p class="abstract">Abstract: "The synchronization among thin, independent and concurrent processes in an open distributed system is a fundamental issue in current architectures (e.g. middlewares, three-tier architectures etc.). Independent process means no message has to be exchanged among the processes to synchronize themselves and open means that the number of processes that require to synchronize changes along the time. In this paper we present the specification of a sequencer service that allows independent processes to get a sequence number that can be used to label successive operations (e.g. to allow a set of independent and concurrent processes to get a total order on these labeled operations). Moreover, we propose an implementation of the sequencer service in the timed asynchronous model along with its correctness proof."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~irl/pubs/tech_rep27-01.pdf">pdf</a> - <a href="http://www.dis.uniroma1.it/~irl/pubs/tech_rep27-01.ps.gz">ps</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> CORBA Request Portable Interceptors: A Performance Analysis</p>
							<p><em>C. Marchetti, L. Verde, R. Baldoni</em></p>
							<p>In Proceedings of the 3nd International Symposium on Distributed Objects and Applications (DOA 2001), pp. 208-217 September 20-24, 2001 Rome, Italy.</p>
							<p class="abstract">Abstract: "Interceptors are a mean to add specific network-oriented capabilities (such as authentication, flow control, caching etc.) to a distributed application which runs over a middleware without changing either the application code or the middleware's one. However, interceptors could be non-intuitive and this could in turn limit their use on a large scale. In this paper we present results of an investigation on CORBA portable interceptors in Java on various CORBA platforms. This study includes the identification of the basic mechanisms provided by an interceptor, of their limitations, a proxy-based technique to overcome some of these limitations and a performance analysis. We also release fragments of Java code used for experiments on Interceptor."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~irl/pubs/DOA01.pdf">pdf</a> - <a href="http://www.dis.uniroma1.it/~irl/pubs/DOA01.ps.gz">ps</a></p>
							<p>Download Extended Version (submitted for publication): <a href="http://www.dis.uniroma1.it/~irl/pubs/concurrency02.pdf">pdf</a> - <a href="http://www.dis.uniroma1.it/~irl/pubs/concurrency02.ps.gz">ps</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Software replication in three-tiers architectures: is it a real challenge?</p>
							<p><em>R.Baldoni, C. Marchetti</em></p>
							<p>In Proceedings of the 8th IEEE Workshop on Future Trends of Distributed Computing Systems (FTDCS'2001), pp. 133-139, November 2001, Bologna, Italy.</p>
							<p class="abstract">Abstract: "This paper is a first attempt to study the problem of handling software replication in three tiers architectures. In particular a study based on synchronization and communication patterns imposed by replication is presented. We show how the complexity of the replication scheme is affected by the deterministic (or not) behavior of the members of the back tier. We also give two generic synchronization and communication patterns used in two and three tiers replication. Well-known schemes such us active and passive replication are particular instances of these generic patterns."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~marchet/docs/ftdcs01.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Design of an Interoperable FT-CORBA Compliant Infrastructure</p>
							<p><em>C.Marchetti, A.Virgillito, R. Baldoni</em></p>
							<p>In Proceedings of the 4th European Research Seminar on Advances in Distributed Systems Systems (ERSADS'01),pp. 155-160, May 14-18, 2001, Bertinoro (Forlì), Italy.</p>
							<p class="abstract">Abstract: "In this paper we present the design of IRL (Interoperable Replication Logic), a FT-CORBA compliant platform that provides transparent client-server interactions and server failovers to application clients by using a set of replicated CORBA objects (IRL components), As cooperation among IRL components is carried out using standard CORBA invocations, IRL allows deployments of CORBA server objects and IRL components over ORBs from distinct vendors satisfying the interoperability property."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~marchet/docs/ersads01.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Integrating Autonomous Enterprise Systems by CORBA Dependable Objects</p>
							<p><em>C.Marchetti, A. Virgillito, M.Mecella, R. Baldoni</em></p>
							<p>In Proceedings of the 5th IEEE International Symposium on Autonomous Decentralized Systems (ISADS 2000), pp. 204-213, March 26-28, 2001, Dallas, Texas, U.S.A.</p>
							<p class="abstract">Abstract: "Integrating autonomous enterprise systems allows the cooperation among applications belonging to distinct systems. As an example, this problem shows up when integrating software services of large departments and organizations in e-Government initiatives.<br>
												This paper studies, in the context of the Unitary Network of the Italian Public Administration, the problem of increasing the availability of services exported by an autonomous enterprise system towards others. In particular we show how a fault tolerant CORBA system, namely the Interoperable Replication Logic (IRL), can be used to increase such an availability by building a replicated cooperative gateway that wraps enterprise applications."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~marchet/docs/isads01.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Failure Management for FT-CORBA Applications</p>
							<p><em>R. Baldoni, C.Marchetti, A.Virgillito, F.Zito</em></p>
							<p>In Proceedings of the 6th IEEE International Workshop on Object Oriented Real-time Dependable Systems (WORDS'01),pp. 186-193, January 8-11, 2001, Rome, Italy.</p>
							<p class="abstract">Abstract: "In this paper we present the failure management system of IRL (Interoperable Replication Logic), a FT-CORBA platform that provides transparent client/server interactions and server failovers to application clients by using a set of replicated CORBA objects (IRL components). The IRL failure management system includes two basic mechanisms, failure detection and recovery. Each of these mechanisms follows a service stack approach (i) to reduce as much as possible the impact of the services in terms of network traffic and (ii) to use the same services both for application objects and IRL components."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~marchet/docs/words01.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Low Cost Routing in Mobile Ad-hoc Networks: Is It Achievable?</p>
							<p><em>R. Baldoni, R. Beraldi</em></p>
							<p>8th IEEE Workshop on Future Trends of Distributed Computer Systems (FTDCS 2001), 31 October, 2 November 2001, Bologna, Italy.</p>
							<p class="abstract">Abstract: "Cache schemes that adopt timeout (i.e. lifetime) for removing stale information have its correct estimation as basic assumption. An incorrect value for the timeout highly reduces the effect of the cache scheme or, even worst, produces a severe performance degradation rather than an improvement. However, lifetime estimation in mobile ad-hoc networks is difficult to assure due to the rapid ad random changes in the network topology as well as to dependency on the path length. In this paper we discuss the general issue of caching in the context of mobile environments as a means to achieve efficient routing protocols. We propose a class of cache schemes that adopt active topology monitoring to determine when cached routes become stale. The scheme requires explicit support from the routing protocol. We present an implementation of the scheme when using a ZRP-like routing protocol and present some preliminary performance results."</p>
							<p>Download paper: <a href="http://csdl.computer.org/dl/proceedings/ftdcs/2001/1384/00/13840105.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Designing a Service of Failure Detection in Asynchronous Distributed Systems </p>
							<p><em>R. Baldoni, F. Zito</em></p>
							<p>Fourth International Symposium on Object-Oriented Real-Time Distributed Computing, May 02 - 04, 2001, Magdeburg, Germany</p>
							<p class="abstract">Abstract: "Even though introduced for solving the consensus problem in asynchronous distributed systems, the notion of unreliable failure detector can be used as a powerful tool for any distributed protocol in order to get better performance by allowing the usage of aggressive time-outs to detect failures of entities executing the protocol. In this paper we present the designing of a Failure Detection Service (FDS) based on the notion of unreliable failure detectors introduced by Chandra and Toueg. FDS is able to detect crashed objects and entities that permanently omit to send messages without imposing changes to the source code of the underlying protocols that use this service. Also, FDS provides an object-oriented interface to its subscribers and, more important, it does not add network overhead if no entity subscribes to the service. This paper can be also seen as a first step towards a distributed implementation of a heartbeat-based failure management system as defined in Fault-Tolerant CORBA specification."</p>
							<p>Download paper: <a href="http://csdl.computer.org/dl/proceedings/isorc/2001/1089/00/10890113.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Consistent Checkpointing for Transaction Systems</p>
							<p><em>R. Baldoni, F. Quaglia, M. Raynal</em></p>
							<p>The Computer Journal, Volume 44, Number 2, 2001</p>
							<p class="abstract">Abstract: "Whether it is for audit or for recovery purposes, data checkpointing is an important problem of transaction systems. Actually, transactions establish dependence relations on data checkpoints taken by data object managers. So, given an arbitrary set of data checkpoints (including at least a single data checkpoint from a data manager, and at most a data checkpoint from each data manager), an important question is the following one: `Can these data checkpoints be members of a same consistent global checkpoint?' This paper answers this question by providing a necessary and sufficient condition suited to transaction systems. Moreover, to show its usefulness, two non-intrusive data checkpointing protocols are designed from this condition."</p>
							<p>Download paper: <a href="http://www3.oup.co.uk/computer_journal/hdb/Volume_44/Issue_02/pdf/440092.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Impossibility of scalar clock-based communication-induced checkpointing protocols ensuring the RDT property</p>
							<p><em>R. Baldoni, J. Hélary, A. Mostéfaoui, M. Raynal</em></p>
							<p>Information Processing Letters, Volume 80, Number 2, 31 October 2001</p>
							<p class="abstract">Abstract: "Communication-induced checkpointing protocols constitute an interesting approach to the on-line determination of checkpoint and communication patterns enjoying desirable properties such as domino-effect freedom. They do not add control messages to the computation, but instead may attach control information to computation messages. Among these protocols, scalar clock-based protocols are particularly attractive as they use a single integer as control information. An interesting property of checkpoint and communication patterns is Rollback-Dependency Trackability, which ensures that all local checkpoint dependencies are on-the-fly trackable. So, it would be nice to design scalar clock-based communication-induced checkpointing protocols providing the RDT property, a previously open question. This paper shows that the design of such protocols is impossible."</p>
							<p>Download paper: <a href="http://www.sciencedirect.com/science?_ob=MImg&_imagekey=B6V0F-43YH0YC-6-1&_cdi=5645&_orig=search&_coverDate=10%2F31%2F2001&_qd=1&_sk=999199997&view=c&wchp=dGLbVlz-zSkzk&_acct=C000053779&_version=1&_userid=1571649&md5=d19ce66c3cccd6b6e57493f2af933ed7&ie=f.pdf">pdf</a></p>
							<p>
								<img src="images/riga.gif" width="499" height="4">
								<a href="#top">Top</a>
							</p>
							<br>

							<p class="subtitle"><a name="2000">2000</a></p>
							
							<p class="subsubtitle"><img src="images/dot.gif"> An Interoperable Replication Logic for CORBA Systems</p>
							<p><em>C. Marchetti, M. Mecella, A. Virgillito, R. Baldoni</em></p>
							<p>In Proceedings of the 2nd International Symposium on Distributed Objects and Applications (DOA 2000), pp. 7-16 September 21-23, 2000 Antwerp, Belgium.</p>
							<p class="abstract">Abstract: "The Replication Logic is a set of protocols, mechanisms and services that allow a CORBA system to handle object replication. In this paper we present a specific implementation of a Replication Logic, namely Interoperable Replication Logic (IRL), which exhibits nice properties like non-intrusion (i.e., the replication logic is built "above" the ORB) and interoperability (i.e., a client can reside on an ORB while server replicas reside on other, possibly distinct, ORBs). We compare IRL to other CORBA systems implementing replication logic such as Eternal, OGS, DOORS, Isis+Orbix, etc."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~irl/pubs/DOA00.pdf">pdf</a> - <a href="http://www.dis.uniroma1.it/~irl/pubs/DOA00.ps.gz">ps</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Integrating Autonomous Enterprise Systems by CORBA Dependable Objects</p>
							<p><em>C.Marchetti, A. Virgillito, M.Mecella, R. Baldoni</em></p>
							<p>In Proceedings of the 5th IEEE International Symposium on Autonomous Decentralized Systems (ISADS 2000), pp. 204-213, March 26-28, 2001, Dallas, Texas, U.S.A.</p>
							<p class="abstract">Abstract: "Integrating autonomous enterprise systems allows the cooperation among applications belonging to distinct systems. As an example, this problem shows up when integrating software services of large departments and organizations in e-Government initiatives.<br>
												This paper studies, in the context of the Unitary Network of the Italian Public Administration, the problem of increasing the availability of services exported by an autonomous enterprise system towards others. In particular we show how a fault tolerant CORBA system, namely the Interoperable Replication Logic (IRL), can be used to increase such an availability by building a replicated cooperative gateway that wraps enterprise applications."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~marchet/docs/isads01.pdf">pdf</a></p>

							<p class="subsubtitle"><img src="images/dot.gif"> From Crash Fault-Tolerance to Arbitrary-Fault Tolerance: Towards a Modular Approach</p>
							<p><em>R. Baldoni, J. Helary, M. Raynal</em></p>
							<p>International Conference on Dependable Systems and Networks (DSN 2000), June 25 - 28, 2000, New York, New York</p>
							<p class="abstract">Abstract: "The design of protocols able to cope with processes exhibiting an arbitrary faulty behavior is a real practical challenge due to malicious attacks or unexpected software errors. Nowadays, there are many protocols able to cope with process crashes, but, unfortunately, a process crash represents only a particular faulty behavior. Then, a good engineering argument would be to take a protocol resilient to process crashes and to transform it into one resilient to arbitrary failures. This paper presents a generic methodology to perform the previous transformation in the case where processes run the same text and regularly exchange messages (i.e., the case of round-based protocols). This modular approach encapsulates the detection of arbitrary failures in specific modules. Such a methodology can be the starting point for designing tools that allow automatic transformation. We show an application of this methodology to the case of consensus."</p>
							<p>Download paper: <a href="http://csdl.computer.org/dl/proceedings/dsn/2000/0707/00/07070273.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Timestamping Algorithms: A Characterization and a Few Properties</p>
							<p><em>G. Melideo, M. Mechelli, R. Baldoni, A. Marchetti Spaccamela</em></p>
							<p>Euro-Par 2000, Munich, Germany</p>
							<p class="abstract">Abstract: "timestamping algorithms are used to capture the causal order or the concurrency of events in asynchronous distributed computations. this paper introduces a formal framework on timestamping algorithms, by characterizing some conditions they have to satisfy in order to capture causality. under the proposed formal framework we derive a few properties about the size of timestamps and local informations at processes obtained by counting the number of distinct causal pasts which could be observed by an omniscient observer during the evolution of a distributed computation."</p>
							<p>Download paper: <a href="http://www.springerlink.com/app/home/content.asp?wasp=1f99bfqwmk5tpwmvrmeg&referrer=contribution&format=2&page=1&pagecount=0">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Deadline-Constrained Causal Order</p>
							<p><em>L. Rodrigues, R. Baldoni, E. Anceaume, M. Raynal</em></p>
							<p>Third IEEE International Symposium on Object-Oriented Real-Time Distributed Computing, March 15 - 17, 2000, Newport Beach, California </p>
							<p class="abstract">Abstract: "A causal ordering protocol ensures that if two messages are causally related and have the same destination, they are delivered to the application in their sending order. Causal order strongly simplifies the development of distributed object-oriented systems.To prevent causal order violation, either messages may be forced to wait for messages in their past, or late messages may have to be discarded. For a real-time setting, the first approach is not suitable since when a message misses a deadline, all the messages that causally depend on it may also be forced to miss their deadlines.We propose a novel causal ordering abstraction that takes messages deadlines into consideration. Two implementations are proposed in the context of multicast and broadcast communication that delivers as many messages as possible to the application. Examples of distributed soft real-time applications that benefit from the use of a deadline-constrained causal ordering primitive are given."</p>
							<p>Download paper: <a href="http://csdl.computer.org/dl/proceedings/isorc/2000/0607/00/06070234.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> On the No-Z-Cycle Property in Distributed Executions</p>
							<p><em>F. Quaglia, R. Baldoni, B. Ciciani</em></p>
							<p>JCSS, Volume 61, Number 3, December 2000</p>
							<p>
								<img src="images/riga.gif" width="499" height="4">
								<a href="#top">Top</a>
							</p>
							<br>

							<p class="subtitle"><a name="1999">1999</a></p>
							
							<p class="subsubtitle"><img src="images/dot.gif"> Implementing an Highly-Available WWW Server by Passive Object Replication</p>
							<p><em>R. Baldoni, S. Bonamoneta, C. Marchetti</em></p>
							<p>In Proceeding of the II International IEEE Symposium on Object-Oriented Real-Time Distributed Computing (ISORC '99) pp. 259-262, St.Malo, France, 3-5 May 1999.</p>
							<p class="abstract">Abstract: "In this paper we investigate issues related to building highly-available World Wide Web (WWW) servers on workstation clusters. We present a novel architecture that includes a dynamic Domain Name System (DNS) and a WWW server based on passive object replication. This architecture allows to reduce the service down-time of a WWW server without impacting on the Hyper Text Transfer Protocol (HTTP) protocol (and thus on the WWW client software). We implement this architecture in our department and we show some experimental results that analyze, given a batch of HTTP requests, the average response time to a request and the average time of WWW service unavailability due to object crashes."</p>
							<p>Download paper: <a href="http://www.dis.uniroma1.it/~marchet/docs/isorc99.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Causality and the Spatial-Temporal Ordering of Events in Mobile Systems </p>
							<p><em>R. Prakash, R. Baldoni </em></p>
							<p>10th International Workshop on Database &amp; Expert Systems Applications, September 01 - 03, 1999, Florence, Italy</p>
							<p class="abstract">Abstract "Several mobile computing applications require that both the order of occurrence of events, and the location of their occurrence, be taken into account during decision making. Thus, processes need to track the location of nodes and synchronize their clocks. In this paper we present a framework, based on the capabilities of Global Positioning System, which provides processes with a global virtual clock and a positioning service. We introduce then the notion of space-time vector used by processes to track the mobility of nodes."</p>
							<p>Download paper: <a href="http://csdl.computer.org/dl/proceedings/dexa/1999/0281/00/02810116.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Distributed Database Checkpointing</p>
							<p><em>R. Baldoni, F. Quaglia, M. Raynal</em></p>
							<p>Euro-Par 1999, Toulouse, France</p>
							<p class="abstract">Abstract "Data checkpointing is an important problem of distributed database systems. Actually, transactions establish dependence relations on data checkpoints taken by data object managers. So, given an arbitrary set of data checkpoints (including at least a single data checkpoint from a data manager, and at most a data checkpoint from each data manager), an important question is the following one: "Can these data checkpoints be members of a same consistent global checkpoint?". This paper answers this question and proposes a non-intrusive data checkpointing protocol."</p>
							<p>Download paper: <a href="http://www.springerlink.com/app/home/content.asp?wasp=3n259b5cqmcqvga9wq3m&referrer=contribution&format=2&page=1&pagecount=0">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Rollback-dependency trackability: visible characterizations</p>
							<p><em>R. Baldoni, J. Hélary, M. Raynal </em></p>
							<p>Proceedings of the eighteenth annual ACM symposium on Principles of distributed computing, tlanta, Georgia, United States</p>
							<p class="abstract">Abstract: "When  we  consider  an  asynchronous  distributed  computation  on which  local  checkpoints  have  been  defined  (namely,  a communication  and  checkpoint  pattern  - in  brief,  CCP),  two  types  of dependencies  between  its  local  checkpoints  can  be  observed.  The  first  type  is due  to  causal  sequences  of  messages  that  establish  on-line  trackable  dependencies.  The  second  type  is due to  non-causal  sequences  of  messages  (called  Z-paths)  that  establish  "hidden"  dependencies  between  local  checkpoints  (a dependency  is  "hidden"  if  it  can  not  be  tracked  on-line).  The  Rollback  Dependency  Trackability  (RDT)  property,  defined  by  Y.M.  Wang,  has  been  introduced  to  study  CCPs.  A  CCP  satisfies  the  RDT  property  if  every  pair  of  local  checkpoints  that  are  connected  by  a  "hidden"  dependency  are  also  connected  by  a causal  sequence  of  messages.  The  RDT  property  has  a great  interest:  CCPs  that  satisfy  this  property  allow  relatively  simple  solutions  to  a lot  of practical  problems.  This  paper  first  introduces  the  notion  of  RDT-compliant  property.  In  a given  CCP,  an X-path  is a Z-path  that  satisfies a property  X.  The  property  X  is RDT-compliant  if  every  CCP  without  X-paths  satisfies  the  RDT  property.  Then,  the  paper  presents  a particular  RDT-compliant  property.  This  property  enjoys  several  very  interesting  features.  (1) It  is "visible"  (i.e.,  it  can be tested  on-line).  (2) It  is stronger  than  previously  known  RDT-compliant  properties.  Consequently,  this  property  provides  a characterization  of RDT  better  than  the  previous  ones.  The  question  of  the  minimal  characterization  of  the  RDT  property  is finally  investigated."</p>
							<p>Download paper: <a href="http://portal.acm.org/ft_gateway.cfm?id=301321&type=pdf&coll=GUIDE&dl=GUIDE&CFID=14659244&CFTOKEN=25883919">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> The hierarchical daisy architecture for causal delivery</p>
							<p><em>R. Baldoni, R. Beraldi, R. Friedman, R. van Renesse</em></p>
							<p>Distributed Systems Engineering, Volume 6, Number 2, June 1999</p>
							<p class="abstract">Abstract: "In this paper, we propose the hierarchical daisy architecture, which provides causal delivery of messages sent to any subset of processes. The architecture provides fault tolerance and maintains the amount of control information within a reasonable size. It divides processes into logical groups. Messages inside a logical group are sent directly, while messages that need to cross logical groups' boundaries are forwarded by servers. We prove the correctness of the daisy architecture, discuss possible optimizations, and present simulation results."</p>
							<p>Download paper: <a href="http://www.iop.org/EJ/article/0967-1846/6/2/302/ds9202.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> An Index-Based Checkpointing Algorithm for Autonomous Distributed Systems </p>
							<p><em>R. Baldoni, F. Quaglia, P. Fornara </em></p>
							<p>IEEE Transactions on parallel and distributed systems</p>
							<p class="abstract">Abstract: "This paper presents an index-based checkpointing algorithm for distributed systems with the aim of reducing the total number of checkpoints while ensuring that each checkpoint belongs to at least one consistent global checkpoint (or recovery line). The algorithm is based on an equivalence relation defined between pairs of successive checkpoints of a process which allows us, in some cases, to advance the recovery line of the computation without forcing checkpoints in other processes. The algorithm is well-suited for autonomous and heterogeneousenvironments, where each process does not know any private information about other processes and private information of the same type of distinct processes is not related (e.g., clock granularity, local checkpointing strategy, etc.). We also present a simulation study which compares the checkpointing-recovery overhead of this algorithm to the ones of previous solutions."</p>
							<p>Download paper: <a href="http://csdl.computer.org/dl/trans/td/1999/02/l0181.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Exploiting intra-object dependencies in parallel simulation</p>
							<p><em>F. Quaglia, R. Baldoni</em></p>
							<p>Information Processing Letters, Volume 70, Number 3, 14 May 1999</p>
							<p class="abstract">Abstract: "This paper introduces the notion of weak causality that models the intra-object parallelism in parallel discrete event simulation. In this setting, a run where events are executed at each object according to their timestamp is a correct run. The weak causality relation allows to define the largest subset of all runs of a simulation that are equivalent to the timestamp-based run. Finally, we describe an application of weak causality to optimistic synchronization (Time Warp) by introducing a synchronization protocol that reduces the number of rollbacks and their extent."</p>
							<p>Download paper: <a href="http://www.sciencedirect.com/science?_ob=MImg&_imagekey=B6V0F-3WS711W-3-1&_cdi=5645&_orig=search&_coverDate=05%2F14%2F1999&_qd=1&_sk=999299996&view=c&wchp=dGLbVtz-zSkzk&_acct=C000053779&_version=1&_userid=1571649&md5=3ce7ec3b9544fcc696b8752d4440b870&ie=f.pdf">pdf</a></p>
							<p>
								<img src="images/riga.gif" width="499" height="4">
								<a href="#top">Top</a>
							</p>
							<br>

							<!--
							<p class="subsubtitle"><img src="images/dot.gif"> </p>
							<p><em></em></p>
							<p></p>
							<p class="abstract"></p>
							<p>Download paper: <a href="">pdf</a></p>
							<br>

							-->

							<p class="subtitle"><a name="thesis">Thesis</a></p>
							
							<p class="subsubtitle"><img src="images/dot.gif"> A Three-tier Architecture for Active Software Replication (Ph. D. Thesis)</p>
							<p><em>Carlo Marchetti</em></p>
							<p class="abstract">To be written...</p>
							<!--<p>Download thesis: <a href="">pdf</a></p>-->
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Implementazione e analisi di un protocollo pr la replicazione attiva (Laurea Thesis)</p>
							<p><em>Stefano Cimmino </em></p>
							<p class="abstract">Abstract: "Group communication systems are an important and widely used tool for building distributed applications. In fact they offer several services which help developers in adding specific properties into their applications. Among these services, total order multicast is a one-to-many communication primitive which can be used to ensure that destination processes will deliver the same sequence of messages. However the precise guarantees that this service enforces and the performance it gives can vary, as it can be implemented according to different specifications and using different algorithms. These factors should guide developers in the choice of a particular group toolkit to use in their applications. To simplify this task, we analyze several group toolkits, highlighting the properties of their total order multicast service, and we compare them from a performance point of view. Results are then used to select the most suitable toolkit for the implementation of a particular service within the Interoperable Replication Logic (IRL). IRL is a FT-CORBA compliant three-tier architecture for software replication. Three-tier architectures for software replication interpose a middle-tier between client and replicas. The middle-tier embeds the replication logic, i.e. the set of protocols and mechanisms used to implement a replication technique. In particular, the current IRL prototype exploits three-tier active software replication to increase the availability of deterministic stateful CORBA objects. According to the active replication technique, all replicas have to execute requests in the same order. In this context, total order multicast is required to implement the Sequencer Service, which is a middle-tier component used to define the order of client requests execution."</p>
							<p>Download thesis (in Italian): <a href="docs/tesi_cimmino.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Causal Memory Systems: definizione e una implementazione (Laurea Thesis)</p>
							<p><em>Cecilia Spaziani</em></p>
							<p class="abstract">To be written...</p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Replicazione a tre livelli: modello e prototipo (Laurea Thesis)</p>
							<p><em>Alessandro Termini</em></p>
							<p class="abstract">Abstract: "A replication logic is the set of protocols and mechanisms implementing a software replication technique. A three-tier approach to replication consists in separating the replication logic from both clients and replicated servers: the mid-tier embeds mechanisms, agreement protocols, group primitives and data structures, needed to handle a replication scheme. Clients send requests to a mid-tier that forwards them to the end-tier, which produces a result returned to the client by the mid-tier. The Interoperable Replication Logic (IRL) exploits three-tier replication to increase the availability of stateful deterministic CORBA objects. IRL provides developers of fault-tolerant CORBA applications with fault monitoring and replication management functionality, which are made accessible through interfaces that comply to the Fault Tolerant CORBA (FT-CORBA) specification. To preserve infrastructure portability and interoperability, communication among clients, mid-tier and object group members (i.e., end-tier server replicas) occur through standard CORBA invocations. In order to guarantee both the termination of client/server interactions and highly available management and monitoring services provided by the IRL infrastructure, IRL components have to be replicated."</p>
							<p>Download thesis (in Italian): <a href="docs/tesi_termini.pdf">pdf</a></p>
							<br>

							<p class="subsubtitle"><img src="images/dot.gif"> Replicazione Attiva nelle Architetture a Tre Livelli (Laurea Thesis)</p>
							<p><em>Sara Tucci Piergiovanni</em></p>
							<p class="abstract">Abstract: "Distributed applications (e-commerce, home-banking, booking reservation, etc.) are pervading many aspects of everyday life. Moreover the number of users is continually increasing making the problem of the access to remote services significantly relevant. For this reason dependability, i.e. reliability and availability, is one of the biggest trend in software technologies. A viable solution to increase the dependability of a system is software replication. The basic idea consists in several identical copies (replicas) of the service distributed on different nodes of a computer network. In case of a node failure there will exist another replica on a different node able to provide the service. To offer a reliable service is also required that all replicas of the same service remain consistent among them. However to ensure a consistent replicas, traditional solutions need to rely on some synchrony property of the underlying communication network (e.g. known message transfer delay). This results in the impossibility to distribute service replicas on WAN where delays on message transfer or request execution are finite but not predictable. In this thesis a novel approach to this problem is given. The basic idea is to interpose between client and service replicas a specific software tier, the mid-tier. Mid-tier is responsible to maintain consistent replicas then runs over a proper communication network exhibiting the right level of synchrony (e.g. a LAN). Each client request is intercepted by the mid-tier and after the necessary elaboration is relayed to service replicas. The same is for the reply from service replicas to clients. This approach allows both clients and service replicas to be spread over a WAN, i.e. allows to offer high service availability in environments like Internet."</p>
							<p>Download thesis (in Italian): <a href="docs/tesi_piergiovanni.ps">ps</a></p>
							<br>

							<!--
							<p class="subsubtitle"><img src="images/dot.gif"> </p>
							<p><em></em></p>
							<p class="abstract"></p>
							<p>Download thesis: <a href="">pdf</a></p>
							<br>-->

						</td>
					</tr>
			</table>
			</td>
		</tr>
		<tr>
			<td colspan="2">&nbsp;</td>
		</tr>
	</table>

	<!-- phpmyvisites -->
	<a href="http://www.phpmyvisites.net/" title="phpMyVisites : sistema opensource di statistiche per web in PHP/MySQL, basato su licenza GPL." onclick="window.open(this.href);return(false);">
	<script type="text/javascript">
	<!--
	var phpmyvisitesSite = 2;
	var phpmyvisitesURL = "http://www.dis.uniroma1.it/~querzoni/phpmyvisites/phpmyvisites.php";
	//-->
	</script>
	<script type="text/javascript" src="http://www.dis.uniroma1.it/~querzoni/phpmyvisites/phpmyvisites.js"></script>
	<noscript>
	<p>
	phpMyVisites : logiciel gratuit de mesure d'audience et de statistiques de sites Internet (licence libre GPL, logiciel en php/MySQL)
	<img src="http://www.dis.uniroma1.it/~querzoni/phpmyvisites/phpmyvisites.php?nojs=1&amp;site=2" alt="phpMyVisites" style="border:0" />
	</p>
	</noscript>
	</a>
	<!-- /phpmyvisites -->

</body>
</html>
