<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<HTML lang="en"><HEAD>
<META http-equiv="Generator" content="com.bluecraft.htmlize">
<TITLE>Source Code: cruc.c</TITLE>
<STYLE>
body {
    background: ivory;
    color: black;
}
DIV.description {
    color: maroon;
    margin-top: -0.4cm;
}
SPAN.linenumber {
    color: maroon;
}
SPAN.string {
    color: red;
}
SPAN.comment {
    color: green;
}
SPAN.keyword {
    color: blue;
}
SPAN.userkeyword {
    color: purple;
    font-weight: bold;
}
</STYLE>
</HEAD><BODY>
<PRE>
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;assert.h&gt;

#define MAXLUN 50
#define N 26

<SPAN class="comment">/* prototipi */</SPAN>
	<SPAN class="userkeyword">char</SPAN> *LeggiNomeFile(<SPAN class="userkeyword">char</SPAN> *mess);
	<SPAN class="userkeyword">void</SPAN> AzzeraArray(<SPAN class="userkeyword">int</SPAN> *a);
	<SPAN class="userkeyword">void</SPAN> LeggiUnaRiga(FILE *f, <SPAN class="userkeyword">char</SPAN> c, <SPAN class="userkeyword">int</SPAN> *a, <SPAN class="userkeyword">char</SPAN> primalett);
	<SPAN class="userkeyword">int</SPAN> TrovaMax(<SPAN class="userkeyword">int</SPAN> *a);
	<SPAN class="userkeyword">void</SPAN> OutputFrequenti(FILE *f, <SPAN class="userkeyword">int</SPAN> *a, <SPAN class="userkeyword">char</SPAN> primalett, <SPAN class="userkeyword">char</SPAN> sep);
	<SPAN class="userkeyword">void</SPAN> OutputMancanti(FILE *f, <SPAN class="userkeyword">int</SPAN> *a, <SPAN class="userkeyword">char</SPAN> primalett, <SPAN class="userkeyword">char</SPAN> sep);
	<SPAN class="userkeyword">void</SPAN> OutputPresenti(FILE *f, <SPAN class="userkeyword">int</SPAN> *a, <SPAN class="userkeyword">char</SPAN> primalett, <SPAN class="userkeyword">char</SPAN> sep);
	<SPAN class="userkeyword">void</SPAN> CompitoA(FILE *fin, FILE *fout);
	<SPAN class="userkeyword">void</SPAN> CompitoB(FILE *fin, FILE *fout);
	<SPAN class="userkeyword">void</SPAN> CompitoC(FILE *fin, FILE *fout);
	<SPAN class="userkeyword">void</SPAN> CompitoD(FILE *fin, FILE *fout);
	<SPAN class="userkeyword">int</SPAN> <SPAN class="userkeyword">main</SPAN>(<SPAN class="userkeyword">void</SPAN>);

<SPAN class="userkeyword">char</SPAN> *LeggiNomeFile(<SPAN class="userkeyword">char</SPAN> *mess) {
	<SPAN class="userkeyword">char</SPAN> temp[MAXLUN], *nome;
	printf(<SPAN class="string">"%s"</SPAN>, mess);
	gets(temp);
	nome = malloc(sizeof(<SPAN class="userkeyword">char</SPAN>) * (strlen(temp) + 1));
	strcpy(nome, temp);
	return nome;
}

<SPAN class="userkeyword">void</SPAN> AzzeraArray(<SPAN class="userkeyword">int</SPAN> *a) {
	<SPAN class="userkeyword">int</SPAN> i;
	for(i = 0; i &lt; N; i++)
		a[i] = 0;
	return;
}

<SPAN class="userkeyword">void</SPAN> LeggiUnaRiga(FILE *f, <SPAN class="userkeyword">char</SPAN> c, <SPAN class="userkeyword">int</SPAN> *a, <SPAN class="userkeyword">char</SPAN> primalett) {
	AzzeraArray(a);
	while(c != <SPAN class="string">'\n'</SPAN>) {
		if((c &gt;= primalett) &amp;&amp; (c &lt; primalett + N))
			a[c - primalett]++;
		c = fgetc(f);
	}
	return;
}


<SPAN class="userkeyword">int</SPAN> TrovaMax(<SPAN class="userkeyword">int</SPAN> *a) {
	<SPAN class="userkeyword">int</SPAN> max = *a;
	<SPAN class="userkeyword">int</SPAN> i;
	for(i = 1; i &lt; N; i++)
		if(a[i] &gt; max)
			max = a[i];
	return max;
}

<SPAN class="userkeyword">void</SPAN> OutputFrequenti(FILE *f, <SPAN class="userkeyword">int</SPAN> *a, <SPAN class="userkeyword">char</SPAN> primalett, <SPAN class="userkeyword">char</SPAN> sep) {
	<SPAN class="userkeyword">int</SPAN> i, max;
	<SPAN class="userkeyword">int</SPAN> flag = 0;
	max = TrovaMax(a);
	for(i = 0; i &lt; N; i++)
		if(a[i] == max) 
			if(flag == 0) {
				fprintf(f, <SPAN class="string">"%c"</SPAN>, i + primalett);
				flag = 1;
			} else
				fprintf(f, <SPAN class="string">"%c%c"</SPAN>, sep, i + primalett);
	fprintf(f, <SPAN class="string">"\n"</SPAN>);
	return;			
}

<SPAN class="userkeyword">void</SPAN> OutputMancanti(FILE *f, <SPAN class="userkeyword">int</SPAN> *a, <SPAN class="userkeyword">char</SPAN> primalett, <SPAN class="userkeyword">char</SPAN> sep) {
	<SPAN class="userkeyword">int</SPAN> i;
	<SPAN class="userkeyword">int</SPAN> flag = 0;
	for(i = 0; i &lt; N; i++)
		if(a[i] == 0) 
			if(flag == 0) {
				fprintf(f, <SPAN class="string">"%c"</SPAN>, i + primalett);
				flag = 1;
			} else
				fprintf(f, <SPAN class="string">"%c%c"</SPAN>, sep, i + primalett);
	fprintf(f, <SPAN class="string">"\n"</SPAN>);
	return;			
}

<SPAN class="userkeyword">void</SPAN> OutputPresenti(FILE *f, <SPAN class="userkeyword">int</SPAN> *a, <SPAN class="userkeyword">char</SPAN> primalett, <SPAN class="userkeyword">char</SPAN> sep) {
	<SPAN class="userkeyword">int</SPAN> i;
	<SPAN class="userkeyword">int</SPAN> flag = 0;
	for(i = 0; i &lt; N; i++)
		if(a[i] != 0) 
			if(flag == 0) {
				fprintf(f, <SPAN class="string">"%c"</SPAN>, i + primalett);
				flag = 1;
			} else
				fprintf(f, <SPAN class="string">"%c%c"</SPAN>, sep, i + primalett);
	fprintf(f, <SPAN class="string">"\n"</SPAN>);
	return;			
}

<SPAN class="userkeyword">void</SPAN> CompitoA(FILE *fin, FILE *fout) {
	<SPAN class="userkeyword">int</SPAN> cont[N];
	<SPAN class="userkeyword">char</SPAN> ch;
	
	ch = fgetc(fin);
	while(feof(fin) == 0) {
		LeggiUnaRiga(fin, ch, cont, <SPAN class="string">'A'</SPAN>);
		OutputFrequenti(fout, cont, <SPAN class="string">'A'</SPAN>, <SPAN class="string">','</SPAN>);
		ch = fgetc(fin);	
	}
	return;
}

<SPAN class="userkeyword">void</SPAN> CompitoB(FILE *fin, FILE *fout) {
	<SPAN class="userkeyword">int</SPAN> cont[N];
	<SPAN class="userkeyword">char</SPAN> ch;
	
	ch = fgetc(fin);
	while(feof(fin) == 0) {
		LeggiUnaRiga(fin, ch, cont, <SPAN class="string">'a'</SPAN>);
		OutputFrequenti(fout, cont, <SPAN class="string">'a'</SPAN>, <SPAN class="string">';'</SPAN>);
		ch = fgetc(fin);	
	} 
	return;
}

<SPAN class="userkeyword">void</SPAN> CompitoC(FILE *fin, FILE *fout) {
	<SPAN class="userkeyword">int</SPAN> cont[N];
	<SPAN class="userkeyword">char</SPAN> ch;
	
	ch = fgetc(fin);
	while(feof(fin) == 0) {
		LeggiUnaRiga(fin, ch, cont, <SPAN class="string">'a'</SPAN>);
		OutputMancanti(fout, cont, <SPAN class="string">'a'</SPAN>, <SPAN class="string">';'</SPAN>);
		ch = fgetc(fin);	
	}
	return;
}

<SPAN class="userkeyword">void</SPAN> CompitoD(FILE *fin, FILE *fout) {
	<SPAN class="userkeyword">int</SPAN> cont[N];
	<SPAN class="userkeyword">char</SPAN> ch;
	
	ch = fgetc(fin);
	while(feof(fin) == 0) {
		LeggiUnaRiga(fin, ch, cont, <SPAN class="string">'A'</SPAN>);
		OutputPresenti(fout, cont, <SPAN class="string">'A'</SPAN>, <SPAN class="string">','</SPAN>);
		ch = fgetc(fin);	
	}
	return;
}

<SPAN class="userkeyword">int</SPAN> <SPAN class="userkeyword">main</SPAN>() {
	<SPAN class="userkeyword">char</SPAN> *infile, *outfile, compito;
	FILE *fin, *fout;
	do {
		printf(<SPAN class="string">"Immetti compito su cruciverba (A/B/C/D): "</SPAN>);
		compito = getchar();
		(<SPAN class="userkeyword">void</SPAN>)getchar();
	} while((compito &lt; <SPAN class="string">'A'</SPAN>) || (compito &gt;<SPAN class="string">'D'</SPAN>));
	
	infile = LeggiNomeFile(<SPAN class="string">"Immetti nome file input: "</SPAN>);
	fin = fopen(infile, <SPAN class="string">"r"</SPAN>);
	assert(fin != NULL);
	free(infile);
	
	outfile = LeggiNomeFile(<SPAN class="string">"Immetti nome file output: "</SPAN>);	
	fout = fopen(outfile, <SPAN class="string">"w"</SPAN>);
	assert(fout != NULL);
	free(outfile);
	
	if(compito == <SPAN class="string">'A'</SPAN>)
		CompitoA(fin, fout);
	else if(compito == <SPAN class="string">'B'</SPAN>)
		CompitoB(fin, fout);
	else if(compito == <SPAN class="string">'C'</SPAN>)
		CompitoC(fin, fout);
	else
		CompitoD(fin, fout);
	
	fclose(fin);
	fclose(fout);
	
	return 0;
}
</PRE>
</BODY></HTML>
