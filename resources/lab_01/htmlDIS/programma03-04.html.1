<html> 

<head>
<title>Programma del corso di Tecniche di Programmazione  Ing. Informatica, canale A-E, 2003/04   Universit&agrave; di Roma &quot;La Sapienza&quot;</title>
</head>

<body>
<center>
  <h2>Universit&agrave; di Roma "La Sapienza"<br>
    Laurea in Ingegneria Informatica</H2>
  <h1><font color="#C7700000"> Programma del corso<br>
    Tecniche di Programmazione</font></h1>
  <h3><a href="http://www.dis.uniroma1.it/~degiacomo"> Prof. Giuseppe De Giacomo</a><font color="#C7700000"> 
    </font></h3>
  <font color="#C7700000">
  <h2>A.A. 2003/04</h2>
  </font> 
</center>
<hr>
<p><b>Materiale didattico.</b> <br>
  <strong>[1]</strong> <i>Lezioni di Fondamenti di Informatica - Parte I: introduzione 
  alla programmazione in Java</i>. Diego Calvanese, Giuseppe De Giacomo, Camil 
  Demetrescu, Luca Iocchi, Daniele Nardi. Esculapio, 2003.<br>
  <strong>[2]</strong> <i>Lezioni di Fondamenti di Informatica - Parte II: tecniche 
  di programmazione in Java</i>. Diego Calvanese, Giuseppe De Giacomo, Camil Demetrescu, 
  Luca Iocchi, Daniele Nardi. ESCULAPIO, 2003.<br>
  <strong>[3]</strong> <i><a href="materiale/">Dispense sul costo dei programmi 
  e su algoritmi di ordinamento</a></i><br>
<p> 
<hr>
<ol>
  <li><strong>Costo dei programmi e algoritmi di ordinamento</strong>[3]<br>
    Modello di costo, dimensione dell'input, notazione asintotica O(f(n)), algoritmi 
    di ricerca sequenziale e binaria su array, algoritmi di ordinamento su array 
    (insertion sort, selection sort, bubble sort, merge sort, quick sort). </li>
  <li><strong>Ricorsione</strong> [2]: unit&agrave; 10.<br>
    Domini definiti induttivamente. Definizione di metodi ricorsivi. Gestione 
    della memoria a run-time. Evoluzione della pila dei record di attivazione. 
    Ricorsione multipla. </li>
  <li><strong>Strutture collegate lineari</strong> [2]: unit&agrave; 11.<br>
    Limitazioni degli array e array dinamici. Strutture collegate. Strutture collegate 
    lineari o liste. Operazioni sulle liste (creazione, ricerca, inserimento cancellazione, 
    ecc.). Realizzazione con side-effect e realizzazione funzionale di una classe 
    per le liste. Implementazione ricorsiva delle operazioni sulle liste. </li>
  <li><strong>Alberi binari</strong> [2]: unit&agrave; 12, solo paragrafi 12.1-12.4, 
    12.7-12.10, 12.12-12.15.<br>
    Alberi e alberi binari. Rappresentazione parentetica di alberi. Rappresentazione 
    collegata di alberi. Visite in profondit&agrave;. Realizzazione di operazioni 
    tramite visite. </li>
  <li><strong>Tipi astratti e loro realizzazione</strong> [2]: unit&agrave; 13 
    e 14, escluso paragrafi 13.22-13.24.<br>
    Tipi di dati astratti. Astrazione di valori e astrazione di entit&agrave;. 
    Realizzazione con side-effect di tipi astratti. Realizzazione funzionale di 
    tipi astratti. pile, code, insiemi. Esempi di realizzazione di tipi astratti 
    (lista, pila, coda, albero binario, tipi collezione, etc.). </li>
  <li><strong>Errori nei programmi e gestione delle eccezioni</strong> [1]: unit&agrave; 
    9.<br>
    Categorie di errori (di sintassi, di semantica, logici). Tecniche di individuazione 
    degli errori. Gerarchia di eccezioni e gestione degli errori tramite eccezioni 
    (clausola <code>throws</code>, istruzioni <code>throw</code> e <code>try-catch</code>). 
  </li>
</ol>
<p>
 <p> 
<hr>
<font size=-1>Home page del corso di <a
href="index.html">Tecniche di Programmazione</a></font> <br>
<font
size=-1>della Laurea in Ingegneria Informatica dell'Universit&agrave; di Roma 
"La Sapienza"</font> 
</body>
</html>
