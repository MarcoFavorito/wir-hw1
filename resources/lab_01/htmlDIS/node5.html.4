<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Multilevel memories</TITLE>
<META NAME="description" CONTENT="Multilevel memories">
<META NAME="keywords" CONTENT="rr2001">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="rr2001.css">

<LINK REL="next" HREF="node6.html">
<LINK REL="previous" HREF="node4.html">
<LINK REL="up" HREF="node2.html">
<LINK REL="next" HREF="node6.html">
</HEAD>

<BODY >
<!--Navigation Panel-->
<A NAME="tex2html73"
  HREF="node6.html">
<IMG WIDTH="37" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="next"
 SRC="file:/usr/share/latex2html/icons/next.png"></A> 
<A NAME="tex2html71"
  HREF="node2.html">
<IMG WIDTH="26" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="up"
 SRC="file:/usr/share/latex2html/icons/up.png"></A> 
<A NAME="tex2html65"
  HREF="node4.html">
<IMG WIDTH="63" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="previous"
 SRC="file:/usr/share/latex2html/icons/prev.png"></A>   
<BR>
<B> Next:</B> <A NAME="tex2html74"
  HREF="node6.html">Distributed and network algorithms</A>
<B> Up:</B> <A NAME="tex2html72"
  HREF="node2.html">Site report 2001</A>
<B> Previous:</B> <A NAME="tex2html66"
  HREF="node4.html">Graphs and Combinatorial Algorithms</A>
<BR>
<BR>
<!--End of Navigation Panel-->

<H4><A NAME="SECTION00011030000000000000">
Multilevel memories</A>
</H4>

<P>
It is well known that current hw/sw platforms are based on 
hierarchical memory systems, aiming at the best exploitation of the 
capabilities of modern architectures.  Since the traditional 
techniques for analysing/designing algorithms are closely related to a 
fixed memory model (RAM or external memory) they are unable to 
validate algorithms/programs to be run on real multilevel memory 
systems.  On the other hand, algorithms showing good locality 
properties are expected to have satisfactory performance on such 
systems.  In this framework, we are currently defining a model for 
analysing algorithms without making use of information about platforms 
which programs will run on.  In such model, algorithm's performance is 
measured in terms of locality (both spatial and temporal) and becomes 
independent on physical parameters.  The detailed definition of the 
model is expected for the 2002.

<P>
<BR><HR>
<ADDRESS>
Algorithmic Engineering
2002-05-23
</ADDRESS>
</BODY>
</HTML>
