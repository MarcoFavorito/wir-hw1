<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Frameset//EN""http://www.w3.org/TR/REC-html40/frameset.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Mon Jul 30 18:21:02 GMT+02:00 2001 -->
<TITLE>
IOGR v1.0 API Specification: Class  CDRInputStream
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">
</HEAD>
<BODY BGCOLOR="white">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<b>IOGR v1.0 Specification</b></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../IOGRUtil/BufferManager.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../IOGRUtil/CDROutputStream.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="CDRInputStream.html" TARGET="_top"><B>NO FRAMES</B></A></FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY: &nbsp;INNER&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL: &nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
IOGRUtil</FONT>
<BR>
Class  CDRInputStream</H2>
<PRE>
<A HREF="../C:\jdk1.3\docs\api\java/lang/Object.html">java.lang.Object</A>
  |
  +--<A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html">java.io.InputStream</A>
        |
        +--<A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">org.omg.CORBA.portable.InputStream</A>
              |
              +--<B>IOGRUtil.CDRInputStream</B>
</PRE>
<HR>
<DL>
<DT>public class <B>CDRInputStream</B><DT>extends <A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></DL>

<P>
Read CDR encoded data. 
 This class provides an implementation of InputStream. It extends org.omg.CORBA.portable.InputStream.
<P>
<DL>
<DT><B>Since: </B><DD>JDK 1.2</DD>
</DL>
<HR>

<P>
<!-- ======== INNER CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#buffer">buffer</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Octet buffer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#index">index</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Index into the actual buffer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#littleEndian">littleEndian</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/ORB.html">ORB</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#orb">orb</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For this stream to be able to return a live object reference,
a full ORB (not the Singleton!) </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#pos">pos</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Index into the actual buffer.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#CDRInputStream(org.omg.CORBA.ORB, byte[])">CDRInputStream</A></B>(<A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/ORB.html">ORB</A>&nbsp;orb,
               byte[]&nbsp;buf)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#CDRInputStream(org.omg.CORBA.ORB, byte[], boolean)">CDRInputStream</A></B>(<A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/ORB.html">ORB</A>&nbsp;orb,
               byte[]&nbsp;buf,
               boolean&nbsp;littleEndian)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#available()">available</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of bytes that can be read (or skipped over) from this input stream without blocking
 by the next caller of a method for this input stream.
 </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#close()">close</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Closes this input stream and releases any system resources associated with the stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#closeEncapsulation()">closeEncapsulation</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Close a CDR encapsulation and
 restore index and byte order information</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#get_pos()">get_pos</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value of current position.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#getBuffer()">getBuffer</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the octet buffer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#mark(int)">mark</A></B>(int&nbsp;readLimit)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Marks the current position in this input stream. 
 </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#markSupported()">markSupported</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tests if this input stream supports the mark and reset methods.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#openEncapsulatedArray()">openEncapsulatedArray</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reset index to zero, i.e. align relative to the beginning of the encaps.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#openEncapsulation()">openEncapsulation</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Open a CDR encapsulation and
 restore index and byte order information</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/Any.html">Any</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_any()">read_any</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an Any from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_boolean_array(boolean[], int, int)">read_boolean_array</A></B>(boolean[]&nbsp;value,
                   int&nbsp;offset,
                   int&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an array of booleans from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_boolean()">read_boolean</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a boolean value from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_char_array(char[], int, int)">read_char_array</A></B>(char[]&nbsp;value,
                int&nbsp;offset,
                int&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an array of chars from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;char</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_char()">read_char</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a char value from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;char</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_char(int)">read_char</A></B>(int&nbsp;tcs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a char value from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_double_array(double[], int, int)">read_double_array</A></B>(double[]&nbsp;value,
                  int&nbsp;offset,
                  int&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an array of doubles from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_double()">read_double</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a double value from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../C:\jdk1.3\docs\api\java/math/BigDecimal.html">BigDecimal</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_fixed()">read_fixed</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a BigDecimal number.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_float_array(float[], int, int)">read_float_array</A></B>(float[]&nbsp;value,
                 int&nbsp;offset,
                 int&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an array of floats from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;float</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_float()">read_float</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a float value from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_long_array(int[], int, int)">read_long_array</A></B>(int[]&nbsp;value,
                int&nbsp;offset,
                int&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an array of booleans from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_long()">read_long</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a CORBA long (i.e. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_longlong_array(long[], int, int)">read_longlong_array</A></B>(long[]&nbsp;value,
                    int&nbsp;offset,
                    int&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an array of CORBA longs (i.e. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_longlong()">read_longlong</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a CORBA longlong (i.e. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/Object.html">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_Object()">read_Object</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a CORBA object from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_octet_array(byte[], int, int)">read_octet_array</A></B>(byte[]&nbsp;value,
                 int&nbsp;offset,
                 int&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an array of octets (i.e. bytes) from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_octet()">read_octet</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an octet (i.e. a byte) value from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/Principal.html">Principal</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_Principal()">read_Principal</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>Deprecated by CORBA 2.2.</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_short_array(short[], int, int)">read_short_array</A></B>(short[]&nbsp;value,
                 int&nbsp;offset,
                 int&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an array of shorts from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;short</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_short()">read_short</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a short value from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../C:\jdk1.3\docs\api\java/lang/String.html">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_string()">read_string</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a string value from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../C:\jdk1.3\docs\api\java/lang/String.html">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_string(int)">read_string</A></B>(int&nbsp;tcs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a string value from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/TypeCode.html">TypeCode</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_TypeCode()">read_TypeCode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a TypeCode from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/TypeCode.html">TypeCode</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_TypeCode(java.util.Hashtable)">read_TypeCode</A></B>(<A HREF="../C:\jdk1.3\docs\api\java/util/Hashtable.html">Hashtable</A>&nbsp;tcMap)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a TypeCode from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_ulong_array(int[], int, int)">read_ulong_array</A></B>(int[]&nbsp;value,
                 int&nbsp;offset,
                 int&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an array of unsigned CORBA longs (i.e. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_ulong()">read_ulong</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an unsigned CORBA long (i.e. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_ulonglong_array(long[], int, int)">read_ulonglong_array</A></B>(long[]&nbsp;value,
                     int&nbsp;offset,
                     int&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an array of unsigned CORBA longlongs (i.e. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_ulonglong()">read_ulonglong</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a CORBA unsigned longlong (i.e. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_ushort_array(short[], int, int)">read_ushort_array</A></B>(short[]&nbsp;value,
                  int&nbsp;offset,
                  int&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an array of unsigned shorts from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;short</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_ushort()">read_ushort</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a unsigned short value from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_wchar_array(char[], int, int)">read_wchar_array</A></B>(char[]&nbsp;value,
                 int&nbsp;offset,
                 int&nbsp;length)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads an array of wide chars from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;char</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_wchar()">read_wchar</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a wide char value from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../C:\jdk1.3\docs\api\java/lang/String.html">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read_wstring()">read_wstring</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a wide string value from this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read()">read</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads the next byte of data from the input stream.
 </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read(byte[])">read</A></B>(byte[]&nbsp;b)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads some number of bytes from the input stream and stores them into the buffer array b.
 </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#read(byte[], int, int)">read</A></B>(byte[]&nbsp;b,
     int&nbsp;off,
     int&nbsp;len)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads up to len bytes of data from the input stream into an array of bytes.
 </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#reset()">reset</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Repositions this stream to the position at the time the mark method was last called on this input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#setCodeSet(int, int)">setCodeSet</A></B>(int&nbsp;codeSet,
           int&nbsp;codeSetWide)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specifies the character encoding code sets for char and wchar.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#setLittleEndian(boolean)">setLittleEndian</A></B>(boolean&nbsp;b)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set LittleEndian to the specified value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#skip(int)">skip</A></B>(int&nbsp;distance)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Skips over and discards n bytes of data from this input stream. 
 </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../IOGRUtil/CDRInputStream.html#unread_string(java.lang.String)">unread_string</A></B>(<A HREF="../C:\jdk1.3\docs\api\java/lang/String.html">String</A>&nbsp;str)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.omg.CORBA.portable.InputStream"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class org.omg.CORBA.portable.<A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#orb()">orb</A>, <A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_Context()">read_Context</A>, <A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_Object(java.lang.Class)">read_Object</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.io.InputStream"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.io.<A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html">InputStream</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html#skip(long)">skip</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.<A HREF="../C:\jdk1.3\docs\api\java/lang/Object.html">Object</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../C:\jdk1.3\docs\api\java/lang/Object.html#clone()">clone</A>, <A HREF="../C:\jdk1.3\docs\api\java/lang/Object.html#equals(java.lang.Object)">equals</A>, <A HREF="../C:\jdk1.3\docs\api\java/lang/Object.html#finalize()">finalize</A>, <A HREF="../C:\jdk1.3\docs\api\java/lang/Object.html#getClass()">getClass</A>, <A HREF="../C:\jdk1.3\docs\api\java/lang/Object.html#hashCode()">hashCode</A>, <A HREF="../C:\jdk1.3\docs\api\java/lang/Object.html#notify()">notify</A>, <A HREF="../C:\jdk1.3\docs\api\java/lang/Object.html#notifyAll()">notifyAll</A>, <A HREF="../C:\jdk1.3\docs\api\java/lang/Object.html#toString()">toString</A>, <A HREF="../C:\jdk1.3\docs\api\java/lang/Object.html#wait()">wait</A>, <A HREF="../C:\jdk1.3\docs\api\java/lang/Object.html#wait(long)">wait</A>, <A HREF="../C:\jdk1.3\docs\api\java/lang/Object.html#wait(long, int)">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="littleEndian"><!-- --></A><H3>
littleEndian</H3>
<PRE>
public boolean <B>littleEndian</B></PRE>
<DL>
</DL>
<HR>

<A NAME="buffer"><!-- --></A><H3>
buffer</H3>
<PRE>
protected byte[] <B>buffer</B></PRE>
<DL>
<DD>Octet buffer.</DL>
<HR>

<A NAME="pos"><!-- --></A><H3>
pos</H3>
<PRE>
protected int <B>pos</B></PRE>
<DL>
<DD>Index into the actual buffer.</DL>
<HR>

<A NAME="index"><!-- --></A><H3>
index</H3>
<PRE>
protected int <B>index</B></PRE>
<DL>
<DD>Index into the actual buffer.</DL>
<HR>

<A NAME="orb"><!-- --></A><H3>
orb</H3>
<PRE>
public <A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/ORB.html">ORB</A> <B>orb</B></PRE>
<DL>
<DD>For this stream to be able to return a live object reference,
a full ORB (not the Singleton!) must be known. If this stream 
is used only to demarshal base type data, the Singleton is enough</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="CDRInputStream(org.omg.CORBA.ORB, byte[])"><!-- --></A><H3>
CDRInputStream</H3>
<PRE>
public <B>CDRInputStream</B>(<A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/ORB.html">ORB</A>&nbsp;orb,
                      byte[]&nbsp;buf)</PRE>
<DL>
</DL>
<HR>

<A NAME="CDRInputStream(org.omg.CORBA.ORB, byte[], boolean)"><!-- --></A><H3>
CDRInputStream</H3>
<PRE>
public <B>CDRInputStream</B>(<A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/ORB.html">ORB</A>&nbsp;orb,
                      byte[]&nbsp;buf,
                      boolean&nbsp;littleEndian)</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="close()"><!-- --></A><H3>
close</H3>
<PRE>
public void <B>close</B>()
           throws <A HREF="../C:\jdk1.3\docs\api\java/io/IOException.html">IOException</A></PRE>
<DL>
<DD>Closes this input stream and releases any system resources associated with the stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html#close()">close</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Throws:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\java/io/IOException.html">IOException</A></CODE> - if an I/O error occurs.</DL>
</DD>
</DL>
<HR>

<A NAME="setCodeSet(int, int)"><!-- --></A><H3>
setCodeSet</H3>
<PRE>
public void <B>setCodeSet</B>(int&nbsp;codeSet,
                       int&nbsp;codeSetWide)</PRE>
<DL>
<DD>Specifies the character encoding code sets for char and wchar.<DD><DL>
<DT><B>Parameters:</B><DD><CODE>codeSet</CODE> - code set for char.<DD><CODE>codeSetWide</CODE> - code set for wchar.</DL>
</DD>
</DL>
<HR>

<A NAME="skip(int)"><!-- --></A><H3>
skip</H3>
<PRE>
protected final void <B>skip</B>(int&nbsp;distance)</PRE>
<DL>
<DD>Skips over and discards n bytes of data from this input stream. 
 If n is negative, no bytes are skipped.<DD><DL>
<DT><B>Parameters:</B><DD><CODE>distance</CODE> - the number of bytes to be skipped.</DL>
</DD>
</DL>
<HR>

<A NAME="closeEncapsulation()"><!-- --></A><H3>
closeEncapsulation</H3>
<PRE>
public final void <B>closeEncapsulation</B>()</PRE>
<DL>
<DD>Close a CDR encapsulation and
 restore index and byte order information</DL>
<HR>

<A NAME="openEncapsulation()"><!-- --></A><H3>
openEncapsulation</H3>
<PRE>
public final void <B>openEncapsulation</B>()</PRE>
<DL>
<DD>Open a CDR encapsulation and
 restore index and byte order information</DL>
<HR>

<A NAME="openEncapsulatedArray()"><!-- --></A><H3>
openEncapsulatedArray</H3>
<PRE>
public final void <B>openEncapsulatedArray</B>()</PRE>
<DL>
<DD>Reset index to zero, i.e. align relative to the beginning of the encaps.</DL>
<HR>

<A NAME="getBuffer()"><!-- --></A><H3>
getBuffer</H3>
<PRE>
public byte[] <B>getBuffer</B>()</PRE>
<DL>
<DD>Returns the octet buffer.</DL>
<HR>

<A NAME="read()"><!-- --></A><H3>
read</H3>
<PRE>
public int <B>read</B>()
         throws <A HREF="../C:\jdk1.3\docs\api\java/io/IOException.html">IOException</A></PRE>
<DL>
<DD>Reads the next byte of data from the input stream.
 The value byte is returned as an int in the range 0 to 255.
 If no byte is available because the end of the stream has been reached, the value -1 is returned.
 This method blocks until input data is available, the end of the stream is detected, or an exception is thrown.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read()">read</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Returns:</B><DD>the next byte of data, or -1 if the end of the stream is reached.<DT><B>Throws:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\java/io/IOException.html">IOException</A></CODE> - if an I/O error occurs.</DL>
</DD>
</DL>
<HR>

<A NAME="available()"><!-- --></A><H3>
available</H3>
<PRE>
public int <B>available</B>()</PRE>
<DL>
<DD>Returns the number of bytes that can be read (or skipped over) from this input stream without blocking
 by the next caller of a method for this input stream.
 The next caller might be the same thread or or another thread.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html#available()">available</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Returns:</B><DD>the number of bytes that can be read from this input stream without blocking.</DL>
</DD>
</DL>
<HR>

<A NAME="read(byte[])"><!-- --></A><H3>
read</H3>
<PRE>
public int <B>read</B>(byte[]&nbsp;b)
         throws <A HREF="../C:\jdk1.3\docs\api\java/io/IOException.html">IOException</A></PRE>
<DL>
<DD>Reads some number of bytes from the input stream and stores them into the buffer array b.
 The number of bytes actually read is returned as an integer.
 This method blocks until input data is available, end of file is detected, or an exception is thrown. 
 If b is null, a NullPointerException is thrown.
 If the length of b is zero, then no bytes are read and 0 is returned;
 otherwise, there is an attempt to read at least one byte.
 If no byte is available because the stream is at end of file, the value -1 is returned; 
 otherwise, at least one byte is read and stored into b.
 If the first byte cannot be read for any reason other than end of file, then an IOException is thrown.
 In particular, an IOException is thrown if the input stream has been closed.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html#read(byte[])">read</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>b</CODE> - the buffer into which the data is read.<DT><B>Returns:</B><DD>the total number of bytes read into the buffer, or -1 is there is no more data because the end of the stream has been reached.<DT><B>Throws:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\java/io/IOException.html">IOException</A></CODE> - if an I/O error occurs.</DL>
</DD>
</DL>
<HR>

<A NAME="read(byte[], int, int)"><!-- --></A><H3>
read</H3>
<PRE>
public int <B>read</B>(byte[]&nbsp;b,
                int&nbsp;off,
                int&nbsp;len)
         throws <A HREF="../C:\jdk1.3\docs\api\java/io/IOException.html">IOException</A></PRE>
<DL>
<DD>Reads up to len bytes of data from the input stream into an array of bytes.
 An attempt is made to read as many as len bytes, but a smaller number may be read, possibly zero.
 The number of bytes actually read is returned as an integer. 
 This method blocks until input data is available, end of file is detected, or an exception is thrown. 
 If b is null, a NullPointerException is thrown. 
 If off is negative, or len is negative, or off+len is greater than the length of the array b, 
 then an IndexOutOfBoundsException is thrown.
 If len is zero, then no bytes are read and 0 is returned; otherwise, there is an attempt to read at least one byte.
 If no byte is available because the stream is at end of file, the value -1 is returned;
 otherwise, at least one byte is read and stored into b. 
 If the first byte cannot be read for any reason other than end of file, then an IOException is thrown. 
 In particular, an IOException is thrown if the input stream has been closed.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html#read(byte[], int, int)">read</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>b</CODE> - the buffer into which the data is read.<DD><CODE>off</CODE> - the start offset in array b at which the data is written.<DD><CODE>len</CODE> - the maximum number of bytes to read.<DT><B>Returns:</B><DD>the total number of bytes read into the buffer, or -1 if there is no more data because the end of the stream has been reached.<DT><B>Throws:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\java/io/IOException.html">IOException</A></CODE> - if an I/O error occurs.</DL>
</DD>
</DL>
<HR>

<A NAME="read_any()"><!-- --></A><H3>
read_any</H3>
<PRE>
public final <A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/Any.html">Any</A> <B>read_any</B>()</PRE>
<DL>
<DD>Reads an Any from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_any()">read_any</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_boolean()"><!-- --></A><H3>
read_boolean</H3>
<PRE>
public final boolean <B>read_boolean</B>()</PRE>
<DL>
<DD>Reads a boolean value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_boolean()">read_boolean</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_boolean_array(boolean[], int, int)"><!-- --></A><H3>
read_boolean_array</H3>
<PRE>
public final void <B>read_boolean_array</B>(boolean[]&nbsp;value,
                                     int&nbsp;offset,
                                     int&nbsp;length)</PRE>
<DL>
<DD>Reads an array of booleans from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_boolean_array(boolean[], int, int)">read_boolean_array</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - returned array of booleans.<DD><CODE>offset</CODE> - offset on the stream.<DD><CODE>length</CODE> - length of buffer to read.</DL>
</DD>
</DL>
<HR>

<A NAME="read_char(int)"><!-- --></A><H3>
read_char</H3>
<PRE>
public final char <B>read_char</B>(int&nbsp;tcs)</PRE>
<DL>
<DD>Reads a char value from this input stream.</DL>
<HR>

<A NAME="read_char()"><!-- --></A><H3>
read_char</H3>
<PRE>
public final char <B>read_char</B>()</PRE>
<DL>
<DD>Reads a char value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_char()">read_char</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_char_array(char[], int, int)"><!-- --></A><H3>
read_char_array</H3>
<PRE>
public final void <B>read_char_array</B>(char[]&nbsp;value,
                                  int&nbsp;offset,
                                  int&nbsp;length)</PRE>
<DL>
<DD>Reads an array of chars from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_char_array(char[], int, int)">read_char_array</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - returned array of chars.<DD><CODE>offset</CODE> - offset on the stream.<DD><CODE>length</CODE> - length of buffer to read.</DL>
</DD>
</DL>
<HR>

<A NAME="read_double()"><!-- --></A><H3>
read_double</H3>
<PRE>
public final double <B>read_double</B>()</PRE>
<DL>
<DD>Reads a double value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_double()">read_double</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_double_array(double[], int, int)"><!-- --></A><H3>
read_double_array</H3>
<PRE>
public final void <B>read_double_array</B>(double[]&nbsp;value,
                                    int&nbsp;offset,
                                    int&nbsp;length)</PRE>
<DL>
<DD>Reads an array of doubles from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_double_array(double[], int, int)">read_double_array</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - returned array of doubles.<DD><CODE>offset</CODE> - offset on the stream.<DD><CODE>length</CODE> - length of buffer to read.</DL>
</DD>
</DL>
<HR>

<A NAME="read_fixed()"><!-- --></A><H3>
read_fixed</H3>
<PRE>
public final <A HREF="../C:\jdk1.3\docs\api\java/math/BigDecimal.html">BigDecimal</A> <B>read_fixed</B>()</PRE>
<DL>
<DD>Reads a BigDecimal number.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_fixed()">read_fixed</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Returns:</B><DD>a java.math.BigDecimal number.</DL>
</DD>
</DL>
<HR>

<A NAME="read_float()"><!-- --></A><H3>
read_float</H3>
<PRE>
public final float <B>read_float</B>()</PRE>
<DL>
<DD>Reads a float value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_float()">read_float</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_float_array(float[], int, int)"><!-- --></A><H3>
read_float_array</H3>
<PRE>
public final void <B>read_float_array</B>(float[]&nbsp;value,
                                   int&nbsp;offset,
                                   int&nbsp;length)</PRE>
<DL>
<DD>Reads an array of floats from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_float_array(float[], int, int)">read_float_array</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - returned array of floats.<DD><CODE>offset</CODE> - offset on the stream.<DD><CODE>length</CODE> - length of buffer to read.</DL>
</DD>
</DL>
<HR>

<A NAME="read_long()"><!-- --></A><H3>
read_long</H3>
<PRE>
public final int <B>read_long</B>()</PRE>
<DL>
<DD>Reads a CORBA long (i.e. Java int) value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_long()">read_long</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_long_array(int[], int, int)"><!-- --></A><H3>
read_long_array</H3>
<PRE>
public final void <B>read_long_array</B>(int[]&nbsp;value,
                                  int&nbsp;offset,
                                  int&nbsp;length)</PRE>
<DL>
<DD>Reads an array of booleans from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_long_array(int[], int, int)">read_long_array</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - returned array of booleans.<DD><CODE>offset</CODE> - offset on the stream.<DD><CODE>length</CODE> - length of buffer to read.</DL>
</DD>
</DL>
<HR>

<A NAME="read_longlong()"><!-- --></A><H3>
read_longlong</H3>
<PRE>
public final long <B>read_longlong</B>()</PRE>
<DL>
<DD>Reads a CORBA longlong (i.e. Java long) value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_longlong()">read_longlong</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_longlong_array(long[], int, int)"><!-- --></A><H3>
read_longlong_array</H3>
<PRE>
public final void <B>read_longlong_array</B>(long[]&nbsp;value,
                                      int&nbsp;offset,
                                      int&nbsp;length)</PRE>
<DL>
<DD>Reads an array of CORBA longs (i.e. Java ints) from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_longlong_array(long[], int, int)">read_longlong_array</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - returned array of CORBA longs (i.e. Java ints).<DD><CODE>offset</CODE> - offset on the stream.<DD><CODE>length</CODE> - length of buffer to read</DL>
</DD>
</DL>
<HR>

<A NAME="read_Object()"><!-- --></A><H3>
read_Object</H3>
<PRE>
public final <A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/Object.html">Object</A> <B>read_Object</B>()</PRE>
<DL>
<DD>Reads a CORBA object from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_Object()">read_Object</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_octet()"><!-- --></A><H3>
read_octet</H3>
<PRE>
public final byte <B>read_octet</B>()</PRE>
<DL>
<DD>Reads an octet (i.e. a byte) value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_octet()">read_octet</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_octet_array(byte[], int, int)"><!-- --></A><H3>
read_octet_array</H3>
<PRE>
public final void <B>read_octet_array</B>(byte[]&nbsp;value,
                                   int&nbsp;offset,
                                   int&nbsp;length)</PRE>
<DL>
<DD>Reads an array of octets (i.e. bytes) from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_octet_array(byte[], int, int)">read_octet_array</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - returned array of octets (i.e. bytes).<DD><CODE>offset</CODE> - offset on the stream.<DD><CODE>length</CODE> - length of buffer to read.</DL>
</DD>
</DL>
<HR>

<A NAME="read_Principal()"><!-- --></A><H3>
read_Principal</H3>
<PRE>
public final <A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/Principal.html">Principal</A> <B>read_Principal</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>Deprecated by CORBA 2.2.</I>
<P>
<DD>Returns principle for invocation.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_Principal()">read_Principal</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Returns:</B><DD>Principle for invocation.</DL>
</DD>
</DL>
<HR>

<A NAME="read_short()"><!-- --></A><H3>
read_short</H3>
<PRE>
public final short <B>read_short</B>()</PRE>
<DL>
<DD>Reads a short value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_short()">read_short</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_short_array(short[], int, int)"><!-- --></A><H3>
read_short_array</H3>
<PRE>
public final void <B>read_short_array</B>(short[]&nbsp;value,
                                   int&nbsp;offset,
                                   int&nbsp;length)</PRE>
<DL>
<DD>Reads an array of shorts from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_short_array(short[], int, int)">read_short_array</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - returned array of shorts.<DD><CODE>offset</CODE> - offset on the stream.<DD><CODE>length</CODE> - length of buffer to read.</DL>
</DD>
</DL>
<HR>

<A NAME="read_string()"><!-- --></A><H3>
read_string</H3>
<PRE>
public final <A HREF="../C:\jdk1.3\docs\api\java/lang/String.html">String</A> <B>read_string</B>()</PRE>
<DL>
<DD>Reads a string value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_string()">read_string</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_string(int)"><!-- --></A><H3>
read_string</H3>
<PRE>
public final <A HREF="../C:\jdk1.3\docs\api\java/lang/String.html">String</A> <B>read_string</B>(int&nbsp;tcs)</PRE>
<DL>
<DD>Reads a string value from this input stream.</DL>
<HR>

<A NAME="unread_string(java.lang.String)"><!-- --></A><H3>
unread_string</H3>
<PRE>
protected final void <B>unread_string</B>(<A HREF="../C:\jdk1.3\docs\api\java/lang/String.html">String</A>&nbsp;str)</PRE>
<DL>
</DL>
<HR>

<A NAME="read_TypeCode()"><!-- --></A><H3>
read_TypeCode</H3>
<PRE>
public final <A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/TypeCode.html">TypeCode</A> <B>read_TypeCode</B>()</PRE>
<DL>
<DD>Reads a TypeCode from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_TypeCode()">read_TypeCode</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_TypeCode(java.util.Hashtable)"><!-- --></A><H3>
read_TypeCode</H3>
<PRE>
public final <A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/TypeCode.html">TypeCode</A> <B>read_TypeCode</B>(<A HREF="../C:\jdk1.3\docs\api\java/util/Hashtable.html">Hashtable</A>&nbsp;tcMap)</PRE>
<DL>
<DD>Reads a TypeCode from this input stream.</DL>
<HR>

<A NAME="read_ulong()"><!-- --></A><H3>
read_ulong</H3>
<PRE>
public final int <B>read_ulong</B>()</PRE>
<DL>
<DD>Reads an unsigned CORBA long (i.e. Java int) value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_ulong()">read_ulong</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_ulong_array(int[], int, int)"><!-- --></A><H3>
read_ulong_array</H3>
<PRE>
public final void <B>read_ulong_array</B>(int[]&nbsp;value,
                                   int&nbsp;offset,
                                   int&nbsp;length)</PRE>
<DL>
<DD>Reads an array of unsigned CORBA longs (i.e. Java ints) from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_ulong_array(int[], int, int)">read_ulong_array</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - returned array of CORBA longs (i.e. Java ints).<DD><CODE>offset</CODE> - offset on the stream.<DD><CODE>length</CODE> - length of buffer to read.</DL>
</DD>
</DL>
<HR>

<A NAME="read_ulonglong()"><!-- --></A><H3>
read_ulonglong</H3>
<PRE>
public final long <B>read_ulonglong</B>()</PRE>
<DL>
<DD>Reads a CORBA unsigned longlong (i.e. Java long) value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_ulonglong()">read_ulonglong</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_ulonglong_array(long[], int, int)"><!-- --></A><H3>
read_ulonglong_array</H3>
<PRE>
public final void <B>read_ulonglong_array</B>(long[]&nbsp;value,
                                       int&nbsp;offset,
                                       int&nbsp;length)</PRE>
<DL>
<DD>Reads an array of unsigned CORBA longlongs (i.e. Java longs) from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_ulonglong_array(long[], int, int)">read_ulonglong_array</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - returned array of CORBA longs (i.e. Java ints).<DD><CODE>offset</CODE> - offset on the stream.<DD><CODE>length</CODE> - length of buffer to read.</DL>
</DD>
</DL>
<HR>

<A NAME="read_ushort()"><!-- --></A><H3>
read_ushort</H3>
<PRE>
public final short <B>read_ushort</B>()</PRE>
<DL>
<DD>Reads a unsigned short value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_ushort()">read_ushort</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_ushort_array(short[], int, int)"><!-- --></A><H3>
read_ushort_array</H3>
<PRE>
public final void <B>read_ushort_array</B>(short[]&nbsp;value,
                                    int&nbsp;offset,
                                    int&nbsp;length)</PRE>
<DL>
<DD>Reads an array of unsigned shorts from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_ushort_array(short[], int, int)">read_ushort_array</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - returned array of shorts.<DD><CODE>offset</CODE> - offset on the stream.<DD><CODE>length</CODE> - length of buffer to read.</DL>
</DD>
</DL>
<HR>

<A NAME="read_wchar()"><!-- --></A><H3>
read_wchar</H3>
<PRE>
public final char <B>read_wchar</B>()</PRE>
<DL>
<DD>Reads a wide char value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_wchar()">read_wchar</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read_wchar_array(char[], int, int)"><!-- --></A><H3>
read_wchar_array</H3>
<PRE>
public final void <B>read_wchar_array</B>(char[]&nbsp;value,
                                   int&nbsp;offset,
                                   int&nbsp;length)</PRE>
<DL>
<DD>Reads an array of wide chars from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_wchar_array(char[], int, int)">read_wchar_array</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - returned array of wide chars.<DD><CODE>offset</CODE> - offset on the stream.<DD><CODE>length</CODE> - length of buffer to read.</DL>
</DD>
</DL>
<HR>

<A NAME="read_wstring()"><!-- --></A><H3>
read_wstring</H3>
<PRE>
public final <A HREF="../C:\jdk1.3\docs\api\java/lang/String.html">String</A> <B>read_wstring</B>()</PRE>
<DL>
<DD>Reads a wide string value from this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html#read_wstring()">read_wstring</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\org/omg/CORBA/portable/InputStream.html">InputStream</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="markSupported()"><!-- --></A><H3>
markSupported</H3>
<PRE>
public boolean <B>markSupported</B>()</PRE>
<DL>
<DD>Tests if this input stream supports the mark and reset methods.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html#markSupported()">markSupported</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Returns:</B><DD><code>true</code> if this true type supports the mark and reset method; <code>false</code> otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="mark(int)"><!-- --></A><H3>
mark</H3>
<PRE>
public void <B>mark</B>(int&nbsp;readLimit)</PRE>
<DL>
<DD>Marks the current position in this input stream. 
 The readlimit arguments tells this input stream to allow that many bytes to be read before
 the mark position gets invalidated.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html#mark(int)">mark</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>readLimit</CODE> - the maximum limit of bytes that can be read before the mark position becomes invalid.</DL>
</DD>
</DL>
<HR>

<A NAME="reset()"><!-- --></A><H3>
reset</H3>
<PRE>
public void <B>reset</B>()
           throws <A HREF="../C:\jdk1.3\docs\api\java/io/IOException.html">IOException</A></PRE>
<DL>
<DD>Repositions this stream to the position at the time the mark method was last called on this input stream.<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html#reset()">reset</A></CODE> in class <CODE><A HREF="../C:\jdk1.3\docs\api\java/io/InputStream.html">InputStream</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Throws:</B><DD><CODE><A HREF="../C:\jdk1.3\docs\api\java/io/IOException.html">IOException</A></CODE> - if this stream has not been marked or if the mark has been invalidated.</DL>
</DD>
</DL>
<HR>

<A NAME="setLittleEndian(boolean)"><!-- --></A><H3>
setLittleEndian</H3>
<PRE>
public final void <B>setLittleEndian</B>(boolean&nbsp;b)</PRE>
<DL>
<DD>Set LittleEndian to the specified value.<DD><DL>
<DT><B>Parameters:</B><DD><CODE>b</CODE> - the value of LittleEndian.</DL>
</DD>
</DL>
<HR>

<A NAME="get_pos()"><!-- --></A><H3>
get_pos</H3>
<PRE>
public int <B>get_pos</B>()</PRE>
<DL>
<DD>Returns the value of current position.</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<b>IOGR v1.0 Specification</b></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../IOGRUtil/BufferManager.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../IOGRUtil/CDROutputStream.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="CDRInputStream.html" TARGET="_top"><B>NO FRAMES</B></A></FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY: &nbsp;INNER&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL: &nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>

</BODY>
</HTML>
