<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.6 [en] (X11; I; SunOS 5.5.1 sun4u) [Netscape]">
   <title>Diploma Universitario in Ingegneria Informatica
</title>
</head>
<body>

<center><b><font face="Palatino"><font size=+1>Diploma Universitario in
Ingegneria Informatica</font></font></b>
<p><b><font face="Palatino"><font size=+1>Corso di</font></font></b>
<p><b><font face="Palatino"><font size=+1>Fondamenti di Informatica II
secondo modulo</font></font></b>
<p><font face="Palatino">Docente : Prof. <a href="http://www.dis.uniroma1.it/~degiacomo">Giuseppe
De Giacomo</a></font></center>

<font face="Palatino">
<p><br>
<br>
<p>
<hr>
<center><b><u>Materiale didattico</u></b></center>

<p><u>Testi adottati</u>:
<br><b>[CLNS]</b> M. Cadoli, M. Lenzerini, P. Naggar,
A. Schaerf, <i><a href="/pub/clns">Fondamenti della progettazione dei programmi:
principi, tecniche e loro applicazione in C++</a></i>, Citta'StudiEdizioni,
UTET Libreria, 1997.
<br><b>[CLPS]</b> M. Cadoli, E. Panizzi, A. Schaerf., M. Lenzerini. <i><a href="/pub/clps">Esercizi
di progettazione dei programmi in C++.</a></i> Citt&aacute;<i>Studi</i>Edizioni,
UTET Libreria, 1998.
<br><b>[CLR]</b>  T.H. Cormen, C.E. Leiserson, R.L. Rivest,
<i>Introduzione agli Algoritmi, </i>Jackson Libri, 1999.
<br>
<hr>
<center>
<p><b><u>Programma d'esame per l'A.A. 1999/2000</u></b></center>

<br>&nbsp;

<ul>

  <li> <b>Ereditarieta'</b> (10 ore)
       <ul>
         <li> ereditarieta' in C++
              <br><i>[CLNS cap.5, cap.13, cap.14]</i>
         <li> ereditarieta' e tipi astratti
              <br><i>[CLNS cap.13, cap.14]</i>
       </ul>

  <li> <b>Complessita'</b> (6 ore)
       <br><i>[CLNS cap.8, CLR cap. introduttivi]</i>

  <li> <b>Strutture dati</b> (20 ore)
       <ul>
         <li>Strutture elementari: Pila, Coda, Albero binario, Albero
              <br><i>[Ripasso, CLNS cap. 12, cap. 13, cap 14]</i>

         <li> Grafo, visita in profondita', visita in ampiezza
              <br><i>[Ripasso, CLNS cap. 13, approfondimento, CLR cap. 23]</i>


         <li> DAG, ordinamento topologico
              <br><i>[CLR cap. 23]</i>

         <li> Heap, heapsort, code di priorita'
              <br><i>[CLPS cap. 11, CLR cap. 7]</i>

         <li> Dizionari, Alberi di ricerca, Alberi AVL
              <br><i>[CLPS cap. 12, CLR cap. 13]</i>

         <li> Hashing
              <br><i>[CLR cap. 11]</i>
       </ul>

  <li><b>Tecniche algoritmiche</b> (14 ore)
       <ul>
         <li> Divide at impera:
              es. mergesort
              <br><i>[CLNS cap. 19, CLR cap. 1.3.1]</i>

         <li> Algoritmi golosi:
              es. shortest path (Dijkstra),
              alg. golosi per problemi di ottimizzazione: bisaccia, risorsa
              <br><i>[CLNS cap. 18, CLR cap. 17, cap. 25.2]</i>

         <li> Programmazione dinamica:
              es. all pair shortest path (Floyd-Warshall), transitive closure
              <br><i>[CLR cap. 16 intro, cap. 26.2]</i>
       </ul>
</ul>

<p>Note:

<i>
<br>
<i>(1) </i>Le sigle CLNS, CLPS, CLR si riferiscono
alla lista di testi che compongono il materiale didattico.

<p><i>(2)</i> Di tutte le strutture dati e gli algoritmi proposti, si deve
conoscere la realizzazione in C++ secondo la metodologia in CLNS.

<p><i>(3)</i> Per il programma dettagliato si veda il <a href="registro99-00.html">registo delle lezioni</a>.
</i>

</font>

<p>
<hr><font size=-1>Ritorno alla <a href="index.html">home page del corso
di Fondamenti di Informatica II - secondo modulo</a></font>
</body>
</html>
