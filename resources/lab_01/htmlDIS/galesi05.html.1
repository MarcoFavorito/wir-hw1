<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE>CS Seminars</TITLE>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="GENERATOR" CONTENT="Mozilla/3.04Gold (X11; I; SunOS 5.7 sun4m) [Netscape]">
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFFFFF" LINK="#0000FF">
<DL> 
  <P><font face="Arial, Helvetica, sans-serif"><B><FONT SIZE=+3><FONT COLOR="#FF0000">S</FONT>eminario 
    <FONT COLOR="#FF0000">I</FONT>nterdipartimentale di <FONT COLOR="#FF0000">A</FONT>lgoritmica</FONT></B> 
    
    &nbsp; 
    </font></P>
  <P><font face="Arial, Helvetica, sans-serif"><b>Monday, March 7, 2005, 12:00 
    noon</b> <font color=red><b> <br>
    Theorem Provers by Pebbling Games</b></font> <br>
    Nicola Galesi <br>
    Universit&agrave; di Roma &quot;La Sapienza&quot;</font></P>
  <p> <font color="green" face="Arial, Helvetica, sans-serif"> <b>DI</b> - Department 
    of Computer Science <b><br>
    Seminar Room, third floor</b></font> 
  <P><font face="Arial, Helvetica, sans-serif"><B>Abstract:</B></font></P>
  <P><font face="Arial, Helvetica, sans-serif">We do not expect to find a resolution 
    theorem prover with polynomial
    running time unless some unexpected complexity result would hold.
    Hence in looking for such algorithms it seems natural at least
    to require time-efficiency in the size of the shortest proof of the
    theorem we want to generate a proof. When efficiency means polynomially
    bounded we say that resolution is automatizable.
    Ben-Sasson and Wigderson (BSW) presented a very simple algorithm that
    achieved a sub-exponential automatizability for resolution. Using the
    simple property (LOP) that every finite linearly ordered set has a
    minimal element, we proved that the sub-exponential bound is the best
    possible for their algorithm. Surprising enough, LOP is essentially the
    only example so far known to prove that. Moreover it appears to be a
    sort of &quot;black beast&quot; for many theorem provers, in particular for 
    the
    most used in applications. There are short resolution refutations of
    LOP, but many algorithms fail to generate them efficiently.
    In the talk I'll present a characterization of resolution through
    pebbling games. Using games we devise a new algorithm to generate
    refutations which, from the automatizability point of view, is as good
    as the BSW algorithm, and that moreover generates polynomially short
    refutations of LOP formulae when its variables respect any given order.</font></P>
  <P><font face="Arial, Helvetica, sans-serif">The content of the talk is part 
    of a joint work with Neil Thapen (Oxford University).</font></P>
  <p>&nbsp;</p>
</DL>
<p>&nbsp;</p>
