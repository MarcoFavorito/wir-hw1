<!doctype html public "-//IETF//DTD HTML//EN">















<html>















<head>















<title>Domenico Lembo - Tecniche di Programmazione - A.A. 2003/2004 - Lezioni</title>















</head>







<body bgcolor="#FFFFFF">

<center>

<H2>Università di Roma "La Sapienza"<BR>Corso di Laurea in Ingegneria Informatica e

Ingegneria Automatica </H2>

<H1><FONT color=#c70000>Lezioni A.A. 2003/2004 </FONT></H1>

<H2><FONT color=#c70000>Canale 2 (F-N)</FONT> </H2>

<H3><a href="http://www.dis.uniroma1.it/~lembo">Prof. Domenico Lembo</a></H3>



</center>





<center>

<h2>Tabella riassuntiva delle lezioni</h2>



<table border="1" valign="center" halign="left" width="893"> <!-- width="660"  -->



<tr>



<th valign="center"  width="79"><i><font color="#008000">Sett</font></i></th>



<th width="121"><i><font color="#008000">Argomento</font></i></th>















<th width="219"><i><font color="#008000">Mercoled&igrave;<br>















  10:15-11:45</font></i></th>















<th width="213"><i><font color="#008000">Gioved&igrave;<br>















  10:15-11:45</font></i></th>















<th width="227"><i><font color="#008000">Venerd&igrave;<br>















  17:30-19:00</font></i></th>















</tr>































<tr>















<td width="79"><i><font color="#008000">#1<br>12 genn.</font></i></td>















<td width="121"><a name="I-Sett-1" href="#Sett-1">Dispensa 1<br>







  Dispensa 2</a>&nbsp;















</td>















<td width="219">Costo dei programmi<font color="#008000">.</font><br>















    (<a href="#L-1-2"><font color="red">Lez 1,2</font></a>)















</td>















<td width="213">Costo dei programmi.<br>















    (<a href="#L-3-4"><font color="red">Lez 3,4</font></a>)















</td>















<td width="227">Algoritmi di ordinamento.<br>







  (<a href="#L-3-4"><font color="red">Lez 5,6</font></a>)















</td>















</tr>































<tr>















<td width="79"><i><font color="#008000">#2<br>19 genn.</font></i></td>















<td width="121"><a name="I-Sett-2" href="#Sett-2">Unità 10</a></td>















<td valign="top" width="219">Esercitazione 1 (input/output da file ed ordinamento)<br>















    (<a href="#L-7-8"><font color="red">Lez 7,8</font></a>)















</td>















<td align="center" valign="top" width="213">















  <p align="left">Domini definiti induttivamente e ricorsione.<br>















    (<a href="#L-9-10"><font color="red">Lez 9,10</font></a>)</td>















<td valign="top" width="227">Metodi ricorsivi.<br>







  Gestione della memoria a run-time<br>















    (<a href="#L-11-12"><font color="red">Lez 11,12</font></a>)















</td>















</tr>































<tr>















<td width="79"><i><font color="#008000">#3<br>26 genn.</font></i></td>















<td width="121"><a name="I-Sett-3" href="#Sett-3">Unità 10</a></td>















<td valign="top" width="219">







  Gestione della memoria a run-time.<br>







  Costo dei programmi rispetto allo spazio<br>















    (<a href="#L-13-14"><font color="red">Lez 13,14</font></a>)















</td>















<td align="center" valign="top" width="213">















  <p align="left">Metodi ricorsivi.<br>







  Ricorsione multipla.<br>















    (<a href="#L-15-16"><font color="red">Lez 15,16</font></a>)</td>















<td valign="top" width="227">Esercizi sulla ricorsione.<br>















    (<a href="#L-17-18"><font color="red">Lez 17,18</font></a>)















</td>















</tr>































<tr>















<td width="79"><i><font color="#008000">#4<br>2 febb.</font></i></td>















<td width="121"><a name="I-Sett-4" href="#Sett-4">Unità 11</a></td>















<td width="219">Esercitazione 2 (Ricorsione)<br>







  (<a href="#L-19-20"><font color="red">Lez 19,20</font></a>)















</td>















<td width="213">















  Array dinamici<br>







  (<a href="#L-21-22"><font color="red">Lez 21,22</font></a>)















</td>















<td width="227">















  <p align="center">-------------</p>















</td>















</tr>































<tr>















<td width="79"><i><font color="#008000">#5<br>9 febb.</font></i></td>































</center>















































<td width="121">

  <p align="left"><a name="I-Sett-5" href="#Sett-5">Unità 11</a></p>

  </td>























<center>















<td width="219">















  <p align="center">-------------</p>















</td>















<td width="213">Stutture dati collegate lineari&nbsp;<br>







  (<a href="#L-23-24"><font color="red">Lez 23,24</font></a>)















</td>















<td width="227">Stutture dati collegate lineari&nbsp;<br>







  (<a href="#L-25-26"><font color="red">Lez 25,26</font></a>)















</td>















</tr>































<tr>















<td width="79"><i><font color="#008000">#6<br>16 febb.</font></i></td>















<td width="121">

  <p align="left"><a name="I-Sett-6" href="#Sett-6">Unità 11</a></p>

</td>















<td width="219" valign="top">Esercitazione 3<br>

 (Array Dinamici e Liste)<br>







  (<a href="#L-33-34"><font color="red">Lez 27,28</font></a>)















</td>















<td width="213" valign="top">Stutture dati collegate lineari&nbsp;<br>







  (<a href="#L-29-30"><font color="red">Lez 29,30</font></a>)















</td>















<td width="227" valign="top">Stutture dati collegate lineari&nbsp;<br>







  (<a href="#L-31-32"><font color="red">Lez 31,32</font></a>)















</td>















</tr>































<tr>















<td width="79"><i><font color="#008000">#7<br>23 febb.</font></i></td>















<td width="121"><a name="I-Sett-7" href="#Sett-7">Unità 11\<br>

  Unità12\<br>

  Unità9</a></td>















<td width="219">Esercitazione 4<br>

  (Liste - Esercizio d'esame)<br>







  (<a href="#L-33-34"><font color="red">Lez 33,34</font></a>)















</td>















<td width="213">Stutture dati collegate lineari&nbsp;--<br>

  Alberi<br>







  (<a href="#L-35-36"><font color="red">Lez 35,36</font></a>)















</td>















<td width="227">Gestione delle Eccezioni<br>

  (<a href="#L-37-38"><font color="red">Lez 37,38</font></a>)















</td>















</tr>































<tr>















<td width="79"><i><font color="#008000">#8<br>1 marzo</font></i></td>















<td width="121"><a name="I-Sett-8" href="#Sett-8">Unità12</a></td>















<td width="219">Esercitazione 5<br>

  (Liste - Esercizio d'esame)<br>







  (<a href="#L-39-40"><font color="red">Lez 39,40</font></a>)















</td>















<td width="213">Stutture dati collegate lineari&nbsp;<br>

  Esercizi Riepilogativi<br>







  (<a href="#L-41-42"><font color="red">Lez 41,42</font></a>)















</td>















<td width="227">Alberi Binari<br>

  (<a href="#L-43-44"><font color="red">Lez 43,44</font></a>)















</td>















</tr>































<tr>















<td width="79"><i><font color="#008000">#9<br>8 marzo</font></i></td>















<td width="121"><a name="I-Sett-9" href="#Sett-9">Unità12\<br>

  Unità13\<br>

  Unità14</a></td>















<td width="219">Esercitazione 6<br>

  (Esercizio d'esame)<br>







  (<a href="#L-45-46"><font color="red">Lez 45,46</font></a>)















</td>















<td width="213">&nbsp;Alberi Binari<br>

  (<a href="#L-49-50"><font color="red">Lez 47,48</font></a>)















</td>















<td width="227">Tipi astratti di dato<br>

  (<a href="#L-49-50"><font color="red">Lez 49,50</font></a>)















</td>















</tr>































<tr>















<td width="79"><i><font color="#008000">#10<br>15 marzo</font></i></td>















<td width="121"><a name="I-Sett-10" href="#Sett-10">

  Unità14</a></td>















<td width="219">Tipi astratti di dato +<br>
  Esercitazione 7 (in aula)<br>

  (Code - Esercizio d'esame)<br>







  (<a href="#L-53-54"><font color="red">Lez 51,52</font></a>)















</td>















<td width="213">Esercizitazione 8 (in aula)<br>
  (Esercizio d'esame)<br>







  (<a href="#L-53-54"><font color="red">Lez 53,54</font></a>)















</td>















<td width="227">&nbsp;















</td>















</tr>















































</table>































</center>















































<p>















<hr>































<center>















<h2>Dettaglio</h2>















<hr>































</center>























<P align="left"><b>Riferimenti ai testi</b><P align="left"><STRONG>[T1]</STRONG> <I>Lezioni di tecniche di programmazione</I>. Diego Calvanese, Giuseppe De 















Giacomo, Camil Demetrescu, Luca Iocchi, Daniele Nardi. ESCULAPIO, 2004.<br>







<STRONG>[T2]</STRONG> <I>Lezioni di fondamenti di informatica</I>. Diego Calvanese, Giuseppe De 















Giacomo, Camil Demetrescu, Luca Iocchi, Daniele Nardi. ESCULAPIO, 2003.<BR><STRONG>[D1]</STRONG>   Dispensa 1.







<a href="Dispense/Costo.html"><i>Costo dei programmi</i><br>















</a>















<STRONG>[D2]</STRONG>   Dispensa 2. <i><a href="Dispense/Ordinamento-1-per-pag.pdf">Algoritmi di ordinamento</a>















</i>































<P align="left">































<center>































</center>































<hr>















<b><a name="Sett-1" href="#I-Sett-1">Settimana 1</a>: Costo dei programmi ed







Algoritmi di ordinamento [D1;D2]</b>















<hr>































<p><a name="L-1-2"><b>Lezioni 1,2 - 14/01/2004</b></a>















&nbsp;















<ul>















  <li><b>Argomenti trattati [D1 - fino a studio del comportamento asintotico escluso]</b>















      <ul>















        <li>Presentazione del corso















        <li>Definizione di costo di un programma (rispetto al tempo o allo







          spazio)















        <li>Modello astratto di macchina















        <li>Caso peggiore, caso medio (cenni), dimensione dell'input















      </ul>















  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>















    <ul>







      <li>Determinare il costo di semplici programmi</li>







    </ul>







  <li><b>Esercizi proposti&nbsp;</b>







    <ul>







      <li>Esercizio 1 ed Esercizio 2&nbsp; della dispensa D1</li>







    </ul>







  </li>















</ul>















<hr>































<p><a name="L-3-4"><b>Lezioni 3,4 - 15/01/2004</b></a>















&nbsp;















<ul>















  <li><b>Argomenti trattati [D1 - fino a costo rispetto allo spazio escluso]</b>















      <ul>















        <li>Studio del comportamento asintotico del costo dei programmi: la







          notazione <i>O</i>-grande















        <li>L'operazione dominante















        <li>Ricerca Binaria















      </ul>















  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>















    <ul>







      <li>Determinare il comportamento asintotico del costo di programmi







        utilizzando la notazione <i>O</i>-grande</li>







    </ul>







  <li><b>Esercizi proposti</b>







    <ul>







      <li>Esercizi 4,5,6 e 7 della dispensa D1</li>







    </ul>







  </li>















</ul>















<hr>































<p><a name="L-5-6"><b>Lezioni 5,6 - 16/01/2004</b></a>















&nbsp;















<ul>















  <li><b>Argomenti trattati [D2 - fino all'algoritmo merge sort escluso]</b>















    <ul>







      <li>Algoritmi di ordinamento di una array







        <ul>







          <li>Ordinamento per selezione del minimo (selection sort)</li>







          <li>Ordinamento a bolle (bubble sort)</li>







          <li>Ordinamento per inserimento (insertion sort)</li>







        </ul>







    </ul>















  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>















    <ul>







      <li>sapere implementare in Java gli algoritmi di ordinamento presentati







        nella lezione</li>







    </ul>







  <li><b>Esercizi proposti</b>







    <ul>







      <li><a href="Esercizi/esercizi_16_01.html">Esercizi</a></li>







    </ul>







  </li>















</ul>































<p>&nbsp;































<hr>















<b><a name="Sett-2" href="#I-Sett-2">Settimana 2</a>: Ricorsione [T1 Unità 10]</b>















<hr>































<p><a name="L-7-8"><b>Lezioni 7,8 - 21/01/2004</b></a>















 <b>[Esercitazione in Laboratorio]</b>















<ul>















  <li><b><a href="Esercitazioni/Esercitazione1">Esercitazione su ordinamento e







    lettura e scrittura da file</a></b>















</ul>















<hr>































<p><a name="L-9-10"><b>Lezioni 9,10 - 22/01/2004</b></a>















&nbsp;















<ul>















  <li><b>Argomenti trattati [T1 - Unità 10 fino a 10.8 escluso]</b>















    <ul>







      <li>domini definiti induttivamente (naturali, stringhe, file, ...)







      <li>funzioni ricorsive







      <li>metodi ricorsivi</li>







    </ul>















  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>















    <ul>







      <li>sapere come si definisce un dominio in modo induttivo







      <li>sapere caratterizzare in modo ricorsivo un'operazione che opera su un







        dominio definito induttivamente







      <li>sapere progettare e implementare in Java semplici metodi ricorsivi che







        operano sui naturali e sulle stringhe</li>







    </ul>







  <li><b>Esercizi proposti</b>







    <ul>







      <li><a href="Esercizi/esercizi_22_01.html">Esercizi</a></li>







    </ul>







  </li>















</ul>































<hr>































<p><a name="L-11-12"><b>Lezioni 11,12 - 23/01/2004</b></a>















<b> [T1 - Unità 10: 10.8;10.14-10.18]</b>















<ul>















  <li><b>Argomenti trattati</b>















      <ul>















        <li>esempi di metodi ricorsivi che fanno uso di ricorsione semplice</li>















        <li>record di attivazione















        <li>evoluzione della pila dei record di attivazione&nbsp;















      </ul>















  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>















    <ul>







      <li>conoscere le nozioni di record di attivazione e di pila dei record di







        attivazione</li>







      <li>avere compreso come dette nozioni supportano l'invocazione di metodi







        nei programmi, in particolare nel caso di metodi ricorsivi</li>







    </ul>















  <li><b>Esercizi proposti</b>







    <ul>







      <li><a href="Esercizi/esercizi_23_01.html">Esercizi</a></li>







    </ul>







  </li>















</ul>































<hr>















<b><a name="Sett-3" href="#I-Sett-3">Settimana 3</a>: Ricorsione [T1 Unità 10]</b>















<hr>















































<p><a name="L-13-14"><b>Lezioni 13,14 - 28/01/2004</b></a>















&nbsp;















<ul>















  <li><b>Argomenti trattati [T1 - Unità 10: 10.14-10.18; D1 - costo rispetto







    allo spazio]</b>















      <ul>















        <li>evoluzione della pila dei record di attivazione durante l'esecuzione







          di metodi: <a href="Esercizi/provaStackSistema/Stack.java">programma







          di esempio</a>















        <li>evoluzione della pila dei record di attivazione durante l'esecuzione







          di metodi ricorsivi: <a href="Esercizi/provaStackSistema/Fattoriale.java">programma







          di esempio</a>















        <li>costo dei programmi rispetto alla risorsa di calcolo spazio















      </ul>















  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>















    <ul>







      <li>essere in grado di analizzare l'evoluzione dello stack tramite il







        debugger di BlueJ</li>







      <li>saper calcolare il costo di semplici programmi (ricorsivi) rispetto







        allo spazio&nbsp;</li>







    </ul>















</ul>































<hr>















































<p><a name="L-15-16"><b>Lezioni 15,16 - 29/01/2004</b></a>















 <b> [T1 - Unità 10: 10.9-10.13,10.19-10.24 ]</b>















<ul>















  <li><b>Argomenti trattati</b>















      <ul>















        <li>Metodi ricorsivi















        <li>Ricorsione multipla















      </ul>















  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>















    <ul>







      <li>sapere progettare e implementare in Java metodi ricorsivi su naturali,







        stringhe e file</li>







      <li>saper progettare e implementare metodi che fanno uso di ricorsione







        multipla&nbsp;</li>







    </ul>























  <li><b>Esercizi proposti</b>







    <ul>







      <li><a href="Esercizi/esercizi_29_01.html">Esercizi</a></li>







    </ul>







  </li>















</ul>































<hr>















































<p><a name="L-17-18"><b>Lezioni 17,18 - 30/01/2004</b></a>















 <b> [T1 - Unità 10]</b>















<ul>







  <li><b>Argomenti trattati</b>&nbsp;







    <ul>







      <li>esercizi su ricorsione</li>







    </ul>























  <li><b>Esercizi proposti</b>







    <ul>







      <li><a href="Esercizi/esercizi_30_01.html">Esercizi</a></li>







    </ul>







  </li>















</ul>































<!--  







  <li><b>Esercizi proposti</b>







    <ul>







      <li><a href="http://www.dis.uniroma1.it/~calvanes/didattica/02-03-fond-inf/esercizi/ricorsione/array/">metodi







        ricorsivi sugli array (con soluzioni)</a>







      <li>metodo statico che, presa in ingresso una stringa, stampa tutte le







        stringhe ottenute permutandone i caratteri (esercizio 7 sulle <a href="http://www.dis.uniroma1.it/~calvanes/didattica/02-03-fond-inf/esercizi/ricorsione/stringhe/">stringhe)</a></li>







    </ul>







  </li>







-->































<hr>















<b><a name="Sett-4" href="#I-Sett-4">Settimana 4</a>: Ricorsione -- Array

Dinamici [T1 Unità 10 -- Unità 11]</b>















<hr>































<p><a name="L-19-20"><b>Lezioni 19,20 - 21/01/2004</b></a>















 <b>[Esercitazione in Laboratorio]</b>















<ul>















  <li><b><a href="Esercitazioni/Esercitazione2">Esercitazione su ricorsione</a></b>















</ul>







<hr>







<p><a name="L-21-22"><b>Lezioni 21,22 - 22/01/2004</b></a>







 <b>[T1 - Unità 11: 11.1-11.4]



</b>







<ul>







  <li><b>Argomenti trattati</b>















    <ul>







      <li>uso di array dinamici per la gestione di collezioni di elementi</li>







    </ul>















</ul>











<ul>







  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>



    <ul>



      <li>quali sono i vantaggi e gli svantaggi dell'uso di array per la



        gestione di collezioni di elementi</li>



      <li>come usare array dinamici per la gestione di collezioni di elementi</li>



    </ul>















</ul>











<ul>



  <li><b>Esercizi svolti</b>



    <ul>



      <li>gestione di un dizionario di dimensione massima fissata: <a href="Esercizi/ArrayDinamici/Dizionario1.txt">specifica</a>,



        <a href="Esercizi/ArrayDinamici/Cliente1.java">esempio d'uso</a>, <a href="Esercizi/ArrayDinamici/Dizionario1.java">soluzione</a>



      <li>gestione di un dizionario che può contenere un numero arbitrario di



        voci: <a href="Esercizi/ArrayDinamici/Dizionario2.txt">specifica</a>, <a href="Esercizi/ArrayDinamici/Cliente2.java">esempio



        d'uso</a>, <a href="Esercizi/ArrayDinamici/Dizionario2.java">soluzione</a></li>



    </ul>



  <li><b>Esercizi proposti</b>



    <ul>



      <li>gestione di un dizionario che può contenere un numero arbitrario di



        voci, mantenendo le voci ordinate <a href="Esercizi/ArrayDinamici/Dizionario3.txt">specifica</a>,



        <a href="Esercizi/ArrayDinamici/Cliente3.java">esempio d'uso</a>, <a href="Esercizi/ArrayDinamici/Cliente3bis.java">altro



        esempio d'uso</a>, <a href="Esercizi/ArrayDinamici/Dizionario3.java">soluzione</a></li>



    </ul>



  </li>



</ul>































<hr>















<b><a name="Sett-5" href="#I-Sett-5">Settimana 5</a>: Strutture Collegate

Lineari [T1 Unità 11]</b>















<hr>































<p><a name="L-23-24"><b>Lezioni 23,24 - 12/02/2004</b></a>







 <b>[T1 - Unità 11:11.5-11.17]



</b>







<ul>

  <li><b>Argomenti trattati</b>

    <ul>

      <li>Introduzione alle strutture collegate lineari (o sempicemente liste)

      <li>Metodi di inserimento ed eliminazione in testa per le liste

    </ul>

  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>:

    <ul>

      <li>Conoscere la struttura delle liste</li>

      <li>Sapere progettare a realizzare in Java semplici metodi l'inserimento e

        l'eliminazione di elementi dalla lista</li>

    </ul>

  </li>

</ul>























<hr>































<p><a name="L-25-26"><b>Lezioni 25,26 - 13/02/2004</b></a>







 <b>[T1 - Unità 11:11.18]</b>







<ul>

  <li><b>Argomenti trattati</b>

    <ul>

      <li>Metodi di visita su liste: la funzione stampaLista

      <li>La funzione leggiLista</li>

      <li>Uso del &quot;nodo generatore&quot;</li>

      <li>Metodi di inserimento ed eliminazione in posizione arbitraria

    </ul>

  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>:

    <ul>

      <li>Sapere progettare a realizzare in Java metodi complessi che fanno uso

        di liste</li>

    </ul>

  </li>



  <li><b>Esercizi svolti</b>



    <ul>



      <li>La classe <a href="Esercizi/Liste/UsaNodoLista.java">UsaNodoLista</a>,

        <a href="Esercizi/Liste/ClienteNodoLista.java">esempio d'uso</a>



    </ul>



  <li><b>Esercizi proposti</b>











<ul>



  <li>Aggiungere alla classe UsaNodoLista i seguenti metodi statici

    <ul>

      <li>metodo che riceve in ingresso un oggetto di classe NodoLista e

        restituisce la lunghezza della lista</li>

      <li>metodo che riceve in ingresso un oggetto di classe NodoLista ed una

        stringa s, e restituisce true se s è contenuta nella lista, false

        altrimenti</li>

      <li>metodo che riceve in ingresso un file (passato come BufferedReader) e

        restituisce una lista contenente le righe del file in ordine inverso

        rispetto all'ordine di lettura (ad esempio, se dal file vengono lette le

        tre righe &quot;x&quot;, &quot;y&quot; e &quot;z&quot; (nell'ordine

        indicato), il metodo deve restituire in output una lista il cui primo

        nodo contiene &quot;z&quot;, il secondo &quot;x&quot; ed il terzo

        &quot;y&quot; )</li>

      <li>metodo statico che riceve un oggetto di classe NodoLista e restituisce

        una lista che ne è la copia.</li>

    </ul>



    <p><a href="Esercizi/Liste/UsaNodoLista2.java">Soluzione<br>

    </a><br>



  </li>



  <li>Realizzare una classe per la gestione di un dizionario che può contenere un numero arbitrario di

    voci (vedi Lezioni <a href="#L-21-22">21,22</a>) tramite l'uso di liste: <a href="Esercizi/ArrayDinamici/Dizionario2.txt">specifica</a>,

    <a href="Esercizi/Liste/ClienteDizionario.java">esempio



        d'uso</a>, <a href="Esercizi/Liste/DizionarioLista.java">soluzione</a>&nbsp;</li>



</ul>























  </li>

</ul>































<hr>





<b><a name="Sett-6" href="#I-Sett-6">Settimana 6</a>: Strutture Collegate Lineari [T1

Unità 11]</b>















<hr>































<p><a name="L-27-28"><b>Lezioni 27,28 - 18/02/2004</b></a>















 <b>[Esercitazione in Laboratorio]</b>















<ul>















  <li><b><a href="Esercitazioni/Esercitazione3">Esercitazione su array dinamici

    e liste</a></b>















</ul>























<hr>































<p><a name="L-29-30"><b>Lezioni 29,30 - 19/02/2004</b></a>







 <b>[T1 - Unità 11: 11.19-11.23]



</b>







<ul>

  <li><b>Argomenti trattati</b>

    <ul>

      <li>Accesso ad elementi di una lista tramite posizione: inserimento,

        ricerca e modifica

      <li>Metodi ricorsivi su liste: ricerca, eliminazione inserimento di un

        elemento in posizione k</li>

    </ul>

  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>:

    <ul>

      <li>Sapere progettare a realizzare in Java metodi che manipolano le liste

        utilizzando la ricorsione</li>

    </ul>

  </li>



  <li><b>Esercizi proposti</b>











<ul>



  <li>Realizzare i metodi per copiare, stampare, leggere una lista da file

    facendo uso della ricorsione



  </li>



  <li>Realizzare i metodi per la concatenazione di due liste (nella versione con

    condivisione di memoria e senza condivisione di memoria)&nbsp; facendo uso

    della ricorsione (paragrafo)</li>

  <li>Realizzare un metodo che riceve in input una lista l e restituisce in

    output una lista ottenuta invertendo gli elementi di l. Proponete una

    soluzione iterativa ed una che fa uso della ricorsione (usate uno schema che

    mantiene condivisione di memoria fra gli oggetti manipolati)<br>

    <br>

    <a href="Esercizi/Liste/InvertiLista.java">Soluzione Inverti Lista</a>&nbsp;

    (per la soluzione degli altri esercizi fare riferimento a [T1])</li>



</ul>























  </li>

</ul>































<hr>































<p><a name="L-31-32"><b>Lezioni 31,32 - 19/02/2004</b></a>







 <b>[T1 - Unità 11: 11.24-11.37]



</b>







<ul>

  <li><b>Argomenti trattati</b>

    <ul>

      <li>Esempio di strutture collegate lineari: la classe <code>SequenzaStringhe

        <a href="Esercizi/Liste/listaStringhe.html">(ListaStringhe e

        ListaStringheF utilizzate in classe)</a></code>

      <li>Gli schemi realizzativi: implementazione con side-effect ed

        implementazione funzionale</li>

      <li>Condivisione di memoria ed interferenza</li>

      <li>Differenza fra interferenza e sharing</li>

    </ul>

  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>:

    <ul>

      <li>Conoscere la differenza fra realizzazione con side effect e

        realizzazione funzionale.&nbsp;</li>

      <li>Avere compreso la nozione di interferenza, e la nozione di sharing</li>

    </ul>

  </li>



</ul>































<hr>





<b><a name="Sett-7" href="#I-Sett-7">Settimana 7</a>: Strutture Collegate Lineari [T1

Unità 11] -- Alberi </b>















<b> [T1

Unità 12] -- Gestione delle eccezioni [T2

Unità 9]</b>















<hr>































<p><a name="L-33-34"><b>Lezioni 33,34 - 25/02/2004</b></a>















 <b>[Esercitazione in Laboratorio]</b>















<ul>















  <li><b><a href="Esercitazioni/Esercitazione4">Esercitazione su liste</a>

    (Esercizio d'esame)</b>















</ul>























<hr>































<p><a name="L-35-36"><b>Lezioni 35,36 - 26/02/2004</b></a>







 <b>[T1 - Unità 11: 11.38-11.40; Unità 12: 12.1 -12.5]



</b>







<ul>

  <li><b>Argomenti trattati</b>

    <ul>

      <li>Strutture collegate lineari: implementazione ricorsiva di metodi con

        side-effect e funzionali con condivisione di memoria&nbsp;<code>  <a href="Esercizi/Liste/SequenzaStringheR-and-FR.html">(ListaStringheR

        e ListaStringheFR usate in classe)</a></code>

      <li>Alberi: definizione di albero; alberi binari: definizione induttiva di

        albero binario; rappresentazione indicizzata</li>

    </ul>

  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>:

    <ul>

      <li>Implementare in maniera ricorsiva metodi di classi realizzate con

        schema side-effect o funzionale.&nbsp;</li>

      <li>Avere compreso la nozione di albero, albero binario e rappresentazione

        indicizzata.</li>

    </ul>

  </li>



</ul>































<hr>































<p><a name="L-37-38"><b>Lezioni 37,38 - 27/02/2004</b></a>







 <b>[T2 - Unità 9]



</b>







<ul>

  <li><b>Argomenti trattati</b>

    <ul>

      <li>le eccezioni in Java

      <li>dichiarazione di eccezioni</li>

      <li>lanciare eccezioni (istruzione <code>throw</code>)</li>

      <li>catturare eccezioni (istruzione <code>try-catch</code>)</li>

    </ul>

  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>:

    <ul>

      <li>cosa sono e come si classificano le eccezioni&nbsp;</li>

      <li>come si gestiscono gli errori nei programmi attraverso l'uso di

        eccezioni</li>

    </ul>

  </li>



  <li><b>Esercizi proposti</b>

    <ul>

      <li>

Si definisca una nuova eccezione <TT>EccezioneSequenzaInteri</TT> che consenta di gestire eventuali eccezioni che si possono verificare durante l'esecuzione di metodi di una classe <TT>SequenzaInteri</TT>, che a sua volta consente di memorizzare una sequenza di interi tramite strutture collegate lineari.<br>

<ol>

<li>Definire un costruttore per la classe <TT>SequenzaInteri</TT> che legge gli interi da un file (memorizzati uno per riga), il cui nome è passato come parametro al costruttore. Il costruttore deve ignorare valori non interi letti dal file.</li>

<li>Definire un metodo che presi in input la posizione <TT>k</TT> ed intero <TT>x</TT>, pone ad <TT>x</TT> il k-esimo elemento della sequenza di interi. Se <TT>k</TT> indica una posizione non valida della sequenza, il metodo deve lanciare una eccezione</li>

</ol>

<p><a href="Esercizi/Eccezioni">Soluzione</a>

</li>

    </ul>

  </li>



</ul>































<hr>





<a name="Sett-8" href="#I-Sett-8">





<b>Settimana 8</a>: Alberi [T1

Unità 12]&nbsp;</b>















<hr>































<p><a name="L-39-40"><b>Lezioni 39,40 - 3/03/2004</b></a>















 <b>[Esercitazione in Laboratorio]</b>















<ul>















  <li><b><a href="Esercitazioni/Esercitazione5">Esercitazione su liste</a>

    (Esercizio d'esame)</b>















</ul>























<hr>































<p><a name="L-41-42"><b>Lezioni 41,42 - 4/03/2004</b></a> <b>[Annullata]</b>















<ul>















  <li><b><a href="Esercizi/Liste/EserciziListe">Esercizi di Riepilogo sulle

    liste&nbsp;</a></b>















</ul>























<hr>































<p><a name="L-43-44"><b>Lezioni 43,44 - 5/03/2004</b></a> <b>[T1

Unità 12: 12.1-12.4,12.7,12.6-12.14]</b>















<ul>

  <li><b>Argomenti trattati</b>

    <ul>

      <li>Alberi, alberi binari, definizione induttiva di alberi binari

      <li>Rappresentazione collegata di alberi binari

      <li>Visita in preordine, postordine, simmetrica di alberi binari

      <li>Metodi basati su visita di alberi binari.

    </ul>

  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>:

    <ul>

      <li>Conoscere le nozioni di base sugli alberi binari

      <li>Sapere progettare a realizzare in Java semplici metodi su alberi

        binari</li>

    </ul>

  </li>

  <li><b>Esercizi svolti</b>

    <ul>

      <li>calcolo della profondità di un albero [T1 - 12.13]

      <li>verifica della presenza di un dato elemento nell'albero [T1 - 12.14]

      <li>conta i nodi dell'albero (<a href="Esercizi/AlberiBin/ContaNodi.java">soluzione</a>)

      <li>conta le foglie dell'albero (<a href="Esercizi/AlberiBin/ContaFoglie.java">soluzione</a>)



    </ul>



  <li><b>Esercizi proposti</b>



    <ul>

      <li>realizzare un metodo statico che preso in input un albero binario, restituire una lista contenente le foglie dell'albero.

        (<a href="Esercizi/AlberiBin/ListaFoglie.java">soluzione</a>)



    </ul>

</ul>































&nbsp;































<hr>





<a name="Sett-9" href="#I-Sett-9">





<b>Settimana 9</b></a><b>: Alberi - Tipi di dato Astratto [T1

Unità 12-13-14]&nbsp;</b>















<hr>































<p><a name="L-45-46"><b>Lezioni 45,46 - 10/03/2004</b></a>















 <b>[Esercitazione in Laboratorio]</b>















<ul>















  <li><b><a href="Esercitazioni/Esercitazione6">Esercitazione</a>

    (Esercizio d'esame)</b>















</ul>























<hr>































<p><a name="L-47-48"><b>Lezioni 47,48 - 11/03/2004</b></a>  <b>[T1

Unità 12: 12.8, 12.15-12.17]</b>















<ul>

  <li><b>Argomenti trattati</b>

    <ul>

      <li>Rappresentazione parentetica di alberi binari</li>

      <li>Costruzione di un albero binario da rappresentazione parentetica</li>

      <li>Espressioni aritmetiche mediante alberi binari

      <li><a href="Esercizi/AlberiBin/Alberi.html">lucidi proiettati in classe</a>

        (alcune modifiche rispetto al libro di testo [T1])

    </ul>

  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>:

    <ul>

      <li>Aver compreso la nozione di rappresentazione parentetica

      <li>Sapere progettare a realizzare in Java semplici metodi su espressioni

        aritmetiche rappresentate mediante alberi</li>

    </ul>

  </li>

  <li><b>Esercizi svolti</b>

    <ul>

      <li>stampa della rappresentazione parentetica (<a href="Esercizi/AlberiBin/stampaAlb.java">soluzione</a>)

      <li>scrivere un metodo statico <code>esp2string</code> che preso in input

        un albero binario che rappresenta una espressione, restituisce

        l'espressione sotto forma di stringa (potete assumere che l'albero

        contenga una espressione legale). (<a href="Esercizi/AlberiBin/espToString.java">soluzione</a>)



    </ul>



  <li><b>Esercizi proposti</b>



    <ul>

      <li>Scrivere un metodo statico <code>string2esp</code> che preso in input

        una espressione (stringa) costruisce (e restituisce) l'albero che la

        rappresenta. Si assuma che le parentesi della espressione siano tutte

        esplicitamente scritte (ad esempio 3 + 3 * 4 = ( 3 + ( 3 * 4 ) ).

        Assumete inoltre che ogni carattere sia separato da uno spazio.

      <li>scrivere un metodo statico che, preso in input un albero binario,

        restituisce un albero che ne è la copia esatta.</li>

      <li>risolvere gli esercizi sul libro di testo (<b>[T1]</b>) 12.2, 12.4,

        12.5, 12.7, 12.8.</li>



    </ul>

</ul>































<hr>































<p><a name="L-49-50"><b>Lezioni 49,50 - 12/03/2004</b></a>  <b>[T1

Unità 13: </b><b>13.1-13.21--</b><b>Unità 14: </b><b>14.3-14.8]</b>
<ul>
  <li><b>Argomenti trattati</b>&nbsp;
    <ul>
      <li>tipi astrazione di valori e tipi astrazione di entità
      <li>realizzazione di tipi astratti di dato
        <ul>
          <li>con side-effect senza condivisione di memoria
          <li>funzionale con condivisione di memoria</li>
        </ul>
      </li>
      <li>esempi di realizzazione di tipi astratti di dato (<i>Insieme</i>, <i>Lista</i>,
        <i>Pila</i>)</li>
    </ul>
  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>
    <ul>
      <li>conoscere la distinzione tra tipi astrazione di valori e tipi
        astrazione di entità
      <li>conoscere la metodologia di realizzazione di tipi astratti di dato</li>
    </ul>
  </li>
      <li><b>Esercizi svolti</b>
        <ul>
          <li>Realizzazione del tipo astratto Pila: schema con side-effect e
            schema funzionale</li>
  </ul>



  <li><b>Esercizi proposti</b>



    <ul>
      <li>Realizzare il tipo di dato astratto Pila facendo uso di array
        dinamici: si fornisca una soluzione con side-effect ed una con schema
        funzionale&nbsp; (<a href="Esercizi/Pile/PilaA.java">PilaA,</a> <a href="Esercizi/Pile/TestPilaA.java">Cliente
        PilaA</a>, <a href="Esercizi/Pile/PilaAF.java">PilaAF</a>, <a href="Esercizi/Pile/TestPilaAF.java">Cliente
        PilaAF</a>)</li>
    </ul>
  </li>



    </ul>































&nbsp;































<hr>





<a name="Sett-10" href="#I-Sett-10">





<b>Settimana 10</b></a><b>: Tipi di dato Astratto [T1

Unità 14] -- Esercizi d'esame&nbsp;</b>















<hr>































<p><a name="L-51-52"><b>Lezioni 51,52 - 17/03/2004</b></a>















 <b>[</b><b>T1

Unità 14: 14.9,14.10 + </b><b>Esercitazione 7]</b>















<ul>















  <li>Il tipo astratto di dato Coda<br>















  <li><b><a href="Esercitazioni/Esercitazione7">Esercitazione</a>

    (Esercizio d'esame)<br>
    </b>















  <li><b>Cosa lo studente dovrebbe sapere dopo la lezione</b>
    <ul>
      <li>conoscere il tipo astratto coda
      <li>essere in grado di risolvere esercizi d'esame</li>
    </ul>
  </li>















</ul>























<hr>































<p><a name="L-53-54"><b>Lezioni 53,54 - 18/03/2004</b></a>















 <b>[</b><b>Esercitazione 8 in aula]</b>















<ul>















  <li><b><a href="Esercitazioni/Esercitazione8">Esercitazione</a>

    (Esercizio d'esame)</b>















</ul>























<hr>































<p>































<a href="index.html">home page del corso</a>































</p>































</body>















</html>































<!--















  -- Local Variables:















  -- save-place: t















  -- End:















-->















